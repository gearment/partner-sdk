// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: common/media/v1/media.proto

package mediav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MediaUsage int32

const (
	MediaUsage_MEDIA_USAGE_UNSPECIFIED                             MediaUsage = 0
	MediaUsage_MEDIA_USAGE_TEAM_AVATAR_IMPORT                      MediaUsage = 1
	MediaUsage_MEDIA_USAGE_TEAM_AVATAR_UPLOAD                      MediaUsage = 6
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_IMPORT_ORDER_BARCODE      MediaUsage = 2
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_IMPORT_ORDER_LABEL        MediaUsage = 3
	MediaUsage_MEDIA_USAGE_TEAM_ARTWORK_IMPORT                     MediaUsage = 4
	MediaUsage_MEDIA_USAGE_TEAM_ARTWORK_UPLOAD                     MediaUsage = 7
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_ORDER_BARCODE      MediaUsage = 8
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_ORDER_LABEL        MediaUsage = 9
	MediaUsage_MEDIA_USAGE_USER_AVATAR_IMPORT                      MediaUsage = 10
	MediaUsage_MEDIA_USAGE_USER_AVATAR_UPLOAD                      MediaUsage = 11
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_ORDER_IMPORT       MediaUsage = 12
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_PRODUCT_IMPORT     MediaUsage = 13
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_PAYMENT_EVIDENCE   MediaUsage = 14
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_EXPORT_ARTWORK            MediaUsage = 15
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_EXPORT_PRODUCT            MediaUsage = 16
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_EXPORT_ORDER              MediaUsage = 17
	MediaUsage_MEDIA_USAGE_TEAM_PRODUCT_IMAGE_IMPORT               MediaUsage = 18
	MediaUsage_MEDIA_USAGE_TEAM_ORDER_IMAGE_IMPORT                 MediaUsage = 19
	MediaUsage_MEDIA_USAGE_TEAM_GIFT_MESSAGE_EXPORT_FOR_ORDER      MediaUsage = 20
	MediaUsage_MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_TRANSACTION_EXPORT MediaUsage = 21
	MediaUsage_MEDIA_USAGE_TEAM_PRODUCT_MOCKUP                     MediaUsage = 22
)

// Enum value maps for MediaUsage.
var (
	MediaUsage_name = map[int32]string{
		0:  "MEDIA_USAGE_UNSPECIFIED",
		1:  "MEDIA_USAGE_TEAM_AVATAR_IMPORT",
		6:  "MEDIA_USAGE_TEAM_AVATAR_UPLOAD",
		2:  "MEDIA_USAGE_TEAM_DOCUMENT_IMPORT_ORDER_BARCODE",
		3:  "MEDIA_USAGE_TEAM_DOCUMENT_IMPORT_ORDER_LABEL",
		4:  "MEDIA_USAGE_TEAM_ARTWORK_IMPORT",
		7:  "MEDIA_USAGE_TEAM_ARTWORK_UPLOAD",
		8:  "MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_ORDER_BARCODE",
		9:  "MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_ORDER_LABEL",
		10: "MEDIA_USAGE_USER_AVATAR_IMPORT",
		11: "MEDIA_USAGE_USER_AVATAR_UPLOAD",
		12: "MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_ORDER_IMPORT",
		13: "MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_PRODUCT_IMPORT",
		14: "MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_PAYMENT_EVIDENCE",
		15: "MEDIA_USAGE_TEAM_DOCUMENT_EXPORT_ARTWORK",
		16: "MEDIA_USAGE_TEAM_DOCUMENT_EXPORT_PRODUCT",
		17: "MEDIA_USAGE_TEAM_DOCUMENT_EXPORT_ORDER",
		18: "MEDIA_USAGE_TEAM_PRODUCT_IMAGE_IMPORT",
		19: "MEDIA_USAGE_TEAM_ORDER_IMAGE_IMPORT",
		20: "MEDIA_USAGE_TEAM_GIFT_MESSAGE_EXPORT_FOR_ORDER",
		21: "MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_TRANSACTION_EXPORT",
		22: "MEDIA_USAGE_TEAM_PRODUCT_MOCKUP",
	}
	MediaUsage_value = map[string]int32{
		"MEDIA_USAGE_UNSPECIFIED":                             0,
		"MEDIA_USAGE_TEAM_AVATAR_IMPORT":                      1,
		"MEDIA_USAGE_TEAM_AVATAR_UPLOAD":                      6,
		"MEDIA_USAGE_TEAM_DOCUMENT_IMPORT_ORDER_BARCODE":      2,
		"MEDIA_USAGE_TEAM_DOCUMENT_IMPORT_ORDER_LABEL":        3,
		"MEDIA_USAGE_TEAM_ARTWORK_IMPORT":                     4,
		"MEDIA_USAGE_TEAM_ARTWORK_UPLOAD":                     7,
		"MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_ORDER_BARCODE":      8,
		"MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_ORDER_LABEL":        9,
		"MEDIA_USAGE_USER_AVATAR_IMPORT":                      10,
		"MEDIA_USAGE_USER_AVATAR_UPLOAD":                      11,
		"MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_ORDER_IMPORT":       12,
		"MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_PRODUCT_IMPORT":     13,
		"MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_PAYMENT_EVIDENCE":   14,
		"MEDIA_USAGE_TEAM_DOCUMENT_EXPORT_ARTWORK":            15,
		"MEDIA_USAGE_TEAM_DOCUMENT_EXPORT_PRODUCT":            16,
		"MEDIA_USAGE_TEAM_DOCUMENT_EXPORT_ORDER":              17,
		"MEDIA_USAGE_TEAM_PRODUCT_IMAGE_IMPORT":               18,
		"MEDIA_USAGE_TEAM_ORDER_IMAGE_IMPORT":                 19,
		"MEDIA_USAGE_TEAM_GIFT_MESSAGE_EXPORT_FOR_ORDER":      20,
		"MEDIA_USAGE_TEAM_DOCUMENT_UPLOAD_TRANSACTION_EXPORT": 21,
		"MEDIA_USAGE_TEAM_PRODUCT_MOCKUP":                     22,
	}
)

func (x MediaUsage) Enum() *MediaUsage {
	p := new(MediaUsage)
	*p = x
	return p
}

func (x MediaUsage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaUsage) Descriptor() protoreflect.EnumDescriptor {
	return file_common_media_v1_media_proto_enumTypes[0].Descriptor()
}

func (MediaUsage) Type() protoreflect.EnumType {
	return &file_common_media_v1_media_proto_enumTypes[0]
}

func (x MediaUsage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaUsage.Descriptor instead.
func (MediaUsage) EnumDescriptor() ([]byte, []int) {
	return file_common_media_v1_media_proto_rawDescGZIP(), []int{0}
}

var File_common_media_v1_media_proto protoreflect.FileDescriptor

var file_common_media_v1_media_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x2a, 0xdc,
	0x07, 0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x17, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x45,
	0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x41,
	0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x22,
	0x0a, 0x1e, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45,
	0x41, 0x4d, 0x5f, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44,
	0x10, 0x06, 0x12, 0x32, 0x0a, 0x2e, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x41, 0x52,
	0x43, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x12, 0x30, 0x0a, 0x2c, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f,
	0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x52, 0x54,
	0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x04, 0x12, 0x23, 0x0a,
	0x1f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41,
	0x4d, 0x5f, 0x41, 0x52, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44,
	0x10, 0x07, 0x12, 0x32, 0x0a, 0x2e, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x42, 0x41, 0x52,
	0x43, 0x4f, 0x44, 0x45, 0x10, 0x08, 0x12, 0x30, 0x0a, 0x2c, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f,
	0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x10, 0x09, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x56, 0x41,
	0x54, 0x41, 0x52, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x0a, 0x12, 0x22, 0x0a, 0x1e,
	0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x41, 0x56, 0x41, 0x54, 0x41, 0x52, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x0b,
	0x12, 0x31, 0x0a, 0x2d, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x54, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52,
	0x54, 0x10, 0x0c, 0x12, 0x33, 0x0a, 0x2f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f,
	0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x0d, 0x12, 0x35, 0x0a, 0x31, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x50, 0x41, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x56, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x0e, 0x12,
	0x2c, 0x0a, 0x28, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54,
	0x45, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x41, 0x52, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x0f, 0x12, 0x2c, 0x0a,
	0x28, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41,
	0x4d, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x10, 0x12, 0x2a, 0x0a, 0x26, 0x4d,
	0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x5f,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x11, 0x12, 0x29, 0x0a, 0x25, 0x4d, 0x45, 0x44, 0x49, 0x41,
	0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x43, 0x54, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x12, 0x12, 0x27, 0x0a, 0x23, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x13, 0x12, 0x32, 0x0a, 0x2e, 0x4d,
	0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f,
	0x47, 0x49, 0x46, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x58, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x14, 0x12,
	0x37, 0x0a, 0x33, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54,
	0x45, 0x41, 0x4d, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x4c,
	0x4f, 0x41, 0x44, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x15, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x5f, 0x4d, 0x4f, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x16, 0x42, 0xbf, 0x01,
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x65, 0x61, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x61, 0x2d, 0x6e, 0x65, 0x78,
	0x74, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x4d, 0x58, 0xaa, 0x02, 0x0f, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x3a, 0x3a, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_common_media_v1_media_proto_rawDescOnce sync.Once
	file_common_media_v1_media_proto_rawDescData []byte
)

func file_common_media_v1_media_proto_rawDescGZIP() []byte {
	file_common_media_v1_media_proto_rawDescOnce.Do(func() {
		file_common_media_v1_media_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_media_v1_media_proto_rawDesc), len(file_common_media_v1_media_proto_rawDesc)))
	})
	return file_common_media_v1_media_proto_rawDescData
}

var file_common_media_v1_media_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_media_v1_media_proto_goTypes = []any{
	(MediaUsage)(0), // 0: common.media.v1.MediaUsage
}
var file_common_media_v1_media_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_media_v1_media_proto_init() }
func file_common_media_v1_media_proto_init() {
	if File_common_media_v1_media_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_media_v1_media_proto_rawDesc), len(file_common_media_v1_media_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_media_v1_media_proto_goTypes,
		DependencyIndexes: file_common_media_v1_media_proto_depIdxs,
		EnumInfos:         file_common_media_v1_media_proto_enumTypes,
	}.Build()
	File_common_media_v1_media_proto = out.File
	file_common_media_v1_media_proto_goTypes = nil
	file_common_media_v1_media_proto_depIdxs = nil
}
