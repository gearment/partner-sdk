{
  "openapi": "3.1.0",
  "info": {
    "contact": {
      "email": "engineering@gearment.com",
      "name": "Gearment Engineering Team",
      "url": "https://gearment.com"
    },
    "license": {},
    "termsOfService": "https://gearment.com/integration/api-terms-of-service.html",
    "title": "api.catalog.v1",
    "version": "3.0.0"
  },
  "servers": [
    {
      "url": "https://api.dev.geadev.com/{serviceName}",
      "description": "Staging Server",
      "variables": {
        "serviceName": {
          "default": "iam",
          "enum": [
            "iam",
            "product",
            "seller"
          ],
          "description": "The service name"
        }
      }
    },
    {
      "url": "http://localhost:{servicePort}",
      "description": "Local Server",
      "variables": {
        "servicePort": {
          "default": "9000",
          "description": "The port number"
        }
      }
    }
  ],
  "paths": {
    "/api.catalog.v1.InternalVendorCatalogAPI/InternalVendorListCatalog": {
      "post": {
        "tags": [
          "api.catalog.v1.InternalVendorCatalogAPI"
        ],
        "summary": "InternalVendorListCatalog",
        "operationId": "api.catalog.v1.InternalVendorCatalogAPI.InternalVendorListCatalog",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.catalog.v1.InternalVendorListCatalogRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.catalog.v1.VendorListCatalogResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api.catalog.v1.InternalVendorCatalogAPI/InternalVendorListCatalogVariant": {
      "post": {
        "tags": [
          "api.catalog.v1.InternalVendorCatalogAPI"
        ],
        "summary": "InternalVendorListCatalogVariant",
        "operationId": "api.catalog.v1.InternalVendorCatalogAPI.InternalVendorListCatalogVariant",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.catalog.v1.InternalVendorListCatalogVariantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.catalog.v1.VendorListCatalogVariantResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "api.catalog.v1.VendorCatalogVariantStockLabel": {
        "type": "string",
        "title": "VendorCatalogVariantStockLabel",
        "enum": [
          "VENDOR_CATALOG_VARIANT_STOCK_LABEL_UNKNOWN",
          0,
          "VENDOR_CATALOG_VARIANT_STOCK_LABEL_IN_STOCK",
          1,
          "VENDOR_CATALOG_VARIANT_STOCK_LABEL_OUT_OF_STOCK",
          2,
          "VENDOR_CATALOG_VARIANT_STOCK_LABEL_OUT_OF_STOCK_5D",
          3,
          "VENDOR_CATALOG_VARIANT_STOCK_LABEL_DISCONTINUED",
          4,
          "VENDOR_CATALOG_VARIANT_STOCK_LABEL_ALL",
          5
        ]
      },
      "api.catalog.v1.InternalVendorListCatalogRequest": {
        "type": "object",
        "properties": {
          "team_id": {
            "type": "string",
            "title": "team_id"
          },
          "is_legacy": {
            "type": "boolean",
            "title": "is_legacy"
          },
          "request": {
            "title": "request",
            "$ref": "#/components/schemas/api.catalog.v1.VendorListCatalogRequest"
          }
        },
        "title": "InternalVendorListCatalogRequest",
        "additionalProperties": false
      },
      "api.catalog.v1.InternalVendorListCatalogVariantRequest": {
        "type": "object",
        "properties": {
          "team_id": {
            "type": "string",
            "title": "team_id"
          },
          "is_legacy": {
            "type": "boolean",
            "title": "is_legacy"
          },
          "request": {
            "title": "request",
            "$ref": "#/components/schemas/api.catalog.v1.VendorListCatalogVariantRequest"
          }
        },
        "title": "InternalVendorListCatalogVariantRequest",
        "additionalProperties": false
      },
      "api.catalog.v1.VendorCatalog": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string",
            "title": "product_id"
          },
          "product_name": {
            "type": "string",
            "title": "product_name"
          },
          "product_avatar_url": {
            "type": "string",
            "title": "product_avatar_url"
          },
          "print_locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.catalog.v1.VendorCatalogPrintLocation"
            },
            "title": "print_locations"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.catalog.v1.VendorCatalogVariant"
            },
            "title": "variants"
          }
        },
        "title": "VendorCatalog",
        "additionalProperties": false
      },
      "api.catalog.v1.VendorCatalogFilter": {
        "type": "object",
        "properties": {
          "product_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "title": "product_ids"
          },
          "search_text": {
            "type": "string",
            "title": "search_text",
            "maxLength": 100
          }
        },
        "title": "VendorCatalogFilter",
        "additionalProperties": false
      },
      "api.catalog.v1.VendorCatalogPrintLocation": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "code"
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "location_id": {
            "type": "integer",
            "title": "location_id",
            "format": "int32"
          }
        },
        "title": "VendorCatalogPrintLocation",
        "additionalProperties": false
      },
      "api.catalog.v1.VendorCatalogVariant": {
        "type": "object",
        "properties": {
          "variant_id": {
            "type": "string",
            "title": "variant_id"
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "size": {
            "type": "string",
            "title": "size"
          },
          "color": {
            "type": "string",
            "title": "color"
          },
          "hex_color_code": {
            "type": "string",
            "title": "hex_color_code"
          },
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "recommended_price": {
            "title": "recommended_price",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "extra_price": {
            "title": "extra_price",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "stock_label": {
            "title": "stock_label",
            "$ref": "#/components/schemas/api.catalog.v1.VendorCatalogVariantStockLabel"
          },
          "product": {
            "title": "product",
            "description": "@gotags: json:\",squash,omitempty\"",
            "$ref": "#/components/schemas/api.catalog.v1.VendorCatalog"
          },
          "legacy_variant_id": {
            "type": "integer",
            "title": "legacy_variant_id",
            "format": "int32"
          }
        },
        "title": "VendorCatalogVariant",
        "additionalProperties": false
      },
      "api.catalog.v1.VendorCatalogVariantFilter": {
        "type": "object",
        "properties": {
          "product_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "title": "product_ids"
          },
          "variant_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "title": "variant_ids"
          },
          "skus": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "title": "skus"
          },
          "sizes": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "title": "sizes"
          },
          "size_codes": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "title": "size_codes"
          },
          "colors": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "title": "colors"
          },
          "color_codes": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "title": "color_codes"
          },
          "stock_labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.catalog.v1.VendorCatalogVariantStockLabel"
            },
            "title": "stock_labels"
          },
          "search_text": {
            "type": "string",
            "title": "search_text"
          },
          "legacy_variant_ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "title": "legacy_variant_ids"
          }
        },
        "title": "VendorCatalogVariantFilter",
        "additionalProperties": false
      },
      "api.catalog.v1.VendorListCatalogRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "$ref": "#/components/schemas/api.catalog.v1.VendorCatalogFilter"
          },
          "paging": {
            "title": "paging",
            "$ref": "#/components/schemas/common.type.v1.Paging"
          }
        },
        "title": "VendorListCatalogRequest",
        "additionalProperties": false
      },
      "api.catalog.v1.VendorListCatalogResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "title": "status"
          },
          "message": {
            "type": "string",
            "title": "message"
          },
          "paging": {
            "title": "paging",
            "$ref": "#/components/schemas/common.type.v1.PagingResponse"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.catalog.v1.VendorCatalog"
            },
            "title": "data"
          }
        },
        "title": "VendorListCatalogResponse",
        "additionalProperties": false
      },
      "api.catalog.v1.VendorListCatalogVariantRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "$ref": "#/components/schemas/api.catalog.v1.VendorCatalogVariantFilter"
          },
          "paging": {
            "title": "paging",
            "$ref": "#/components/schemas/common.type.v1.Paging"
          }
        },
        "title": "VendorListCatalogVariantRequest",
        "additionalProperties": false
      },
      "api.catalog.v1.VendorListCatalogVariantResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "title": "status"
          },
          "message": {
            "type": "string",
            "title": "message"
          },
          "paging": {
            "title": "paging",
            "$ref": "#/components/schemas/common.type.v1.PagingResponse"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.catalog.v1.VendorCatalogVariant"
            },
            "title": "data"
          }
        },
        "title": "VendorListCatalogVariantResponse",
        "additionalProperties": false
      },
      "common.type.v1.Money": {
        "type": "object",
        "properties": {
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The three-letter currency code defined in ISO 4217."
          },
          "units": {
            "type": [
              "integer",
              "string"
            ],
            "title": "units",
            "format": "int64",
            "description": "The whole units of the amount.\n For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
          },
          "nanos": {
            "type": "integer",
            "title": "nanos",
            "format": "int32",
            "description": "Number of nano (10^-9) units of the amount.\n The value must be between -999,999,999 and +999,999,999 inclusive.\n If `units` is positive, `nanos` must be positive or zero.\n If `units` is zero, `nanos` can be positive, zero, or negative.\n If `units` is negative, `nanos` must be negative or zero.\n For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
          }
        },
        "title": "Money",
        "additionalProperties": false,
        "description": "Represents an amount of money with its currency type."
      },
      "common.type.v1.Paging": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "page",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "title": "limit",
            "format": "int32"
          }
        },
        "title": "Paging",
        "additionalProperties": false
      },
      "common.type.v1.PagingResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": [
              "integer",
              "string"
            ],
            "title": "total",
            "format": "int64"
          },
          "total_page": {
            "type": "integer",
            "title": "total_page",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "title": "page",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "title": "limit",
            "format": "int32"
          }
        },
        "title": "PagingResponse",
        "additionalProperties": false
      },
      "connect-protocol-version": {
        "type": "number",
        "title": "Connect-Protocol-Version",
        "enum": [
          1
        ],
        "description": "Define the version of the Connect protocol",
        "const": 1
      },
      "connect-timeout-header": {
        "type": "number",
        "title": "Connect-Timeout-Ms",
        "description": "Define the timeout, in ms"
      },
      "connect.error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "examples": [
              "not_found"
            ],
            "enum": [
              "canceled",
              "unknown",
              "invalid_argument",
              "deadline_exceeded",
              "not_found",
              "already_exists",
              "permission_denied",
              "resource_exhausted",
              "failed_precondition",
              "aborted",
              "out_of_range",
              "unimplemented",
              "internal",
              "unavailable",
              "data_loss",
              "unauthenticated"
            ],
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
          },
          "message": {
            "type": "string",
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
          },
          "detail": {
            "$ref": "#/components/schemas/google.protobuf.Any"
          }
        },
        "title": "Connect Error",
        "additionalProperties": true,
        "description": "Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation"
      },
      "google.protobuf.Any": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "format": "binary"
          },
          "debug": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": true,
        "description": "Contains an arbitrary serialized message along with a @type that describes the type of the serialized message."
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header",
        "name": "Authorization"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "CookieAuth": {
        "type": "apiKey",
        "scheme": "bearer",
        "in": "cookie",
        "name": "accessToken"
      }
    }
  },
  "tags": [
    {
      "name": "api.catalog.v1.InternalVendorCatalogAPI"
    }
  ],
  "security": [],
  "externalDocs": {
    "description": "Find out more about Gearment API v3",
    "url": "https://gearment.com/integration/api-docs.html"
  }
}