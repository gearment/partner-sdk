{
  "openapi": "3.1.0",
  "info": {
    "contact": {
      "email": "engineering@gearment.com",
      "name": "Gearment Engineering Team",
      "url": "https://gearment.com"
    },
    "license": {},
    "termsOfService": "https://gearment.com/integration/api-terms-of-service.html",
    "title": "api.order.v1",
    "version": "3.0.0"
  },
  "servers": [
    {
      "url": "https://api.dev.geadev.com/{serviceName}",
      "description": "Staging Server",
      "variables": {
        "serviceName": {
          "default": "iam",
          "enum": [
            "iam",
            "product",
            "seller"
          ],
          "description": "The service name"
        }
      }
    },
    {
      "url": "http://localhost:{servicePort}",
      "description": "Local Server",
      "variables": {
        "servicePort": {
          "default": "9000",
          "description": "The port number"
        }
      }
    }
  ],
  "paths": {
    "/api.order.v1.InternalVendorOrderAPI/InternalVendorListOrder": {
      "post": {
        "tags": [
          "api.order.v1.InternalVendorOrderAPI"
        ],
        "summary": "InternalVendorListOrder",
        "operationId": "api.order.v1.InternalVendorOrderAPI.InternalVendorListOrder",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.order.v1.InternalVendorListOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.order.v1.VendorListOrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api.order.v1.InternalVendorOrderAPI/InternalVendorListOrderDraft": {
      "post": {
        "tags": [
          "api.order.v1.InternalVendorOrderAPI"
        ],
        "summary": "InternalVendorListOrderDraft",
        "operationId": "api.order.v1.InternalVendorOrderAPI.InternalVendorListOrderDraft",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.order.v1.InternalVendorListOrderDraftRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.order.v1.VendorListOrderDraftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api.order.v1.InternalVendorOrderAPI/InternalVendorCreateOrderDraft": {
      "post": {
        "tags": [
          "api.order.v1.InternalVendorOrderAPI"
        ],
        "summary": "InternalVendorCreateOrderDraft",
        "operationId": "api.order.v1.InternalVendorOrderAPI.InternalVendorCreateOrderDraft",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.order.v1.InternalVendorCreateOrderDraftRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.order.v1.InternalVendorCreateOrderDraftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api.order.v1.InternalVendorOrderAPI/InternalVendorGetPriceQuote": {
      "post": {
        "tags": [
          "api.order.v1.InternalVendorOrderAPI"
        ],
        "summary": "InternalVendorGetPriceQuote",
        "operationId": "api.order.v1.InternalVendorOrderAPI.InternalVendorGetPriceQuote",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.order.v1.InternalVendorGetPriceQuoteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.order.v1.VendorGetPriceQuoteResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "api.order.v1.VendorAddress.Type": {
        "type": "string",
        "title": "Type",
        "enum": [
          "TYPE_UNKNOWN",
          0,
          "TYPE_ALL",
          1,
          "TYPE_SHIP_FROM",
          2,
          "TYPE_SHIP_TO",
          3,
          "TYPE_BILL_TO",
          4
        ]
      },
      "api.order.v1.VendorCreatedMethod": {
        "type": "string",
        "title": "VendorCreatedMethod",
        "enum": [
          "VENDOR_CREATED_METHOD_UNKNOWN",
          0,
          "VENDOR_CREATED_METHOD_ALL",
          1,
          "VENDOR_CREATED_METHOD_SYNC",
          2,
          "VENDOR_CREATED_METHOD_MANUAL",
          3,
          "VENDOR_CREATED_METHOD_API",
          4,
          "VENDOR_CREATED_METHOD_IMPORT",
          5,
          "VENDOR_CREATED_METHOD_LABEL",
          6
        ]
      },
      "api.order.v1.VendorFulfillmentPriority": {
        "type": "string",
        "title": "VendorFulfillmentPriority",
        "enum": [
          "VENDOR_FULFILLMENT_PRIORITY_UNKNOWN",
          0,
          "VENDOR_FULFILLMENT_PRIORITY_ALL",
          1,
          "VENDOR_FULFILLMENT_PRIORITY_NORMAL",
          2,
          "VENDOR_FULFILLMENT_PRIORITY_RUSH",
          3
        ]
      },
      "api.order.v1.VendorFulfillmentVendor": {
        "type": "string",
        "title": "VendorFulfillmentVendor",
        "enum": [
          "VENDOR_FULFILLMENT_VENDOR_UNKNOWN",
          0,
          "VENDOR_FULFILLMENT_VENDOR_ALL",
          1,
          "VENDOR_FULFILLMENT_VENDOR_GEARMENT",
          2,
          "VENDOR_FULFILLMENT_VENDOR_AMAZON",
          3
        ]
      },
      "api.order.v1.VendorGiftMessage.Type": {
        "type": "string",
        "title": "Type",
        "enum": [
          "TYPE_UNKNOWN",
          0,
          "TYPE_CUSTOM_IMAGE",
          1,
          "TYPE_UPLOAD_IMAGE",
          2
        ]
      },
      "api.order.v1.VendorOrderDraftStatus": {
        "type": "string",
        "title": "VendorOrderDraftStatus",
        "enum": [
          "VENDOR_ORDER_DRAFT_STATUS_UNKNOWN",
          0,
          "VENDOR_ORDER_DRAFT_STATUS_ALL",
          1,
          "VENDOR_ORDER_DRAFT_STATUS_DRAFT",
          2,
          "VENDOR_ORDER_DRAFT_STATUS_AWAITING_CHECKOUT",
          3,
          "VENDOR_ORDER_DRAFT_STATUS_CHECKED_OUT",
          4,
          "VENDOR_ORDER_DRAFT_STATUS_DELETED",
          5,
          "VENDOR_ORDER_DRAFT_STATUS_ARCHIVED",
          6
        ]
      },
      "api.order.v1.VendorOrderStatus": {
        "type": "string",
        "title": "VendorOrderStatus",
        "enum": [
          "VENDOR_ORDER_STATUS_UNKNOWN",
          0,
          "VENDOR_ORDER_STATUS_ALL",
          1,
          "VENDOR_ORDER_STATUS_AWAITING_PAYMENT",
          2,
          "VENDOR_ORDER_STATUS_PAYMENT_FAILED",
          3,
          "VENDOR_ORDER_STATUS_AWAITING_FULFILLMENT",
          4,
          "VENDOR_ORDER_STATUS_IN_PRODUCTION",
          5,
          "VENDOR_ORDER_STATUS_PACKED",
          6,
          "VENDOR_ORDER_STATUS_SHIPPED",
          7,
          "VENDOR_ORDER_STATUS_CANCELLED",
          8,
          "VENDOR_ORDER_STATUS_ON_HOLD",
          9
        ]
      },
      "api.order.v1.VendorPrintingOption.PrintLocationCode": {
        "type": "string",
        "title": "PrintLocationCode",
        "enum": [
          "PRINT_LOCATION_CODE_UNKNOWN",
          0,
          "PRINT_LOCATION_CODE_WHOLE",
          1,
          "PRINT_LOCATION_CODE_FRONT",
          2,
          "PRINT_LOCATION_CODE_BACK",
          3,
          "PRINT_LOCATION_CODE_LEFT_SLEEVE",
          4,
          "PRINT_LOCATION_CODE_RIGHT_SLEEVE",
          5,
          "PRINT_LOCATION_CODE_POCKET",
          6
        ]
      },
      "api.order.v1.VendorProductMatchingStatus": {
        "type": "string",
        "title": "VendorProductMatchingStatus",
        "enum": [
          "VENDOR_PRODUCT_MATCHING_STATUS_UNKNOWN",
          0,
          "VENDOR_PRODUCT_MATCHING_STATUS_ALL",
          1,
          "VENDOR_PRODUCT_MATCHING_STATUS_MATCHED",
          2,
          "VENDOR_PRODUCT_MATCHING_STATUS_UNMATCHED",
          3
        ]
      },
      "api.order.v1.VendorShippingOption.Method": {
        "type": "string",
        "title": "Method",
        "enum": [
          "METHOD_UNKNOWN",
          0,
          "METHOD_ALL",
          1,
          "METHOD_STANDARD",
          2,
          "METHOD_GROUND",
          3,
          "METHOD_FAST_SHIP",
          4,
          "METHOD_STAMP",
          5
        ]
      },
      "api.order.v1.VendorShippingVerificationStatus": {
        "type": "string",
        "title": "VendorShippingVerificationStatus",
        "enum": [
          "VENDOR_SHIPPING_VERIFICATION_STATUS_UNKNOWN",
          0,
          "VENDOR_SHIPPING_VERIFICATION_STATUS_ALL",
          1,
          "VENDOR_SHIPPING_VERIFICATION_STATUS_PENDING",
          2,
          "VENDOR_SHIPPING_VERIFICATION_STATUS_CONSTRAINT_INVALID",
          3,
          "VENDOR_SHIPPING_VERIFICATION_STATUS_CONSTRAINT_VALID",
          4,
          "VENDOR_SHIPPING_VERIFICATION_STATUS_ADDRESS_UNVERIFIED",
          5,
          "VENDOR_SHIPPING_VERIFICATION_STATUS_ADDRESS_VERIFIED",
          6
        ]
      },
      "api.order.v1.VendorStockLabel": {
        "type": "string",
        "title": "VendorStockLabel",
        "enum": [
          "VENDOR_STOCK_LABEL_UNKNOWN",
          0,
          "VENDOR_STOCK_LABEL_IN_STOCK",
          1,
          "VENDOR_STOCK_LABEL_OUT_OF_STOCK",
          2,
          "VENDOR_STOCK_LABEL_AT_RISK",
          3,
          "VENDOR_STOCK_LABEL_DISCONTINUED",
          4
        ]
      },
      "common.platform.v1.MarketplacePlatform": {
        "type": "string",
        "title": "MarketplacePlatform",
        "enum": [
          "MARKETPLACE_PLATFORM_UNSPECIFIED",
          0,
          "MARKETPLACE_PLATFORM_ALL",
          1,
          "MARKETPLACE_PLATFORM_EBAY",
          2,
          "MARKETPLACE_PLATFORM_AMAZON",
          3,
          "MARKETPLACE_PLATFORM_SHOPIFY",
          4,
          "MARKETPLACE_PLATFORM_WOOCOMMERCE",
          5,
          "MARKETPLACE_PLATFORM_ETSY",
          6,
          "MARKETPLACE_PLATFORM_SHOPBASE",
          7,
          "MARKETPLACE_PLATFORM_GEARMENT",
          8,
          "MARKETPLACE_PLATFORM_ORDERDESK",
          9,
          "MARKETPLACE_PLATFORM_TIKTOKSHOP",
          10,
          "MARKETPLACE_PLATFORM_POSHMARK",
          11,
          "MARKETPLACE_PLATFORM_PRESTASHOP",
          12,
          "MARKETPLACE_PLATFORM_INKGO",
          13,
          "MARKETPLACE_PLATFORM_WISH",
          14,
          "MARKETPLACE_PLATFORM_BIGCOMMERCE",
          15
        ]
      },
      "api.order.v1.InternalVendorCreateOrderDraftRequest": {
        "type": "object",
        "properties": {
          "team_id": {
            "type": "string",
            "title": "team_id"
          },
          "is_legacy": {
            "type": "boolean",
            "title": "is_legacy"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderDraftCreationParams"
            },
            "title": "data"
          }
        },
        "title": "InternalVendorCreateOrderDraftRequest",
        "additionalProperties": false
      },
      "api.order.v1.InternalVendorCreateOrderDraftResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderDraft"
            },
            "title": "data"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.InternalVendorCreateOrderDraftResponse.Error"
            },
            "title": "errors"
          }
        },
        "title": "InternalVendorCreateOrderDraftResponse",
        "additionalProperties": false
      },
      "api.order.v1.InternalVendorCreateOrderDraftResponse.Error": {
        "type": "object",
        "properties": {
          "connect_code": {
            "type": "integer",
            "title": "connect_code"
          },
          "error_message": {
            "type": "string",
            "title": "error_message"
          }
        },
        "title": "Error",
        "additionalProperties": false
      },
      "api.order.v1.InternalVendorGetPriceQuoteRequest": {
        "type": "object",
        "properties": {
          "team_id": {
            "type": "string",
            "title": "team_id"
          },
          "is_legacy": {
            "type": "boolean",
            "title": "is_legacy"
          },
          "request": {
            "title": "request",
            "$ref": "#/components/schemas/api.order.v1.VendorGetPriceQuoteRequest"
          }
        },
        "title": "InternalVendorGetPriceQuoteRequest",
        "additionalProperties": false
      },
      "api.order.v1.InternalVendorListOrderDraftRequest": {
        "type": "object",
        "properties": {
          "team_id": {
            "type": "string",
            "title": "team_id"
          },
          "is_legacy": {
            "type": "boolean",
            "title": "is_legacy"
          },
          "request": {
            "title": "request",
            "$ref": "#/components/schemas/api.order.v1.VendorListOrderDraftRequest"
          }
        },
        "title": "InternalVendorListOrderDraftRequest",
        "additionalProperties": false
      },
      "api.order.v1.InternalVendorListOrderRequest": {
        "type": "object",
        "properties": {
          "team_id": {
            "type": "string",
            "title": "team_id"
          },
          "is_legacy": {
            "type": "boolean",
            "title": "is_legacy"
          },
          "request": {
            "title": "request",
            "$ref": "#/components/schemas/api.order.v1.VendorListOrderRequest"
          }
        },
        "title": "InternalVendorListOrderRequest",
        "additionalProperties": false
      },
      "api.order.v1.VendorAddress": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "title": "first_name",
            "maxLength": 255,
            "minLength": 1
          },
          "last_name": {
            "type": "string",
            "title": "last_name",
            "maxLength": 255,
            "minLength": 1
          },
          "company": {
            "type": "string",
            "title": "company",
            "maxLength": 255
          },
          "contact_pronoun": {
            "type": "string",
            "title": "contact_pronoun",
            "maxLength": 255
          },
          "street_1": {
            "type": "string",
            "title": "street_1",
            "maxLength": 255,
            "minLength": 1
          },
          "street_2": {
            "type": "string",
            "title": "street_2",
            "maxLength": 255
          },
          "state_code": {
            "type": "string",
            "title": "state_code",
            "maxLength": 255
          },
          "state_name": {
            "type": "string",
            "title": "state_name",
            "maxLength": 255
          },
          "city": {
            "type": "string",
            "title": "city",
            "maxLength": 255,
            "minLength": 1
          },
          "zip_code": {
            "type": "string",
            "title": "zip_code",
            "maxLength": 255,
            "minLength": 1
          },
          "country_code": {
            "type": "string",
            "title": "country_code",
            "maxLength": 255,
            "minLength": 1
          },
          "country_name": {
            "type": "string",
            "title": "country_name",
            "maxLength": 255
          },
          "phone_no": {
            "type": "string",
            "title": "phone_no",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "title": "email",
            "maxLength": 255
          },
          "type": {
            "title": "type",
            "$ref": "#/components/schemas/api.order.v1.VendorAddress.Type"
          }
        },
        "title": "VendorAddress",
        "additionalProperties": false
      },
      "api.order.v1.VendorBillingOption": {
        "type": "object",
        "properties": {
          "ioss_number": {
            "type": "string",
            "title": "ioss_number",
            "maxLength": 255
          },
          "ioss_value": {
            "title": "ioss_value",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "tax_number": {
            "type": "string",
            "title": "tax_number",
            "maxLength": 255
          },
          "tax_value": {
            "title": "tax_value",
            "$ref": "#/components/schemas/common.type.v1.Money"
          }
        },
        "title": "VendorBillingOption",
        "additionalProperties": false
      },
      "api.order.v1.VendorFulfillmentOption": {
        "type": "object",
        "title": "VendorFulfillmentOption",
        "additionalProperties": false
      },
      "api.order.v1.VendorGetPriceQuoteRequest": {
        "type": "object",
        "properties": {
          "order_platform": {
            "type": "string",
            "title": "order_platform"
          },
          "billing": {
            "title": "billing",
            "$ref": "#/components/schemas/api.order.v1.VendorOrderPriceCalculation.Billing"
          },
          "shipping": {
            "title": "shipping",
            "$ref": "#/components/schemas/api.order.v1.VendorOrderPriceCalculation.Shipping"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderPriceCalculation.LineItem"
            },
            "title": "line_items"
          },
          "gift_messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderPriceCalculation.GiftMessage"
            },
            "title": "gift_messages"
          }
        },
        "title": "VendorGetPriceQuoteRequest",
        "additionalProperties": false
      },
      "api.order.v1.VendorGetPriceQuoteResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "title": "status"
          },
          "message": {
            "type": "string",
            "title": "message"
          },
          "data": {
            "title": "data",
            "$ref": "#/components/schemas/api.order.v1.VendorOrderPriceCalculation.OrderPriceQuote"
          }
        },
        "title": "VendorGetPriceQuoteResponse",
        "additionalProperties": false
      },
      "api.order.v1.VendorGiftMessage": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "title": "order_id"
          },
          "gift_message_id": {
            "type": "string",
            "title": "gift_message_id"
          },
          "type": {
            "title": "type",
            "$ref": "#/components/schemas/api.order.v1.VendorGiftMessage.Type"
          },
          "content": {
            "type": "string",
            "title": "content"
          },
          "avatar_url": {
            "type": "string",
            "title": "avatar_url"
          },
          "gift_message_name": {
            "type": "string",
            "title": "gift_message_name"
          }
        },
        "title": "VendorGiftMessage",
        "additionalProperties": false
      },
      "api.order.v1.VendorLineItem": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "title": "order_id"
          },
          "quantity": {
            "type": "integer",
            "title": "quantity",
            "minimum": 1,
            "format": "int32"
          },
          "printing_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorPrintingOption"
            },
            "title": "printing_options"
          },
          "origin_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorLineItem.OriginOption"
            },
            "title": "origin_options"
          },
          "fulfillment_option": {
            "title": "fulfillment_option",
            "$ref": "#/components/schemas/api.order.v1.VendorLineItem.FulfillmentOption"
          },
          "variant": {
            "title": "variant",
            "$ref": "#/components/schemas/api.order.v1.VendorLineItem.Variant"
          },
          "product": {
            "title": "product",
            "$ref": "#/components/schemas/api.order.v1.VendorLineItem.Product"
          }
        },
        "title": "VendorLineItem",
        "additionalProperties": false
      },
      "api.order.v1.VendorLineItem.FulfillmentOption": {
        "type": "object",
        "properties": {
          "barcode_url": {
            "type": "string",
            "title": "barcode_url"
          }
        },
        "title": "FulfillmentOption",
        "additionalProperties": false
      },
      "api.order.v1.VendorLineItem.OriginOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name"
          },
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "OriginOption",
        "additionalProperties": false
      },
      "api.order.v1.VendorLineItem.Product": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string",
            "title": "product_id"
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "description": {
            "type": "string",
            "title": "description"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorLineItem.ProductImage"
            },
            "title": "images"
          },
          "print_locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorLineItem.ProductPrintLocation"
            },
            "title": "print_locations"
          }
        },
        "title": "Product",
        "additionalProperties": false
      },
      "api.order.v1.VendorLineItem.ProductImage": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "url"
          },
          "tag": {
            "type": "string",
            "title": "tag"
          }
        },
        "title": "ProductImage",
        "additionalProperties": false
      },
      "api.order.v1.VendorLineItem.ProductPrintLocation": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "title": "code"
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "location_id": {
            "type": "integer",
            "title": "location_id",
            "format": "int32"
          }
        },
        "title": "ProductPrintLocation",
        "additionalProperties": false
      },
      "api.order.v1.VendorLineItem.Variant": {
        "type": "object",
        "properties": {
          "variant_id": {
            "type": "string",
            "title": "variant_id"
          },
          "legacy_id": {
            "type": [
              "integer",
              "string"
            ],
            "title": "legacy_id",
            "format": "int64"
          },
          "sku": {
            "type": "string",
            "title": "sku"
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "description": {
            "type": "string",
            "title": "description"
          },
          "option_1": {
            "type": "string",
            "title": "option_1"
          },
          "option_2": {
            "type": "string",
            "title": "option_2"
          },
          "option_3": {
            "type": "string",
            "title": "option_3"
          },
          "price": {
            "title": "price",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "price_gm": {
            "title": "price_gm",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorLineItem.ProductImage"
            },
            "title": "images"
          },
          "stock_label": {
            "title": "stock_label",
            "$ref": "#/components/schemas/api.order.v1.VendorStockLabel"
          }
        },
        "title": "Variant",
        "additionalProperties": false
      },
      "api.order.v1.VendorListOrderDraftRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "$ref": "#/components/schemas/api.order.v1.VendorOrderDraftFilter"
          },
          "paging": {
            "title": "paging",
            "$ref": "#/components/schemas/common.type.v1.Paging"
          }
        },
        "title": "VendorListOrderDraftRequest",
        "additionalProperties": false
      },
      "api.order.v1.VendorListOrderDraftResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "title": "status"
          },
          "message": {
            "type": "string",
            "title": "message"
          },
          "paging": {
            "title": "paging",
            "$ref": "#/components/schemas/common.type.v1.PagingResponse"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderDraft"
            },
            "title": "data"
          }
        },
        "title": "VendorListOrderDraftResponse",
        "additionalProperties": false
      },
      "api.order.v1.VendorListOrderRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "$ref": "#/components/schemas/api.order.v1.VendorOrderFilter"
          },
          "paging": {
            "title": "paging",
            "$ref": "#/components/schemas/common.type.v1.Paging"
          }
        },
        "title": "VendorListOrderRequest",
        "additionalProperties": false
      },
      "api.order.v1.VendorListOrderResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "title": "status"
          },
          "message": {
            "type": "string",
            "title": "message"
          },
          "paging": {
            "title": "paging",
            "$ref": "#/components/schemas/common.type.v1.PagingResponse"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrder"
            },
            "title": "data"
          }
        },
        "title": "VendorListOrderResponse",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrder": {
        "type": "object",
        "title": "VendorOrder",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderDraft": {
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "integer",
              "string"
            ],
            "title": "id",
            "format": "int64"
          },
          "order_id": {
            "type": "string",
            "title": "order_id"
          },
          "team_id": {
            "type": "string",
            "title": "team_id"
          },
          "store_id": {
            "type": "string",
            "title": "store_id"
          },
          "store_name": {
            "type": "string",
            "title": "store_name"
          },
          "reference_id": {
            "type": "string",
            "title": "reference_id"
          },
          "order_platform": {
            "title": "order_platform",
            "$ref": "#/components/schemas/common.platform.v1.MarketplacePlatform"
          },
          "import_id": {
            "type": "string",
            "title": "import_id"
          },
          "pull_id": {
            "type": "string",
            "title": "pull_id"
          },
          "request_id": {
            "type": "string",
            "title": "request_id"
          },
          "created_method": {
            "title": "created_method",
            "$ref": "#/components/schemas/api.order.v1.VendorCreatedMethod"
          },
          "fulfillment_vendor": {
            "title": "fulfillment_vendor",
            "$ref": "#/components/schemas/api.order.v1.VendorFulfillmentVendor"
          },
          "priority": {
            "title": "priority",
            "$ref": "#/components/schemas/api.order.v1.VendorFulfillmentPriority"
          },
          "fulfillment_option": {
            "title": "fulfillment_option",
            "$ref": "#/components/schemas/api.order.v1.VendorFulfillmentOption"
          },
          "shipping_option": {
            "title": "shipping_option",
            "$ref": "#/components/schemas/api.order.v1.VendorShippingOption"
          },
          "billing_option": {
            "title": "billing_option",
            "$ref": "#/components/schemas/api.order.v1.VendorBillingOption"
          },
          "order_date": {
            "title": "order_date",
            "$ref": "#/components/schemas/google.protobuf.Timestamp"
          },
          "status": {
            "title": "status",
            "$ref": "#/components/schemas/api.order.v1.VendorOrderDraftStatus"
          },
          "order_tracking_code": {
            "type": "string",
            "title": "order_tracking_code"
          },
          "shipping_labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "shipping_labels"
          },
          "is_label_attached": {
            "type": "boolean",
            "title": "is_label_attached"
          },
          "shipping_verification_status": {
            "title": "shipping_verification_status",
            "$ref": "#/components/schemas/api.order.v1.VendorShippingVerificationStatus"
          },
          "product_matching_status": {
            "title": "product_matching_status",
            "$ref": "#/components/schemas/api.order.v1.VendorProductMatchingStatus"
          },
          "is_shipping_verification_bypassed": {
            "type": "boolean",
            "title": "is_shipping_verification_bypassed"
          },
          "is_approved": {
            "type": "boolean",
            "title": "is_approved"
          },
          "approved_at": {
            "title": "approved_at",
            "$ref": "#/components/schemas/google.protobuf.Timestamp"
          },
          "origin_draft_id": {
            "type": "string",
            "title": "origin_draft_id"
          },
          "origin_order_id": {
            "type": "string",
            "title": "origin_order_id"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorAddress"
            },
            "title": "addresses"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorLineItem"
            },
            "title": "line_items"
          },
          "gift_messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorGiftMessage"
            },
            "title": "gift_messages"
          },
          "legacy_external_id": {
            "type": "string",
            "title": "legacy_external_id",
            "description": "for oms order's external id"
          }
        },
        "title": "VendorOrderDraft",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderDraftCreationParams": {
        "type": "object",
        "properties": {
          "legacy_external_id": {
            "type": "string",
            "title": "legacy_external_id",
            "maxLength": 255
          },
          "reference_id": {
            "type": "string",
            "title": "reference_id",
            "maxLength": 255
          },
          "platform": {
            "title": "platform",
            "$ref": "#/components/schemas/common.platform.v1.MarketplacePlatform"
          },
          "store_id": {
            "type": "string",
            "title": "store_id",
            "maxLength": 255
          },
          "agree_at_risk": {
            "title": "agree_at_risk",
            "$ref": "#/components/schemas/google.protobuf.BoolValue"
          },
          "shipping_label_urls": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 1000,
              "minLength": 1,
              "maxItems": 1000
            },
            "title": "shipping_label_urls",
            "maxItems": 1000
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorAddress"
            },
            "title": "addresses"
          },
          "shipping_method": {
            "title": "shipping_method",
            "$ref": "#/components/schemas/api.order.v1.VendorShippingOption.Method"
          },
          "billing_option": {
            "title": "billing_option",
            "$ref": "#/components/schemas/api.order.v1.VendorBillingOption"
          },
          "gift_message_body": {
            "type": "string",
            "title": "gift_message_body",
            "maxLength": 1000
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderDraftCreationParams.LineItem"
            },
            "title": "line_items",
            "maxItems": 1000,
            "minItems": 1
          }
        },
        "title": "VendorOrderDraftCreationParams",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderDraftCreationParams.LineItem": {
        "type": "object",
        "properties": {
          "variant_id": {
            "type": "string",
            "title": "variant_id"
          },
          "legacy_id": {
            "type": [
              "integer",
              "string"
            ],
            "title": "legacy_id",
            "format": "int64"
          },
          "quantity": {
            "exclusiveMinimum": 0,
            "type": "integer",
            "title": "quantity",
            "maximum": 1000,
            "format": "int32"
          },
          "printing_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderDraftCreationParams.PrintingOption"
            },
            "title": "printing_options",
            "minItems": 1
          },
          "barcode_url": {
            "type": "string",
            "title": "barcode_url",
            "maxLength": 1000
          }
        },
        "title": "LineItem",
        "additionalProperties": false,
        "description": "Exactly one of 'variant_id' or 'legacy_id' must be set:\n```\n!(this.variant_id != '' \u0026\u0026 this.legacy_id != 0) \u0026\u0026 (this.variant_id != '' || this.legacy_id != 0)\n```\n\n"
      },
      "api.order.v1.VendorOrderDraftCreationParams.PrintingOption": {
        "type": "object",
        "properties": {
          "location_code": {
            "title": "location_code",
            "$ref": "#/components/schemas/api.order.v1.VendorPrintingOption.PrintLocationCode"
          },
          "url": {
            "type": "string",
            "title": "url",
            "maxLength": 1000
          }
        },
        "title": "PrintingOption",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderDraftFilter": {
        "type": "object",
        "properties": {
          "order_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "title": "order_ids"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderDraftStatus"
            },
            "title": "statuses"
          },
          "created_methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorCreatedMethod"
            },
            "title": "created_methods"
          },
          "created_at_min": {
            "title": "created_at_min",
            "$ref": "#/components/schemas/google.protobuf.Timestamp"
          },
          "created_at_max": {
            "title": "created_at_max",
            "$ref": "#/components/schemas/google.protobuf.Timestamp"
          }
        },
        "title": "VendorOrderDraftFilter",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderFilter": {
        "type": "object",
        "properties": {
          "order_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100,
              "minLength": 1
            },
            "title": "order_ids"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderStatus"
            },
            "title": "statuses"
          },
          "created_methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorCreatedMethod"
            },
            "title": "created_methods"
          },
          "created_at_min": {
            "title": "created_at_min",
            "$ref": "#/components/schemas/google.protobuf.Timestamp"
          },
          "created_at_max": {
            "title": "created_at_max",
            "$ref": "#/components/schemas/google.protobuf.Timestamp"
          }
        },
        "title": "VendorOrderFilter",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderPriceCalculation.Address": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "title": "method"
          },
          "state_code": {
            "type": "string",
            "title": "state_code"
          },
          "country_code": {
            "type": "string",
            "title": "country_code"
          }
        },
        "title": "Address",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderPriceCalculation.Billing": {
        "type": "object",
        "properties": {
          "ioss_number": {
            "type": "string",
            "title": "ioss_number"
          },
          "tax_number": {
            "type": "string",
            "title": "tax_number"
          }
        },
        "title": "Billing",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderPriceCalculation.FeePriceQuote": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string",
            "title": "order_id"
          },
          "line_item_id": {
            "type": "string",
            "title": "line_item_id"
          },
          "fee_code": {
            "type": "string",
            "title": "fee_code"
          },
          "amount": {
            "title": "amount",
            "$ref": "#/components/schemas/common.type.v1.Money"
          }
        },
        "title": "FeePriceQuote",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderPriceCalculation.GiftMessage": {
        "type": "object",
        "properties": {
          "gift_message_id": {
            "type": "string",
            "title": "gift_message_id",
            "maxLength": 30,
            "minLength": 1
          },
          "content": {
            "type": "string",
            "title": "content",
            "maxLength": 300
          }
        },
        "title": "GiftMessage",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderPriceCalculation.Label": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "url"
          }
        },
        "title": "Label",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderPriceCalculation.LineItem": {
        "type": "object",
        "properties": {
          "variant_id": {
            "type": "string",
            "title": "variant_id",
            "maxLength": 30,
            "minLength": 1
          },
          "quantity": {
            "exclusiveMinimum": 0,
            "type": "integer",
            "title": "quantity",
            "format": "int32"
          },
          "print_locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "print_locations"
          }
        },
        "title": "LineItem",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderPriceCalculation.LineItemPriceQuote": {
        "type": "object",
        "properties": {
          "line_sub_total": {
            "title": "line_sub_total",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "line_tax": {
            "title": "line_tax",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "line_fee": {
            "title": "line_fee",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "line_discount": {
            "title": "line_discount",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "line_total": {
            "title": "line_total",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "item_price": {
            "title": "item_price",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "item_fee": {
            "title": "item_fee",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "item_discount": {
            "title": "item_discount",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "item_quantity": {
            "type": "integer",
            "title": "item_quantity",
            "format": "int32"
          },
          "id": {
            "type": [
              "integer",
              "string"
            ],
            "title": "id",
            "format": "int64"
          },
          "unit_base_price": {
            "title": "unit_base_price",
            "$ref": "#/components/schemas/common.type.v1.Money"
          }
        },
        "title": "LineItemPriceQuote",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderPriceCalculation.OrderPriceQuote": {
        "type": "object",
        "properties": {
          "order_shipping_fee": {
            "title": "order_shipping_fee",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "order_fee": {
            "title": "order_fee",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "order_tax": {
            "title": "order_tax",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "order_sub_total": {
            "title": "order_sub_total",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "order_total": {
            "title": "order_total",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "order_discount": {
            "title": "order_discount",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderPriceCalculation.LineItemPriceQuote"
            },
            "title": "line_items"
          },
          "fees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.order.v1.VendorOrderPriceCalculation.FeePriceQuote"
            },
            "title": "fees"
          },
          "order_gift_message_fee": {
            "title": "order_gift_message_fee",
            "$ref": "#/components/schemas/common.type.v1.Money"
          },
          "order_handle_fee": {
            "title": "order_handle_fee",
            "$ref": "#/components/schemas/common.type.v1.Money"
          }
        },
        "title": "OrderPriceQuote",
        "additionalProperties": false
      },
      "api.order.v1.VendorOrderPriceCalculation.Shipping": {
        "type": "object",
        "properties": {
          "address": {
            "title": "address",
            "$ref": "#/components/schemas/api.order.v1.VendorOrderPriceCalculation.Address"
          },
          "label": {
            "title": "label",
            "$ref": "#/components/schemas/api.order.v1.VendorOrderPriceCalculation.Label"
          }
        },
        "title": "Shipping",
        "additionalProperties": false
      },
      "api.order.v1.VendorPrintingOption": {
        "type": "object",
        "properties": {
          "print_location_code": {
            "title": "print_location_code",
            "$ref": "#/components/schemas/api.order.v1.VendorPrintingOption.PrintLocationCode"
          },
          "design_url": {
            "type": "string",
            "title": "design_url"
          }
        },
        "title": "VendorPrintingOption",
        "additionalProperties": false
      },
      "api.order.v1.VendorShippingOption": {
        "type": "object",
        "properties": {
          "method": {
            "title": "method",
            "$ref": "#/components/schemas/api.order.v1.VendorShippingOption.Method"
          }
        },
        "title": "VendorShippingOption",
        "additionalProperties": false
      },
      "common.type.v1.Money": {
        "type": "object",
        "properties": {
          "currency_code": {
            "type": "string",
            "title": "currency_code",
            "description": "The three-letter currency code defined in ISO 4217."
          },
          "units": {
            "type": [
              "integer",
              "string"
            ],
            "title": "units",
            "format": "int64",
            "description": "The whole units of the amount.\n For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
          },
          "nanos": {
            "type": "integer",
            "title": "nanos",
            "format": "int32",
            "description": "Number of nano (10^-9) units of the amount.\n The value must be between -999,999,999 and +999,999,999 inclusive.\n If `units` is positive, `nanos` must be positive or zero.\n If `units` is zero, `nanos` can be positive, zero, or negative.\n If `units` is negative, `nanos` must be negative or zero.\n For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
          }
        },
        "title": "Money",
        "additionalProperties": false,
        "description": "Represents an amount of money with its currency type."
      },
      "common.type.v1.Paging": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "title": "page",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "title": "limit",
            "format": "int32"
          }
        },
        "title": "Paging",
        "additionalProperties": false
      },
      "common.type.v1.PagingResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": [
              "integer",
              "string"
            ],
            "title": "total",
            "format": "int64"
          },
          "total_page": {
            "type": "integer",
            "title": "total_page",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "title": "page",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "title": "limit",
            "format": "int32"
          }
        },
        "title": "PagingResponse",
        "additionalProperties": false
      },
      "google.protobuf.BoolValue": {
        "type": "boolean",
        "description": "Wrapper message for `bool`.\n\n The JSON representation for `BoolValue` is JSON `true` and `false`.\n\n Not recommended for use in new APIs, but still useful for legacy APIs and\n has no plan to be removed."
      },
      "google.protobuf.Timestamp": {
        "type": "string",
        "format": "date-time",
        "description": "A Timestamp represents a point in time independent of any time zone or local\n calendar, encoded as a count of seconds and fractions of seconds at\n nanosecond resolution. The count is relative to an epoch at UTC midnight on\n January 1, 1970, in the proleptic Gregorian calendar which extends the\n Gregorian calendar backwards to year one.\n\n All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n second table is needed for interpretation, using a [24-hour linear\n smear](https://developers.google.com/time/smear).\n\n The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n restricting to that range, we ensure that we can convert to and from [RFC\n 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n\n # Examples\n\n Example 1: Compute Timestamp from POSIX `time()`.\n\n     Timestamp timestamp;\n     timestamp.set_seconds(time(NULL));\n     timestamp.set_nanos(0);\n\n Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n\n     struct timeval tv;\n     gettimeofday(\u0026tv, NULL);\n\n     Timestamp timestamp;\n     timestamp.set_seconds(tv.tv_sec);\n     timestamp.set_nanos(tv.tv_usec * 1000);\n\n Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n\n     FILETIME ft;\n     GetSystemTimeAsFileTime(\u0026ft);\n     UINT64 ticks = (((UINT64)ft.dwHighDateTime) \u003c\u003c 32) | ft.dwLowDateTime;\n\n     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n     Timestamp timestamp;\n     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n\n Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n\n     long millis = System.currentTimeMillis();\n\n     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n         .setNanos((int) ((millis % 1000) * 1000000)).build();\n\n Example 5: Compute Timestamp from Java `Instant.now()`.\n\n     Instant now = Instant.now();\n\n     Timestamp timestamp =\n         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n             .setNanos(now.getNano()).build();\n\n Example 6: Compute Timestamp from current time in Python.\n\n     timestamp = Timestamp()\n     timestamp.GetCurrentTime()\n\n # JSON Mapping\n\n In JSON format, the Timestamp type is encoded as a string in the\n [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n where {year} is always expressed using four digits while {month}, {day},\n {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n is required. A proto3 JSON serializer should always use UTC (as indicated by\n \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n able to accept both UTC and other timezones (as indicated by an offset).\n\n For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n 01:30 UTC on January 15, 2017.\n\n In JavaScript, one can convert a Date object to this format using the\n standard\n [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n method. In Python, a standard `datetime.datetime` object can be converted\n to this format using\n [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n the Joda Time's [`ISODateTimeFormat.dateTime()`](\n http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n ) to obtain a formatter capable of generating timestamps in this format."
      },
      "connect-protocol-version": {
        "type": "number",
        "title": "Connect-Protocol-Version",
        "enum": [
          1
        ],
        "description": "Define the version of the Connect protocol",
        "const": 1
      },
      "connect-timeout-header": {
        "type": "number",
        "title": "Connect-Timeout-Ms",
        "description": "Define the timeout, in ms"
      },
      "connect.error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "examples": [
              "not_found"
            ],
            "enum": [
              "canceled",
              "unknown",
              "invalid_argument",
              "deadline_exceeded",
              "not_found",
              "already_exists",
              "permission_denied",
              "resource_exhausted",
              "failed_precondition",
              "aborted",
              "out_of_range",
              "unimplemented",
              "internal",
              "unavailable",
              "data_loss",
              "unauthenticated"
            ],
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
          },
          "message": {
            "type": "string",
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
          },
          "detail": {
            "$ref": "#/components/schemas/google.protobuf.Any"
          }
        },
        "title": "Connect Error",
        "additionalProperties": true,
        "description": "Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation"
      },
      "google.protobuf.Any": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "format": "binary"
          },
          "debug": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": true,
        "description": "Contains an arbitrary serialized message along with a @type that describes the type of the serialized message."
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header",
        "name": "Authorization"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "CookieAuth": {
        "type": "apiKey",
        "scheme": "bearer",
        "in": "cookie",
        "name": "accessToken"
      }
    }
  },
  "tags": [
    {
      "name": "api.order.v1.InternalVendorOrderAPI"
    }
  ],
  "security": [],
  "externalDocs": {
    "description": "Find out more about Gearment API v3",
    "url": "https://gearment.com/integration/api-docs.html"
  }
}