// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: api/order/v1/data_vendor_address.proto

package orderv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VendorAddress_Type int32

const (
	VendorAddress_TYPE_UNKNOWN   VendorAddress_Type = 0
	VendorAddress_TYPE_ALL       VendorAddress_Type = 1
	VendorAddress_TYPE_SHIP_FROM VendorAddress_Type = 2
	VendorAddress_TYPE_SHIP_TO   VendorAddress_Type = 3
	VendorAddress_TYPE_BILL_TO   VendorAddress_Type = 4
	VendorAddress_TYPE_RETURN_TO VendorAddress_Type = 5
)

// Enum value maps for VendorAddress_Type.
var (
	VendorAddress_Type_name = map[int32]string{
		0: "TYPE_UNKNOWN",
		1: "TYPE_ALL",
		2: "TYPE_SHIP_FROM",
		3: "TYPE_SHIP_TO",
		4: "TYPE_BILL_TO",
		5: "TYPE_RETURN_TO",
	}
	VendorAddress_Type_value = map[string]int32{
		"TYPE_UNKNOWN":   0,
		"TYPE_ALL":       1,
		"TYPE_SHIP_FROM": 2,
		"TYPE_SHIP_TO":   3,
		"TYPE_BILL_TO":   4,
		"TYPE_RETURN_TO": 5,
	}
)

func (x VendorAddress_Type) Enum() *VendorAddress_Type {
	p := new(VendorAddress_Type)
	*p = x
	return p
}

func (x VendorAddress_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VendorAddress_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_order_v1_data_vendor_address_proto_enumTypes[0].Descriptor()
}

func (VendorAddress_Type) Type() protoreflect.EnumType {
	return &file_api_order_v1_data_vendor_address_proto_enumTypes[0]
}

func (x VendorAddress_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VendorAddress_Type.Descriptor instead.
func (VendorAddress_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_order_v1_data_vendor_address_proto_rawDescGZIP(), []int{0, 0}
}

type VendorAddress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Recipient's first name (required)
	FirstName string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// Recipient's last name (optional)
	LastName string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// Company name (optional)
	Company string `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	// Contact pronoun (optional)
	ContactPronoun string `protobuf:"bytes,4,opt,name=contact_pronoun,json=contactPronoun,proto3" json:"contact_pronoun,omitempty"`
	// Street address line 1 (required)
	Street_1 string `protobuf:"bytes,5,opt,name=street_1,json=street1,proto3" json:"street_1,omitempty"`
	// Street address line 2 (optional, for apartment/suite)
	Street_2 string `protobuf:"bytes,6,opt,name=street_2,json=street2,proto3" json:"street_2,omitempty"`
	// State/province code (ISO 3166-2)
	StateCode string `protobuf:"bytes,7,opt,name=state_code,json=stateCode,proto3" json:"state_code,omitempty"`
	// State/province full name (optional)
	StateName string `protobuf:"bytes,8,opt,name=state_name,json=stateName,proto3" json:"state_name,omitempty"`
	// City name (required)
	City string `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`
	// Postal/ZIP code (required)
	ZipCode string `protobuf:"bytes,10,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	// Country code (ISO 3166-1 alpha-2, required)
	CountryCode string `protobuf:"bytes,11,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	// Country full name (optional)
	CountryName string `protobuf:"bytes,12,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	// Phone number (optional)
	PhoneNo string `protobuf:"bytes,13,opt,name=phone_no,json=phoneNo,proto3" json:"phone_no,omitempty"`
	// Email address (optional)
	Email string `protobuf:"bytes,14,opt,name=email,proto3" json:"email,omitempty"`
	// Address type
	Type          VendorAddress_Type `protobuf:"varint,15,opt,name=type,proto3,enum=api.order.v1.VendorAddress_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorAddress) Reset() {
	*x = VendorAddress{}
	mi := &file_api_order_v1_data_vendor_address_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorAddress) ProtoMessage() {}

func (x *VendorAddress) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_data_vendor_address_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorAddress.ProtoReflect.Descriptor instead.
func (*VendorAddress) Descriptor() ([]byte, []int) {
	return file_api_order_v1_data_vendor_address_proto_rawDescGZIP(), []int{0}
}

func (x *VendorAddress) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *VendorAddress) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *VendorAddress) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *VendorAddress) GetContactPronoun() string {
	if x != nil {
		return x.ContactPronoun
	}
	return ""
}

func (x *VendorAddress) GetStreet_1() string {
	if x != nil {
		return x.Street_1
	}
	return ""
}

func (x *VendorAddress) GetStreet_2() string {
	if x != nil {
		return x.Street_2
	}
	return ""
}

func (x *VendorAddress) GetStateCode() string {
	if x != nil {
		return x.StateCode
	}
	return ""
}

func (x *VendorAddress) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

func (x *VendorAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *VendorAddress) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *VendorAddress) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *VendorAddress) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *VendorAddress) GetPhoneNo() string {
	if x != nil {
		return x.PhoneNo
	}
	return ""
}

func (x *VendorAddress) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *VendorAddress) GetType() VendorAddress_Type {
	if x != nil {
		return x.Type
	}
	return VendorAddress_TYPE_UNKNOWN
}

var File_api_order_v1_data_vendor_address_proto protoreflect.FileDescriptor

var file_api_order_v1_data_vendor_address_proto_rawDesc = string([]byte{
	0x0a, 0x26, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x07, 0x0a, 0x0d, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0x48, 0x0e, 0x72, 0x0c,
	0x10, 0x01, 0x18, 0xff, 0x01, 0x92, 0x02, 0x04, 0x4a, 0x6f, 0x68, 0x6e, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0x48, 0x0b, 0x72,
	0x09, 0x18, 0xff, 0x01, 0x92, 0x02, 0x03, 0x44, 0x6f, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xba, 0x48, 0x18, 0x72, 0x16, 0x18, 0xff, 0x01, 0x92,
	0x02, 0x10, 0x41, 0x63, 0x6d, 0x65, 0x20, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x37, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6e, 0x6f, 0x75, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0x48, 0x0b, 0x72, 0x09, 0x18, 0xff, 0x01, 0x92, 0x02,
	0x03, 0x4d, 0x72, 0x2e, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x6e, 0x6f, 0x75, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x31,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xba, 0x48, 0x18, 0x72, 0x16, 0x10, 0x01, 0x18,
	0x32, 0x92, 0x02, 0x0f, 0x31, 0x32, 0x33, 0x20, 0x4d, 0x61, 0x69, 0x6e, 0x20, 0x53, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x31, 0x12, 0x2b, 0x0a, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10,
	0xba, 0x48, 0x0d, 0x72, 0x0b, 0x18, 0x1e, 0x92, 0x02, 0x06, 0x41, 0x70, 0x74, 0x20, 0x34, 0x42,
	0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x32, 0x12, 0x2c, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba,
	0x48, 0x0a, 0x72, 0x08, 0x18, 0xff, 0x01, 0x92, 0x02, 0x02, 0x43, 0x41, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xba, 0x48, 0x12,
	0x72, 0x10, 0x18, 0xff, 0x01, 0x92, 0x02, 0x0a, 0x43, 0x61, 0x6c, 0x69, 0x66, 0x6f, 0x72, 0x6e,
	0x69, 0x61, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba, 0x48, 0x15,
	0x72, 0x13, 0x10, 0x01, 0x18, 0xff, 0x01, 0x92, 0x02, 0x0b, 0x4c, 0x6f, 0x73, 0x20, 0x41, 0x6e,
	0x67, 0x65, 0x6c, 0x65, 0x73, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x08, 0x7a,
	0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xba,
	0x48, 0x0f, 0x72, 0x0d, 0x10, 0x01, 0x18, 0xff, 0x01, 0x92, 0x02, 0x05, 0x39, 0x30, 0x30, 0x30,
	0x31, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x0c, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xba, 0x48, 0x0c, 0x72, 0x0a, 0x10, 0x01, 0x18, 0xff, 0x01, 0x92, 0x02, 0x02, 0x55,
	0x53, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3b,
	0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba, 0x48, 0x15, 0x72, 0x13, 0x18, 0xff, 0x01, 0x92, 0x02,
	0x0d, 0x55, 0x6e, 0x69, 0x74, 0x65, 0x64, 0x20, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xba,
	0x48, 0x16, 0x72, 0x14, 0x18, 0x32, 0x92, 0x02, 0x0f, 0x2b, 0x31, 0x2d, 0x35, 0x35, 0x35, 0x2d,
	0x31, 0x32, 0x33, 0x2d, 0x34, 0x35, 0x36, 0x37, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x6f, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1f, 0xba, 0x48, 0x1c, 0x72, 0x1a, 0x18, 0xff, 0x01, 0x92, 0x02, 0x14, 0x6a, 0x6f, 0x68,
	0x6e, 0x2e, 0x64, 0x6f, 0x65, 0x40, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x78, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x46, 0x52,
	0x4f, 0x4d, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x48, 0x49,
	0x50, 0x5f, 0x54, 0x4f, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42,
	0x49, 0x4c, 0x4c, 0x5f, 0x54, 0x4f, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x54, 0x4f, 0x10, 0x05, 0x22, 0x04, 0x08, 0x06,
	0x10, 0x06, 0x42, 0xb9, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x16, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65,
	0x61, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x61, 0x2d, 0x6e, 0x65, 0x78, 0x74, 0x2f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x64, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x41, 0x4f, 0x58, 0xaa, 0x02, 0x0c, 0x41, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x41, 0x70, 0x69, 0x5c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x18, 0x41, 0x70, 0x69, 0x5c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e,
	0x41, 0x70, 0x69, 0x3a, 0x3a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_order_v1_data_vendor_address_proto_rawDescOnce sync.Once
	file_api_order_v1_data_vendor_address_proto_rawDescData []byte
)

func file_api_order_v1_data_vendor_address_proto_rawDescGZIP() []byte {
	file_api_order_v1_data_vendor_address_proto_rawDescOnce.Do(func() {
		file_api_order_v1_data_vendor_address_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_order_v1_data_vendor_address_proto_rawDesc), len(file_api_order_v1_data_vendor_address_proto_rawDesc)))
	})
	return file_api_order_v1_data_vendor_address_proto_rawDescData
}

var file_api_order_v1_data_vendor_address_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_order_v1_data_vendor_address_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_order_v1_data_vendor_address_proto_goTypes = []any{
	(VendorAddress_Type)(0), // 0: api.order.v1.VendorAddress.Type
	(*VendorAddress)(nil),   // 1: api.order.v1.VendorAddress
}
var file_api_order_v1_data_vendor_address_proto_depIdxs = []int32{
	0, // 0: api.order.v1.VendorAddress.type:type_name -> api.order.v1.VendorAddress.Type
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_order_v1_data_vendor_address_proto_init() }
func file_api_order_v1_data_vendor_address_proto_init() {
	if File_api_order_v1_data_vendor_address_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_order_v1_data_vendor_address_proto_rawDesc), len(file_api_order_v1_data_vendor_address_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_order_v1_data_vendor_address_proto_goTypes,
		DependencyIndexes: file_api_order_v1_data_vendor_address_proto_depIdxs,
		EnumInfos:         file_api_order_v1_data_vendor_address_proto_enumTypes,
		MessageInfos:      file_api_order_v1_data_vendor_address_proto_msgTypes,
	}.Build()
	File_api_order_v1_data_vendor_address_proto = out.File
	file_api_order_v1_data_vendor_address_proto_goTypes = nil
	file_api_order_v1_data_vendor_address_proto_depIdxs = nil
}
