// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: api/order/v1/api_vendor_order.proto

package orderv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/gearment/gea-next/vendorsdk/common/platform/v1"
	v1 "github.com/gearment/gea-next/vendorsdk/common/type/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VendorListOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamId        string                 `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Filter        *VendorOrderFilter     `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Paging        *v1.Paging             `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
	IsLegacy      bool                   `protobuf:"varint,4,opt,name=is_legacy,json=isLegacy,proto3" json:"is_legacy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorListOrderRequest) Reset() {
	*x = VendorListOrderRequest{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorListOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorListOrderRequest) ProtoMessage() {}

func (x *VendorListOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorListOrderRequest.ProtoReflect.Descriptor instead.
func (*VendorListOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{0}
}

func (x *VendorListOrderRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *VendorListOrderRequest) GetFilter() *VendorOrderFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *VendorListOrderRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *VendorListOrderRequest) GetIsLegacy() bool {
	if x != nil {
		return x.IsLegacy
	}
	return false
}

type VendorListOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"` // @gotags: mapstructure:"paging"
	Data          []*VendorOrder         `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`     // @gotags: mapstructure:"data"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorListOrderResponse) Reset() {
	*x = VendorListOrderResponse{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorListOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorListOrderResponse) ProtoMessage() {}

func (x *VendorListOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorListOrderResponse.ProtoReflect.Descriptor instead.
func (*VendorListOrderResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{1}
}

func (x *VendorListOrderResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *VendorListOrderResponse) GetData() []*VendorOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderPriceCalculation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPriceCalculation) Reset() {
	*x = OrderPriceCalculation{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceCalculation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceCalculation) ProtoMessage() {}

func (x *OrderPriceCalculation) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceCalculation.ProtoReflect.Descriptor instead.
func (*OrderPriceCalculation) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2}
}

type VendorGetPriceQuoteRequest struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	TeamId        string                               `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	OrderPlatform string                               `protobuf:"bytes,2,opt,name=order_platform,json=orderPlatform,proto3" json:"order_platform,omitempty"`
	Billing       *OrderPriceCalculation_Billing       `protobuf:"bytes,3,opt,name=billing,proto3" json:"billing,omitempty"`
	Shipping      *OrderPriceCalculation_Shipping      `protobuf:"bytes,4,opt,name=shipping,proto3" json:"shipping,omitempty"`
	LineItems     []*OrderPriceCalculation_LineItem    `protobuf:"bytes,5,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	GiftMessages  []*OrderPriceCalculation_GiftMessage `protobuf:"bytes,6,rep,name=gift_messages,json=giftMessages,proto3" json:"gift_messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorGetPriceQuoteRequest) Reset() {
	*x = VendorGetPriceQuoteRequest{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorGetPriceQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorGetPriceQuoteRequest) ProtoMessage() {}

func (x *VendorGetPriceQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorGetPriceQuoteRequest.ProtoReflect.Descriptor instead.
func (*VendorGetPriceQuoteRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{3}
}

func (x *VendorGetPriceQuoteRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *VendorGetPriceQuoteRequest) GetOrderPlatform() string {
	if x != nil {
		return x.OrderPlatform
	}
	return ""
}

func (x *VendorGetPriceQuoteRequest) GetBilling() *OrderPriceCalculation_Billing {
	if x != nil {
		return x.Billing
	}
	return nil
}

func (x *VendorGetPriceQuoteRequest) GetShipping() *OrderPriceCalculation_Shipping {
	if x != nil {
		return x.Shipping
	}
	return nil
}

func (x *VendorGetPriceQuoteRequest) GetLineItems() []*OrderPriceCalculation_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

func (x *VendorGetPriceQuoteRequest) GetGiftMessages() []*OrderPriceCalculation_GiftMessage {
	if x != nil {
		return x.GiftMessages
	}
	return nil
}

type VendorGetPriceQuoteResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Data          *OrderPriceCalculation_OrderPriceQuote `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // @gotags: mapstructure:"data"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorGetPriceQuoteResponse) Reset() {
	*x = VendorGetPriceQuoteResponse{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorGetPriceQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorGetPriceQuoteResponse) ProtoMessage() {}

func (x *VendorGetPriceQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorGetPriceQuoteResponse.ProtoReflect.Descriptor instead.
func (*VendorGetPriceQuoteResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{4}
}

func (x *VendorGetPriceQuoteResponse) GetData() *OrderPriceCalculation_OrderPriceQuote {
	if x != nil {
		return x.Data
	}
	return nil
}

// Legacy
type LineItem struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	VariantId      int32                  `protobuf:"varint,1,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Quantity       int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Side           string                 `protobuf:"bytes,3,opt,name=side,proto3" json:"side,omitempty"`
	DesignLink     string                 `protobuf:"bytes,4,opt,name=design_link,json=designLink,proto3" json:"design_link,omitempty"`
	DesignLinkBack string                 `protobuf:"bytes,5,opt,name=design_link_back,json=designLinkBack,proto3" json:"design_link_back,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LineItem) Reset() {
	*x = LineItem{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineItem) ProtoMessage() {}

func (x *LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineItem.ProtoReflect.Descriptor instead.
func (*LineItem) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{5}
}

func (x *LineItem) GetVariantId() int32 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

func (x *LineItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *LineItem) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *LineItem) GetDesignLink() string {
	if x != nil {
		return x.DesignLink
	}
	return ""
}

func (x *LineItem) GetDesignLinkBack() string {
	if x != nil {
		return x.DesignLinkBack
	}
	return ""
}

type LegacyVendorGetPriceQuoteRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Credentials          *v1.LegacyCredentials  `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
	StoreId              string                 `protobuf:"bytes,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	ShippingEmail        string                 `protobuf:"bytes,3,opt,name=shipping_email,json=shippingEmail,proto3" json:"shipping_email,omitempty"`
	ShippingName         string                 `protobuf:"bytes,4,opt,name=shipping_name,json=shippingName,proto3" json:"shipping_name,omitempty"`
	ShippingPhone        string                 `protobuf:"bytes,5,opt,name=shipping_phone,json=shippingPhone,proto3" json:"shipping_phone,omitempty"`
	ShippingCompanyName  string                 `protobuf:"bytes,6,opt,name=shipping_company_name,json=shippingCompanyName,proto3" json:"shipping_company_name,omitempty"`
	ShippingAddress1     string                 `protobuf:"bytes,7,opt,name=shipping_address1,json=shippingAddress1,proto3" json:"shipping_address1,omitempty"`
	ShippingAddress2     string                 `protobuf:"bytes,8,opt,name=shipping_address2,json=shippingAddress2,proto3" json:"shipping_address2,omitempty"`
	ShippingProvinceCode string                 `protobuf:"bytes,9,opt,name=shipping_province_code,json=shippingProvinceCode,proto3" json:"shipping_province_code,omitempty"`
	ShippingCity         string                 `protobuf:"bytes,10,opt,name=shipping_city,json=shippingCity,proto3" json:"shipping_city,omitempty"`
	ShippingZipcode      int32                  `protobuf:"varint,11,opt,name=shipping_zipcode,json=shippingZipcode,proto3" json:"shipping_zipcode,omitempty"`
	ShippingCountryCode  string                 `protobuf:"bytes,12,opt,name=shipping_country_code,json=shippingCountryCode,proto3" json:"shipping_country_code,omitempty"`
	ShippingMethod       int32                  `protobuf:"varint,13,opt,name=shipping_method,json=shippingMethod,proto3" json:"shipping_method,omitempty"`
	LineItems            []*LineItem            `protobuf:"bytes,14,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *LegacyVendorGetPriceQuoteRequest) Reset() {
	*x = LegacyVendorGetPriceQuoteRequest{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyVendorGetPriceQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyVendorGetPriceQuoteRequest) ProtoMessage() {}

func (x *LegacyVendorGetPriceQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyVendorGetPriceQuoteRequest.ProtoReflect.Descriptor instead.
func (*LegacyVendorGetPriceQuoteRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{6}
}

func (x *LegacyVendorGetPriceQuoteRequest) GetCredentials() *v1.LegacyCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *LegacyVendorGetPriceQuoteRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingEmail() string {
	if x != nil {
		return x.ShippingEmail
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingName() string {
	if x != nil {
		return x.ShippingName
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingPhone() string {
	if x != nil {
		return x.ShippingPhone
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingCompanyName() string {
	if x != nil {
		return x.ShippingCompanyName
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingAddress1() string {
	if x != nil {
		return x.ShippingAddress1
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingAddress2() string {
	if x != nil {
		return x.ShippingAddress2
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingProvinceCode() string {
	if x != nil {
		return x.ShippingProvinceCode
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingCity() string {
	if x != nil {
		return x.ShippingCity
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingZipcode() int32 {
	if x != nil {
		return x.ShippingZipcode
	}
	return 0
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingCountryCode() string {
	if x != nil {
		return x.ShippingCountryCode
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingMethod() int32 {
	if x != nil {
		return x.ShippingMethod
	}
	return 0
}

func (x *LegacyVendorGetPriceQuoteRequest) GetLineItems() []*LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

type LegacyOrderPriceCalculation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Total          string                 `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`                                           // @gotags: mapstructure:"total"
	SubTotal       string                 `protobuf:"bytes,2,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`                     // @gotags: mapstructure:"sub_total"
	Tax            string                 `protobuf:"bytes,3,opt,name=tax,proto3" json:"tax,omitempty"`                                               // @gotags: mapstructure:"tax"
	ShippingFee    string                 `protobuf:"bytes,4,opt,name=shipping_fee,json=shippingFee,proto3" json:"shipping_fee,omitempty"`            // @gotags: mapstructure:"shipping_fee"
	GiftMessageFee string                 `protobuf:"bytes,5,opt,name=gift_message_fee,json=giftMessageFee,proto3" json:"gift_message_fee,omitempty"` // @gotags: mapstructure:"gift_message_fee"
	HandleFee      string                 `protobuf:"bytes,6,opt,name=handle_fee,json=handleFee,proto3" json:"handle_fee,omitempty"`                  // @gotags: mapstructure:"handle_fee"
	TotalDiscount  string                 `protobuf:"bytes,7,opt,name=total_discount,json=totalDiscount,proto3" json:"total_discount,omitempty"`      // @gotags: mapstructure:"total_discount"
	Currency       string                 `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`                                     // @gotags: mapstructure:"currency"
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LegacyOrderPriceCalculation) Reset() {
	*x = LegacyOrderPriceCalculation{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyOrderPriceCalculation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyOrderPriceCalculation) ProtoMessage() {}

func (x *LegacyOrderPriceCalculation) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyOrderPriceCalculation.ProtoReflect.Descriptor instead.
func (*LegacyOrderPriceCalculation) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{7}
}

func (x *LegacyOrderPriceCalculation) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *LegacyOrderPriceCalculation) GetSubTotal() string {
	if x != nil {
		return x.SubTotal
	}
	return ""
}

func (x *LegacyOrderPriceCalculation) GetTax() string {
	if x != nil {
		return x.Tax
	}
	return ""
}

func (x *LegacyOrderPriceCalculation) GetShippingFee() string {
	if x != nil {
		return x.ShippingFee
	}
	return ""
}

func (x *LegacyOrderPriceCalculation) GetGiftMessageFee() string {
	if x != nil {
		return x.GiftMessageFee
	}
	return ""
}

func (x *LegacyOrderPriceCalculation) GetHandleFee() string {
	if x != nil {
		return x.HandleFee
	}
	return ""
}

func (x *LegacyOrderPriceCalculation) GetTotalDiscount() string {
	if x != nil {
		return x.TotalDiscount
	}
	return ""
}

func (x *LegacyOrderPriceCalculation) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type LegacyVendorGetPriceQuoteResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Data          *LegacyOrderPriceCalculation `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // @gotags: mapstructure:"data"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LegacyVendorGetPriceQuoteResponse) Reset() {
	*x = LegacyVendorGetPriceQuoteResponse{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyVendorGetPriceQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyVendorGetPriceQuoteResponse) ProtoMessage() {}

func (x *LegacyVendorGetPriceQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyVendorGetPriceQuoteResponse.ProtoReflect.Descriptor instead.
func (*LegacyVendorGetPriceQuoteResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{8}
}

func (x *LegacyVendorGetPriceQuoteResponse) GetData() *LegacyOrderPriceCalculation {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderPriceCalculation_Billing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IossNumber    string                 `protobuf:"bytes,1,opt,name=ioss_number,json=iossNumber,proto3" json:"ioss_number,omitempty"`
	TaxNumber     string                 `protobuf:"bytes,2,opt,name=tax_number,json=taxNumber,proto3" json:"tax_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPriceCalculation_Billing) Reset() {
	*x = OrderPriceCalculation_Billing{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceCalculation_Billing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceCalculation_Billing) ProtoMessage() {}

func (x *OrderPriceCalculation_Billing) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceCalculation_Billing.ProtoReflect.Descriptor instead.
func (*OrderPriceCalculation_Billing) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2, 0}
}

func (x *OrderPriceCalculation_Billing) GetIossNumber() string {
	if x != nil {
		return x.IossNumber
	}
	return ""
}

func (x *OrderPriceCalculation_Billing) GetTaxNumber() string {
	if x != nil {
		return x.TaxNumber
	}
	return ""
}

type OrderPriceCalculation_Shipping struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Address       *OrderPriceCalculation_Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Label         *OrderPriceCalculation_Label   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPriceCalculation_Shipping) Reset() {
	*x = OrderPriceCalculation_Shipping{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceCalculation_Shipping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceCalculation_Shipping) ProtoMessage() {}

func (x *OrderPriceCalculation_Shipping) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceCalculation_Shipping.ProtoReflect.Descriptor instead.
func (*OrderPriceCalculation_Shipping) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2, 1}
}

func (x *OrderPriceCalculation_Shipping) GetAddress() *OrderPriceCalculation_Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *OrderPriceCalculation_Shipping) GetLabel() *OrderPriceCalculation_Label {
	if x != nil {
		return x.Label
	}
	return nil
}

type OrderPriceCalculation_Address struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	StateCode     string                 `protobuf:"bytes,2,opt,name=state_code,json=stateCode,proto3" json:"state_code,omitempty"`
	CountryCode   string                 `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPriceCalculation_Address) Reset() {
	*x = OrderPriceCalculation_Address{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceCalculation_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceCalculation_Address) ProtoMessage() {}

func (x *OrderPriceCalculation_Address) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceCalculation_Address.ProtoReflect.Descriptor instead.
func (*OrderPriceCalculation_Address) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2, 2}
}

func (x *OrderPriceCalculation_Address) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *OrderPriceCalculation_Address) GetStateCode() string {
	if x != nil {
		return x.StateCode
	}
	return ""
}

func (x *OrderPriceCalculation_Address) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type OrderPriceCalculation_Label struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPriceCalculation_Label) Reset() {
	*x = OrderPriceCalculation_Label{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceCalculation_Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceCalculation_Label) ProtoMessage() {}

func (x *OrderPriceCalculation_Label) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceCalculation_Label.ProtoReflect.Descriptor instead.
func (*OrderPriceCalculation_Label) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2, 3}
}

func (x *OrderPriceCalculation_Label) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type OrderPriceCalculation_LineItem struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	VariantId      string                 `protobuf:"bytes,1,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Quantity       int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PrintLocations []string               `protobuf:"bytes,3,rep,name=print_locations,json=printLocations,proto3" json:"print_locations,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *OrderPriceCalculation_LineItem) Reset() {
	*x = OrderPriceCalculation_LineItem{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceCalculation_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceCalculation_LineItem) ProtoMessage() {}

func (x *OrderPriceCalculation_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceCalculation_LineItem.ProtoReflect.Descriptor instead.
func (*OrderPriceCalculation_LineItem) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2, 4}
}

func (x *OrderPriceCalculation_LineItem) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *OrderPriceCalculation_LineItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderPriceCalculation_LineItem) GetPrintLocations() []string {
	if x != nil {
		return x.PrintLocations
	}
	return nil
}

type OrderPriceCalculation_GiftMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GiftMessageId string                 `protobuf:"bytes,1,opt,name=gift_message_id,json=giftMessageId,proto3" json:"gift_message_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPriceCalculation_GiftMessage) Reset() {
	*x = OrderPriceCalculation_GiftMessage{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceCalculation_GiftMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceCalculation_GiftMessage) ProtoMessage() {}

func (x *OrderPriceCalculation_GiftMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceCalculation_GiftMessage.ProtoReflect.Descriptor instead.
func (*OrderPriceCalculation_GiftMessage) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2, 5}
}

func (x *OrderPriceCalculation_GiftMessage) GetGiftMessageId() string {
	if x != nil {
		return x.GiftMessageId
	}
	return ""
}

func (x *OrderPriceCalculation_GiftMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type OrderPriceCalculation_FeePriceQuote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`            // @gotags: mapstructure:"order_id"
	LineItemId    string                 `protobuf:"bytes,2,opt,name=line_item_id,json=lineItemId,proto3" json:"line_item_id,omitempty"` // @gotags: mapstructure:"line_item_id"
	FeeCode       string                 `protobuf:"bytes,3,opt,name=fee_code,json=feeCode,proto3" json:"fee_code,omitempty"`            // @gotags: mapstructure:"fee_code"
	Amount        *v1.Money              `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`                             // @gotags: mapstructure:"amount"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPriceCalculation_FeePriceQuote) Reset() {
	*x = OrderPriceCalculation_FeePriceQuote{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceCalculation_FeePriceQuote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceCalculation_FeePriceQuote) ProtoMessage() {}

func (x *OrderPriceCalculation_FeePriceQuote) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceCalculation_FeePriceQuote.ProtoReflect.Descriptor instead.
func (*OrderPriceCalculation_FeePriceQuote) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2, 6}
}

func (x *OrderPriceCalculation_FeePriceQuote) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderPriceCalculation_FeePriceQuote) GetLineItemId() string {
	if x != nil {
		return x.LineItemId
	}
	return ""
}

func (x *OrderPriceCalculation_FeePriceQuote) GetFeeCode() string {
	if x != nil {
		return x.FeeCode
	}
	return ""
}

func (x *OrderPriceCalculation_FeePriceQuote) GetAmount() *v1.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

type OrderPriceCalculation_LineItemPriceQuote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LineSubTotal  *v1.Money              `protobuf:"bytes,1,opt,name=line_sub_total,json=lineSubTotal,proto3" json:"line_sub_total,omitempty"`     // @gotags: mapstructure:"line_sub_total"
	LineTax       *v1.Money              `protobuf:"bytes,2,opt,name=line_tax,json=lineTax,proto3" json:"line_tax,omitempty"`                      // @gotags: mapstructure:"line_tax"
	LineFee       *v1.Money              `protobuf:"bytes,3,opt,name=line_fee,json=lineFee,proto3" json:"line_fee,omitempty"`                      // @gotags: mapstructure:"line_fee"
	LineDiscount  *v1.Money              `protobuf:"bytes,4,opt,name=line_discount,json=lineDiscount,proto3" json:"line_discount,omitempty"`       // @gotags: mapstructure:"line_discount"
	LineTotal     *v1.Money              `protobuf:"bytes,5,opt,name=line_total,json=lineTotal,proto3" json:"line_total,omitempty"`                // @gotags: mapstructure:"line_total"
	ItemPrice     *v1.Money              `protobuf:"bytes,6,opt,name=item_price,json=itemPrice,proto3" json:"item_price,omitempty"`                // @gotags: mapstructure:"item_price"
	ItemFee       *v1.Money              `protobuf:"bytes,7,opt,name=item_fee,json=itemFee,proto3" json:"item_fee,omitempty"`                      // @gotags: mapstructure:"item_fee"
	ItemDiscount  *v1.Money              `protobuf:"bytes,8,opt,name=item_discount,json=itemDiscount,proto3" json:"item_discount,omitempty"`       // @gotags: mapstructure:"item_discount"
	ItemQuantity  int32                  `protobuf:"varint,9,opt,name=item_quantity,json=itemQuantity,proto3" json:"item_quantity,omitempty"`      // @gotags: mapstructure:"item_quantity"
	Id            int64                  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`                                             // @gotags: mapstructure:"id"
	UnitBasePrice *v1.Money              `protobuf:"bytes,11,opt,name=unit_base_price,json=unitBasePrice,proto3" json:"unit_base_price,omitempty"` // @gotags: mapstructure:"unit_base_price"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderPriceCalculation_LineItemPriceQuote) Reset() {
	*x = OrderPriceCalculation_LineItemPriceQuote{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceCalculation_LineItemPriceQuote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceCalculation_LineItemPriceQuote) ProtoMessage() {}

func (x *OrderPriceCalculation_LineItemPriceQuote) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceCalculation_LineItemPriceQuote.ProtoReflect.Descriptor instead.
func (*OrderPriceCalculation_LineItemPriceQuote) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2, 7}
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetLineSubTotal() *v1.Money {
	if x != nil {
		return x.LineSubTotal
	}
	return nil
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetLineTax() *v1.Money {
	if x != nil {
		return x.LineTax
	}
	return nil
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetLineFee() *v1.Money {
	if x != nil {
		return x.LineFee
	}
	return nil
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetLineDiscount() *v1.Money {
	if x != nil {
		return x.LineDiscount
	}
	return nil
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetLineTotal() *v1.Money {
	if x != nil {
		return x.LineTotal
	}
	return nil
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetItemPrice() *v1.Money {
	if x != nil {
		return x.ItemPrice
	}
	return nil
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetItemFee() *v1.Money {
	if x != nil {
		return x.ItemFee
	}
	return nil
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetItemDiscount() *v1.Money {
	if x != nil {
		return x.ItemDiscount
	}
	return nil
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetItemQuantity() int32 {
	if x != nil {
		return x.ItemQuantity
	}
	return 0
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderPriceCalculation_LineItemPriceQuote) GetUnitBasePrice() *v1.Money {
	if x != nil {
		return x.UnitBasePrice
	}
	return nil
}

type OrderPriceCalculation_OrderPriceQuote struct {
	state               protoimpl.MessageState                      `protogen:"open.v1"`
	OrderShippingFee    *v1.Money                                   `protobuf:"bytes,1,opt,name=order_shipping_fee,json=orderShippingFee,proto3" json:"order_shipping_fee,omitempty"`            // @gotags: mapstructure:"order_shipping_fee"
	OrderFee            *v1.Money                                   `protobuf:"bytes,2,opt,name=order_fee,json=orderFee,proto3" json:"order_fee,omitempty"`                                      // @gotags: mapstructure:"order_fee"
	OrderTax            *v1.Money                                   `protobuf:"bytes,3,opt,name=order_tax,json=orderTax,proto3" json:"order_tax,omitempty"`                                      // @gotags: mapstructure:"order_tax"
	OrderSubTotal       *v1.Money                                   `protobuf:"bytes,4,opt,name=order_sub_total,json=orderSubTotal,proto3" json:"order_sub_total,omitempty"`                     // @gotags: mapstructure:"order_sub_total"
	OrderTotal          *v1.Money                                   `protobuf:"bytes,5,opt,name=order_total,json=orderTotal,proto3" json:"order_total,omitempty"`                                // @gotags: mapstructure:"order_total"
	OrderDiscount       *v1.Money                                   `protobuf:"bytes,6,opt,name=order_discount,json=orderDiscount,proto3" json:"order_discount,omitempty"`                       // @gotags: mapstructure:"order_discount"
	LineItems           []*OrderPriceCalculation_LineItemPriceQuote `protobuf:"bytes,7,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`                                   // @gotags: mapstructure:"line_items"
	Fees                []*OrderPriceCalculation_FeePriceQuote      `protobuf:"bytes,8,rep,name=fees,proto3" json:"fees,omitempty"`                                                              // @gotags: mapstructure:"fees"
	OrderGiftMessageFee *v1.Money                                   `protobuf:"bytes,9,opt,name=order_gift_message_fee,json=orderGiftMessageFee,proto3" json:"order_gift_message_fee,omitempty"` // @gotags: mapstructure:"order_gift_message_fee"
	OrderHandleFee      *v1.Money                                   `protobuf:"bytes,10,opt,name=order_handle_fee,json=orderHandleFee,proto3" json:"order_handle_fee,omitempty"`                 // @gotags: mapstructure:"order_handle_fee"
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *OrderPriceCalculation_OrderPriceQuote) Reset() {
	*x = OrderPriceCalculation_OrderPriceQuote{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderPriceCalculation_OrderPriceQuote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceCalculation_OrderPriceQuote) ProtoMessage() {}

func (x *OrderPriceCalculation_OrderPriceQuote) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceCalculation_OrderPriceQuote.ProtoReflect.Descriptor instead.
func (*OrderPriceCalculation_OrderPriceQuote) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2, 8}
}

func (x *OrderPriceCalculation_OrderPriceQuote) GetOrderShippingFee() *v1.Money {
	if x != nil {
		return x.OrderShippingFee
	}
	return nil
}

func (x *OrderPriceCalculation_OrderPriceQuote) GetOrderFee() *v1.Money {
	if x != nil {
		return x.OrderFee
	}
	return nil
}

func (x *OrderPriceCalculation_OrderPriceQuote) GetOrderTax() *v1.Money {
	if x != nil {
		return x.OrderTax
	}
	return nil
}

func (x *OrderPriceCalculation_OrderPriceQuote) GetOrderSubTotal() *v1.Money {
	if x != nil {
		return x.OrderSubTotal
	}
	return nil
}

func (x *OrderPriceCalculation_OrderPriceQuote) GetOrderTotal() *v1.Money {
	if x != nil {
		return x.OrderTotal
	}
	return nil
}

func (x *OrderPriceCalculation_OrderPriceQuote) GetOrderDiscount() *v1.Money {
	if x != nil {
		return x.OrderDiscount
	}
	return nil
}

func (x *OrderPriceCalculation_OrderPriceQuote) GetLineItems() []*OrderPriceCalculation_LineItemPriceQuote {
	if x != nil {
		return x.LineItems
	}
	return nil
}

func (x *OrderPriceCalculation_OrderPriceQuote) GetFees() []*OrderPriceCalculation_FeePriceQuote {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *OrderPriceCalculation_OrderPriceQuote) GetOrderGiftMessageFee() *v1.Money {
	if x != nil {
		return x.OrderGiftMessageFee
	}
	return nil
}

func (x *OrderPriceCalculation_OrderPriceQuote) GetOrderHandleFee() *v1.Money {
	if x != nil {
		return x.OrderHandleFee
	}
	return nil
}

var File_api_order_v1_api_vendor_order_proto protoreflect.FileDescriptor

var file_api_order_v1_api_vendor_order_proto_rawDesc = string([]byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x69, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62,
	0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x01, 0x0a, 0x16, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xde, 0x0f, 0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x49, 0x0a, 0x07, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6f, 0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6f, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x92, 0x01, 0x0a,
	0x08, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x3f, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x1a, 0x63, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x19, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x1a, 0x82, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x28,
	0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x1e, 0x52, 0x09, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a,
	0x02, 0x20, 0x00, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a,
	0x0f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x64, 0x0a, 0x0b, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x0f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x1e, 0x52, 0x0d, 0x67, 0x69, 0x66, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03,
	0x18, 0xac, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x96, 0x01, 0x0a,
	0x0d, 0x46, 0x65, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x65, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x65, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xbf, 0x04, 0x0a, 0x12, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0c, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x08, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x78, 0x12, 0x30, 0x0a, 0x08, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x65, 0x65, 0x12, 0x3a, 0x0a,
	0x0d, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0c, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x34, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x1a, 0x9e, 0x05, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65,
	0x12, 0x32, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x46, 0x65, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x61,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x61, 0x78, 0x12, 0x3d, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x3c, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x55, 0x0a,
	0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x45, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x65, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x16, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x52, 0x13, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x22, 0x90, 0x03, 0x0a, 0x1a, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x45, 0x0a, 0x07, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x48,
	0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x54, 0x0a, 0x0d, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x67,
	0x69, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x66, 0x0a, 0x1b, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xba, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x2a, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xba, 0x48, 0x08, 0x1a, 0x06, 0x18, 0xa0, 0x8d, 0x06, 0x20,
	0x00, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x61, 0x63, 0x6b,
	0x22, 0xe3, 0x05, 0x0a, 0x20, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2e, 0x0a, 0x0d,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x1e, 0x52, 0x0c,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xac, 0x02, 0x52, 0x10,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31,
	0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x34, 0x0a,
	0x16, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72,
	0x04, 0x10, 0x01, 0x18, 0x1e, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43,
	0x69, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xba,
	0x48, 0x09, 0x1a, 0x07, 0x18, 0x80, 0xad, 0xe2, 0x04, 0x20, 0x00, 0x52, 0x0f, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x5a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x15,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06,
	0x72, 0x04, 0x10, 0x01, 0x18, 0x1e, 0x52, 0x13, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x0f, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xba, 0x48, 0x06, 0x1a, 0x04, 0x18, 0x0a, 0x28, 0x00, 0x52,
	0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x35, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x91, 0x02, 0x0a, 0x1b, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x69, 0x66, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x62, 0x0a, 0x21, 0x4c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x8f,
	0x02, 0x0a, 0x0e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x50,
	0x49, 0x12, 0x63, 0x0a, 0x0f, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12, 0x97, 0x01, 0x0a, 0x13, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d,
	0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2d, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x90, 0x02, 0x01,
	0x42, 0xb6, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x41, 0x70, 0x69, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x61, 0x72, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x67, 0x65, 0x61, 0x2d, 0x6e, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x64, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x4f, 0x58, 0xaa,
	0x02, 0x0c, 0x41, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0c, 0x41, 0x70, 0x69, 0x5c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18,
	0x41, 0x70, 0x69, 0x5c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x41, 0x70, 0x69, 0x3a, 0x3a,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_api_order_v1_api_vendor_order_proto_rawDescOnce sync.Once
	file_api_order_v1_api_vendor_order_proto_rawDescData []byte
)

func file_api_order_v1_api_vendor_order_proto_rawDescGZIP() []byte {
	file_api_order_v1_api_vendor_order_proto_rawDescOnce.Do(func() {
		file_api_order_v1_api_vendor_order_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_order_v1_api_vendor_order_proto_rawDesc), len(file_api_order_v1_api_vendor_order_proto_rawDesc)))
	})
	return file_api_order_v1_api_vendor_order_proto_rawDescData
}

var file_api_order_v1_api_vendor_order_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_order_v1_api_vendor_order_proto_goTypes = []any{
	(*VendorListOrderRequest)(nil),                   // 0: api.order.v1.VendorListOrderRequest
	(*VendorListOrderResponse)(nil),                  // 1: api.order.v1.VendorListOrderResponse
	(*OrderPriceCalculation)(nil),                    // 2: api.order.v1.OrderPriceCalculation
	(*VendorGetPriceQuoteRequest)(nil),               // 3: api.order.v1.VendorGetPriceQuoteRequest
	(*VendorGetPriceQuoteResponse)(nil),              // 4: api.order.v1.VendorGetPriceQuoteResponse
	(*LineItem)(nil),                                 // 5: api.order.v1.LineItem
	(*LegacyVendorGetPriceQuoteRequest)(nil),         // 6: api.order.v1.LegacyVendorGetPriceQuoteRequest
	(*LegacyOrderPriceCalculation)(nil),              // 7: api.order.v1.LegacyOrderPriceCalculation
	(*LegacyVendorGetPriceQuoteResponse)(nil),        // 8: api.order.v1.LegacyVendorGetPriceQuoteResponse
	(*OrderPriceCalculation_Billing)(nil),            // 9: api.order.v1.OrderPriceCalculation.Billing
	(*OrderPriceCalculation_Shipping)(nil),           // 10: api.order.v1.OrderPriceCalculation.Shipping
	(*OrderPriceCalculation_Address)(nil),            // 11: api.order.v1.OrderPriceCalculation.Address
	(*OrderPriceCalculation_Label)(nil),              // 12: api.order.v1.OrderPriceCalculation.Label
	(*OrderPriceCalculation_LineItem)(nil),           // 13: api.order.v1.OrderPriceCalculation.LineItem
	(*OrderPriceCalculation_GiftMessage)(nil),        // 14: api.order.v1.OrderPriceCalculation.GiftMessage
	(*OrderPriceCalculation_FeePriceQuote)(nil),      // 15: api.order.v1.OrderPriceCalculation.FeePriceQuote
	(*OrderPriceCalculation_LineItemPriceQuote)(nil), // 16: api.order.v1.OrderPriceCalculation.LineItemPriceQuote
	(*OrderPriceCalculation_OrderPriceQuote)(nil),    // 17: api.order.v1.OrderPriceCalculation.OrderPriceQuote
	(*VendorOrderFilter)(nil),                        // 18: api.order.v1.VendorOrderFilter
	(*v1.Paging)(nil),                                // 19: common.type.v1.Paging
	(*v1.PagingResponse)(nil),                        // 20: common.type.v1.PagingResponse
	(*VendorOrder)(nil),                              // 21: api.order.v1.VendorOrder
	(*v1.LegacyCredentials)(nil),                     // 22: common.type.v1.LegacyCredentials
	(*v1.Money)(nil),                                 // 23: common.type.v1.Money
}
var file_api_order_v1_api_vendor_order_proto_depIdxs = []int32{
	18, // 0: api.order.v1.VendorListOrderRequest.filter:type_name -> api.order.v1.VendorOrderFilter
	19, // 1: api.order.v1.VendorListOrderRequest.paging:type_name -> common.type.v1.Paging
	20, // 2: api.order.v1.VendorListOrderResponse.paging:type_name -> common.type.v1.PagingResponse
	21, // 3: api.order.v1.VendorListOrderResponse.data:type_name -> api.order.v1.VendorOrder
	9,  // 4: api.order.v1.VendorGetPriceQuoteRequest.billing:type_name -> api.order.v1.OrderPriceCalculation.Billing
	10, // 5: api.order.v1.VendorGetPriceQuoteRequest.shipping:type_name -> api.order.v1.OrderPriceCalculation.Shipping
	13, // 6: api.order.v1.VendorGetPriceQuoteRequest.line_items:type_name -> api.order.v1.OrderPriceCalculation.LineItem
	14, // 7: api.order.v1.VendorGetPriceQuoteRequest.gift_messages:type_name -> api.order.v1.OrderPriceCalculation.GiftMessage
	17, // 8: api.order.v1.VendorGetPriceQuoteResponse.data:type_name -> api.order.v1.OrderPriceCalculation.OrderPriceQuote
	22, // 9: api.order.v1.LegacyVendorGetPriceQuoteRequest.credentials:type_name -> common.type.v1.LegacyCredentials
	5,  // 10: api.order.v1.LegacyVendorGetPriceQuoteRequest.line_items:type_name -> api.order.v1.LineItem
	7,  // 11: api.order.v1.LegacyVendorGetPriceQuoteResponse.data:type_name -> api.order.v1.LegacyOrderPriceCalculation
	11, // 12: api.order.v1.OrderPriceCalculation.Shipping.address:type_name -> api.order.v1.OrderPriceCalculation.Address
	12, // 13: api.order.v1.OrderPriceCalculation.Shipping.label:type_name -> api.order.v1.OrderPriceCalculation.Label
	23, // 14: api.order.v1.OrderPriceCalculation.FeePriceQuote.amount:type_name -> common.type.v1.Money
	23, // 15: api.order.v1.OrderPriceCalculation.LineItemPriceQuote.line_sub_total:type_name -> common.type.v1.Money
	23, // 16: api.order.v1.OrderPriceCalculation.LineItemPriceQuote.line_tax:type_name -> common.type.v1.Money
	23, // 17: api.order.v1.OrderPriceCalculation.LineItemPriceQuote.line_fee:type_name -> common.type.v1.Money
	23, // 18: api.order.v1.OrderPriceCalculation.LineItemPriceQuote.line_discount:type_name -> common.type.v1.Money
	23, // 19: api.order.v1.OrderPriceCalculation.LineItemPriceQuote.line_total:type_name -> common.type.v1.Money
	23, // 20: api.order.v1.OrderPriceCalculation.LineItemPriceQuote.item_price:type_name -> common.type.v1.Money
	23, // 21: api.order.v1.OrderPriceCalculation.LineItemPriceQuote.item_fee:type_name -> common.type.v1.Money
	23, // 22: api.order.v1.OrderPriceCalculation.LineItemPriceQuote.item_discount:type_name -> common.type.v1.Money
	23, // 23: api.order.v1.OrderPriceCalculation.LineItemPriceQuote.unit_base_price:type_name -> common.type.v1.Money
	23, // 24: api.order.v1.OrderPriceCalculation.OrderPriceQuote.order_shipping_fee:type_name -> common.type.v1.Money
	23, // 25: api.order.v1.OrderPriceCalculation.OrderPriceQuote.order_fee:type_name -> common.type.v1.Money
	23, // 26: api.order.v1.OrderPriceCalculation.OrderPriceQuote.order_tax:type_name -> common.type.v1.Money
	23, // 27: api.order.v1.OrderPriceCalculation.OrderPriceQuote.order_sub_total:type_name -> common.type.v1.Money
	23, // 28: api.order.v1.OrderPriceCalculation.OrderPriceQuote.order_total:type_name -> common.type.v1.Money
	23, // 29: api.order.v1.OrderPriceCalculation.OrderPriceQuote.order_discount:type_name -> common.type.v1.Money
	16, // 30: api.order.v1.OrderPriceCalculation.OrderPriceQuote.line_items:type_name -> api.order.v1.OrderPriceCalculation.LineItemPriceQuote
	15, // 31: api.order.v1.OrderPriceCalculation.OrderPriceQuote.fees:type_name -> api.order.v1.OrderPriceCalculation.FeePriceQuote
	23, // 32: api.order.v1.OrderPriceCalculation.OrderPriceQuote.order_gift_message_fee:type_name -> common.type.v1.Money
	23, // 33: api.order.v1.OrderPriceCalculation.OrderPriceQuote.order_handle_fee:type_name -> common.type.v1.Money
	0,  // 34: api.order.v1.VendorOrderAPI.VendorListOrder:input_type -> api.order.v1.VendorListOrderRequest
	3,  // 35: api.order.v1.VendorOrderAPI.VendorGetPriceQuote:input_type -> api.order.v1.VendorGetPriceQuoteRequest
	1,  // 36: api.order.v1.VendorOrderAPI.VendorListOrder:output_type -> api.order.v1.VendorListOrderResponse
	4,  // 37: api.order.v1.VendorOrderAPI.VendorGetPriceQuote:output_type -> api.order.v1.VendorGetPriceQuoteResponse
	36, // [36:38] is the sub-list for method output_type
	34, // [34:36] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_api_order_v1_api_vendor_order_proto_init() }
func file_api_order_v1_api_vendor_order_proto_init() {
	if File_api_order_v1_api_vendor_order_proto != nil {
		return
	}
	file_api_order_v1_data_vendor_order_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_order_v1_api_vendor_order_proto_rawDesc), len(file_api_order_v1_api_vendor_order_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_order_v1_api_vendor_order_proto_goTypes,
		DependencyIndexes: file_api_order_v1_api_vendor_order_proto_depIdxs,
		MessageInfos:      file_api_order_v1_api_vendor_order_proto_msgTypes,
	}.Build()
	File_api_order_v1_api_vendor_order_proto = out.File
	file_api_order_v1_api_vendor_order_proto_goTypes = nil
	file_api_order_v1_api_vendor_order_proto_depIdxs = nil
}
