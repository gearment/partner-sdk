// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: api/order/v1/api_vendor_order.proto

package orderv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/gearment/gea-next/vendorsdk/common/type/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VendorListOrderDraftRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Filter        *VendorOrderDraftFilter `protobuf:"bytes,1,opt,name=filter,json=@squash.filter,proto3" json:"filter,omitempty"`
	Paging        *v1.Paging              `protobuf:"bytes,2,opt,name=paging,json=@squash.paging,proto3" json:"paging,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorListOrderDraftRequest) Reset() {
	*x = VendorListOrderDraftRequest{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorListOrderDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorListOrderDraftRequest) ProtoMessage() {}

func (x *VendorListOrderDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorListOrderDraftRequest.ProtoReflect.Descriptor instead.
func (*VendorListOrderDraftRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{0}
}

func (x *VendorListOrderDraftRequest) GetFilter() *VendorOrderDraftFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *VendorListOrderDraftRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type VendorListOrderDraftResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Data          []*VendorOrderDraft    `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorListOrderDraftResponse) Reset() {
	*x = VendorListOrderDraftResponse{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorListOrderDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorListOrderDraftResponse) ProtoMessage() {}

func (x *VendorListOrderDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorListOrderDraftResponse.ProtoReflect.Descriptor instead.
func (*VendorListOrderDraftResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{1}
}

func (x *VendorListOrderDraftResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *VendorListOrderDraftResponse) GetData() []*VendorOrderDraft {
	if x != nil {
		return x.Data
	}
	return nil
}

type VendorListOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *VendorOrderFilter     `protobuf:"bytes,1,opt,name=filter,json=@squash.filter,proto3" json:"filter,omitempty"`
	Paging        *v1.Paging             `protobuf:"bytes,2,opt,name=paging,json=@squash.paging,proto3" json:"paging,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorListOrderRequest) Reset() {
	*x = VendorListOrderRequest{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorListOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorListOrderRequest) ProtoMessage() {}

func (x *VendorListOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorListOrderRequest.ProtoReflect.Descriptor instead.
func (*VendorListOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{2}
}

func (x *VendorListOrderRequest) GetFilter() *VendorOrderFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *VendorListOrderRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type VendorListOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paging        *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Data          []*VendorOrder         `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorListOrderResponse) Reset() {
	*x = VendorListOrderResponse{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorListOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorListOrderResponse) ProtoMessage() {}

func (x *VendorListOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorListOrderResponse.ProtoReflect.Descriptor instead.
func (*VendorListOrderResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{3}
}

func (x *VendorListOrderResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *VendorListOrderResponse) GetData() []*VendorOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type VendorCreateOrderDraftRequest struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Data          *VendorOrderDraftManualCreationParams `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorCreateOrderDraftRequest) Reset() {
	*x = VendorCreateOrderDraftRequest{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorCreateOrderDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorCreateOrderDraftRequest) ProtoMessage() {}

func (x *VendorCreateOrderDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorCreateOrderDraftRequest.ProtoReflect.Descriptor instead.
func (*VendorCreateOrderDraftRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{4}
}

func (x *VendorCreateOrderDraftRequest) GetData() *VendorOrderDraftManualCreationParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type VendorCreateOrderDraftResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *VendorOrderDraft      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorCreateOrderDraftResponse) Reset() {
	*x = VendorCreateOrderDraftResponse{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorCreateOrderDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorCreateOrderDraftResponse) ProtoMessage() {}

func (x *VendorCreateOrderDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorCreateOrderDraftResponse.ProtoReflect.Descriptor instead.
func (*VendorCreateOrderDraftResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{5}
}

func (x *VendorCreateOrderDraftResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VendorCreateOrderDraftResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VendorCreateOrderDraftResponse) GetData() *VendorOrderDraft {
	if x != nil {
		return x.Data
	}
	return nil
}

type VendorCreateOrderDraftWithLabelRequest struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Data          *VendorOrderDraftWithLabelCreationParams `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorCreateOrderDraftWithLabelRequest) Reset() {
	*x = VendorCreateOrderDraftWithLabelRequest{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorCreateOrderDraftWithLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorCreateOrderDraftWithLabelRequest) ProtoMessage() {}

func (x *VendorCreateOrderDraftWithLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorCreateOrderDraftWithLabelRequest.ProtoReflect.Descriptor instead.
func (*VendorCreateOrderDraftWithLabelRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{6}
}

func (x *VendorCreateOrderDraftWithLabelRequest) GetData() *VendorOrderDraftWithLabelCreationParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type VendorCreateOrderDraftWithLabelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *VendorOrderDraft      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorCreateOrderDraftWithLabelResponse) Reset() {
	*x = VendorCreateOrderDraftWithLabelResponse{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorCreateOrderDraftWithLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorCreateOrderDraftWithLabelResponse) ProtoMessage() {}

func (x *VendorCreateOrderDraftWithLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorCreateOrderDraftWithLabelResponse.ProtoReflect.Descriptor instead.
func (*VendorCreateOrderDraftWithLabelResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{7}
}

func (x *VendorCreateOrderDraftWithLabelResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VendorCreateOrderDraftWithLabelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VendorCreateOrderDraftWithLabelResponse) GetData() *VendorOrderDraft {
	if x != nil {
		return x.Data
	}
	return nil
}

type VendorGetPriceQuoteRequest struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	OrderPlatform string                                     `protobuf:"bytes,1,opt,name=order_platform,json=orderPlatform,proto3" json:"order_platform,omitempty"`
	Billing       *VendorOrderPriceCalculation_Billing       `protobuf:"bytes,2,opt,name=billing,proto3" json:"billing,omitempty"`
	Shipping      *VendorOrderPriceCalculation_Shipping      `protobuf:"bytes,3,opt,name=shipping,proto3" json:"shipping,omitempty"`
	LineItems     []*VendorOrderPriceCalculation_LineItem    `protobuf:"bytes,4,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	GiftMessages  []*VendorOrderPriceCalculation_GiftMessage `protobuf:"bytes,5,rep,name=gift_messages,json=giftMessages,proto3" json:"gift_messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorGetPriceQuoteRequest) Reset() {
	*x = VendorGetPriceQuoteRequest{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorGetPriceQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorGetPriceQuoteRequest) ProtoMessage() {}

func (x *VendorGetPriceQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorGetPriceQuoteRequest.ProtoReflect.Descriptor instead.
func (*VendorGetPriceQuoteRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{8}
}

func (x *VendorGetPriceQuoteRequest) GetOrderPlatform() string {
	if x != nil {
		return x.OrderPlatform
	}
	return ""
}

func (x *VendorGetPriceQuoteRequest) GetBilling() *VendorOrderPriceCalculation_Billing {
	if x != nil {
		return x.Billing
	}
	return nil
}

func (x *VendorGetPriceQuoteRequest) GetShipping() *VendorOrderPriceCalculation_Shipping {
	if x != nil {
		return x.Shipping
	}
	return nil
}

func (x *VendorGetPriceQuoteRequest) GetLineItems() []*VendorOrderPriceCalculation_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

func (x *VendorGetPriceQuoteRequest) GetGiftMessages() []*VendorOrderPriceCalculation_GiftMessage {
	if x != nil {
		return x.GiftMessages
	}
	return nil
}

type VendorGetPriceQuoteResponse struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Data          *VendorOrderPriceCalculation_OrderPriceQuote `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorGetPriceQuoteResponse) Reset() {
	*x = VendorGetPriceQuoteResponse{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorGetPriceQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorGetPriceQuoteResponse) ProtoMessage() {}

func (x *VendorGetPriceQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorGetPriceQuoteResponse.ProtoReflect.Descriptor instead.
func (*VendorGetPriceQuoteResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{9}
}

func (x *VendorGetPriceQuoteResponse) GetData() *VendorOrderPriceCalculation_OrderPriceQuote {
	if x != nil {
		return x.Data
	}
	return nil
}

type LegacyVendorGetPriceQuoteRequest struct {
	state                protoimpl.MessageState                       `protogen:"open.v1"`
	Credentials          *v1.LegacyCredentials                        `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
	StoreId              string                                       `protobuf:"bytes,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	ShippingEmail        string                                       `protobuf:"bytes,3,opt,name=shipping_email,json=shippingEmail,proto3" json:"shipping_email,omitempty"`
	ShippingName         string                                       `protobuf:"bytes,4,opt,name=shipping_name,json=shippingName,proto3" json:"shipping_name,omitempty"`
	ShippingPhone        string                                       `protobuf:"bytes,5,opt,name=shipping_phone,json=shippingPhone,proto3" json:"shipping_phone,omitempty"`
	ShippingCompanyName  string                                       `protobuf:"bytes,6,opt,name=shipping_company_name,json=shippingCompanyName,proto3" json:"shipping_company_name,omitempty"`
	ShippingAddress1     string                                       `protobuf:"bytes,7,opt,name=shipping_address1,json=shippingAddress1,proto3" json:"shipping_address1,omitempty"`
	ShippingAddress2     string                                       `protobuf:"bytes,8,opt,name=shipping_address2,json=shippingAddress2,proto3" json:"shipping_address2,omitempty"`
	ShippingProvinceCode string                                       `protobuf:"bytes,9,opt,name=shipping_province_code,json=shippingProvinceCode,proto3" json:"shipping_province_code,omitempty"`
	ShippingCity         string                                       `protobuf:"bytes,10,opt,name=shipping_city,json=shippingCity,proto3" json:"shipping_city,omitempty"`
	ShippingZipcode      int32                                        `protobuf:"varint,11,opt,name=shipping_zipcode,json=shippingZipcode,proto3" json:"shipping_zipcode,omitempty"`
	ShippingCountryCode  string                                       `protobuf:"bytes,12,opt,name=shipping_country_code,json=shippingCountryCode,proto3" json:"shipping_country_code,omitempty"`
	ShippingMethod       int32                                        `protobuf:"varint,13,opt,name=shipping_method,json=shippingMethod,proto3" json:"shipping_method,omitempty"`
	LineItems            []*LegacyVendorGetPriceQuoteRequest_LineItem `protobuf:"bytes,14,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *LegacyVendorGetPriceQuoteRequest) Reset() {
	*x = LegacyVendorGetPriceQuoteRequest{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyVendorGetPriceQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyVendorGetPriceQuoteRequest) ProtoMessage() {}

func (x *LegacyVendorGetPriceQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyVendorGetPriceQuoteRequest.ProtoReflect.Descriptor instead.
func (*LegacyVendorGetPriceQuoteRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{10}
}

func (x *LegacyVendorGetPriceQuoteRequest) GetCredentials() *v1.LegacyCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *LegacyVendorGetPriceQuoteRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingEmail() string {
	if x != nil {
		return x.ShippingEmail
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingName() string {
	if x != nil {
		return x.ShippingName
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingPhone() string {
	if x != nil {
		return x.ShippingPhone
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingCompanyName() string {
	if x != nil {
		return x.ShippingCompanyName
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingAddress1() string {
	if x != nil {
		return x.ShippingAddress1
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingAddress2() string {
	if x != nil {
		return x.ShippingAddress2
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingProvinceCode() string {
	if x != nil {
		return x.ShippingProvinceCode
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingCity() string {
	if x != nil {
		return x.ShippingCity
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingZipcode() int32 {
	if x != nil {
		return x.ShippingZipcode
	}
	return 0
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingCountryCode() string {
	if x != nil {
		return x.ShippingCountryCode
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest) GetShippingMethod() int32 {
	if x != nil {
		return x.ShippingMethod
	}
	return 0
}

func (x *LegacyVendorGetPriceQuoteRequest) GetLineItems() []*LegacyVendorGetPriceQuoteRequest_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

type LegacyVendorGetPriceQuoteResponse struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	Result        *LegacyVendorGetPriceQuoteResponse_PriceCalculation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LegacyVendorGetPriceQuoteResponse) Reset() {
	*x = LegacyVendorGetPriceQuoteResponse{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyVendorGetPriceQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyVendorGetPriceQuoteResponse) ProtoMessage() {}

func (x *LegacyVendorGetPriceQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyVendorGetPriceQuoteResponse.ProtoReflect.Descriptor instead.
func (*LegacyVendorGetPriceQuoteResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{11}
}

func (x *LegacyVendorGetPriceQuoteResponse) GetResult() *LegacyVendorGetPriceQuoteResponse_PriceCalculation {
	if x != nil {
		return x.Result
	}
	return nil
}

type LegacyVendorGetPriceQuoteRequest_LineItem struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	VariantId      int32                  `protobuf:"varint,1,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Quantity       int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Side           string                 `protobuf:"bytes,3,opt,name=side,proto3" json:"side,omitempty"`
	DesignLink     string                 `protobuf:"bytes,4,opt,name=design_link,json=designLink,proto3" json:"design_link,omitempty"`
	DesignLinkBack string                 `protobuf:"bytes,5,opt,name=design_link_back,json=designLinkBack,proto3" json:"design_link_back,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LegacyVendorGetPriceQuoteRequest_LineItem) Reset() {
	*x = LegacyVendorGetPriceQuoteRequest_LineItem{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyVendorGetPriceQuoteRequest_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyVendorGetPriceQuoteRequest_LineItem) ProtoMessage() {}

func (x *LegacyVendorGetPriceQuoteRequest_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyVendorGetPriceQuoteRequest_LineItem.ProtoReflect.Descriptor instead.
func (*LegacyVendorGetPriceQuoteRequest_LineItem) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{10, 0}
}

func (x *LegacyVendorGetPriceQuoteRequest_LineItem) GetVariantId() int32 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

func (x *LegacyVendorGetPriceQuoteRequest_LineItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *LegacyVendorGetPriceQuoteRequest_LineItem) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest_LineItem) GetDesignLink() string {
	if x != nil {
		return x.DesignLink
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteRequest_LineItem) GetDesignLinkBack() string {
	if x != nil {
		return x.DesignLinkBack
	}
	return ""
}

type LegacyVendorGetPriceQuoteResponse_PriceCalculation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Total          string                 `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	SubTotal       string                 `protobuf:"bytes,2,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	Tax            string                 `protobuf:"bytes,3,opt,name=tax,proto3" json:"tax,omitempty"`
	ShippingFee    string                 `protobuf:"bytes,4,opt,name=shipping_fee,json=shippingFee,proto3" json:"shipping_fee,omitempty"`
	GiftMessageFee string                 `protobuf:"bytes,5,opt,name=gift_message_fee,json=giftMessageFee,proto3" json:"gift_message_fee,omitempty"`
	HandleFee      string                 `protobuf:"bytes,6,opt,name=handle_fee,json=handleFee,proto3" json:"handle_fee,omitempty"`
	TotalDiscount  string                 `protobuf:"bytes,7,opt,name=total_discount,json=totalDiscount,proto3" json:"total_discount,omitempty"`
	Currency       string                 `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) Reset() {
	*x = LegacyVendorGetPriceQuoteResponse_PriceCalculation{}
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyVendorGetPriceQuoteResponse_PriceCalculation) ProtoMessage() {}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_api_vendor_order_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyVendorGetPriceQuoteResponse_PriceCalculation.ProtoReflect.Descriptor instead.
func (*LegacyVendorGetPriceQuoteResponse_PriceCalculation) Descriptor() ([]byte, []int) {
	return file_api_order_v1_api_vendor_order_proto_rawDescGZIP(), []int{11, 0}
}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) GetSubTotal() string {
	if x != nil {
		return x.SubTotal
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) GetTax() string {
	if x != nil {
		return x.Tax
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) GetShippingFee() string {
	if x != nil {
		return x.ShippingFee
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) GetGiftMessageFee() string {
	if x != nil {
		return x.GiftMessageFee
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) GetHandleFee() string {
	if x != nil {
		return x.HandleFee
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) GetTotalDiscount() string {
	if x != nil {
		return x.TotalDiscount
	}
	return ""
}

func (x *LegacyVendorGetPriceQuoteResponse_PriceCalculation) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

var File_api_order_v1_api_vendor_order_proto protoreflect.FileDescriptor

var file_api_order_v1_api_vendor_order_proto_rawDesc = string([]byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x69, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x33, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x28, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x1b, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0e,
	0x40, 0x73, 0x71, 0x75, 0x61, 0x73, 0x68, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x40, 0x73, 0x71, 0x75, 0x61, 0x73, 0x68, 0x2e,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x8a, 0x01, 0x0a, 0x1c, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x16, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x0e, 0x40, 0x73, 0x71, 0x75, 0x61, 0x73, 0x68, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x36, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x40, 0x73, 0x71, 0x75, 0x61, 0x73, 0x68,
	0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x1d, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x86, 0x01, 0x0a, 0x1e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x26,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x8f, 0x01, 0x0a, 0x27, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x8f, 0x03, 0x0a, 0x1a, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x4b, 0x0a, 0x07, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x4e, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x51, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x5a, 0x0a, 0x0d, 0x67, 0x69, 0x66,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x69, 0x66, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x67, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x1b, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xc1, 0x07, 0x0a, 0x20, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x2e, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18,
	0x1e, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x11, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xac,
	0x02, 0x52, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x31, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32,
	0x12, 0x34, 0x0a, 0x16, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba,
	0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x1e, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x43, 0x69, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0c, 0xba, 0x48, 0x09, 0x1a, 0x07, 0x18, 0x80, 0xad, 0xe2, 0x04, 0x20, 0x00, 0x52, 0x0f,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x3d, 0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x1e, 0x52, 0x13, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32,
	0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xba, 0x48, 0x06, 0x1a, 0x04, 0x18, 0x0a,
	0x28, 0x00, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x56, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x09, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xba, 0x01, 0x0a, 0x08, 0x4c,
	0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2a, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xba, 0x48, 0x08,
	0x1a, 0x06, 0x18, 0xa0, 0x8d, 0x06, 0x20, 0x00, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x28, 0x0a,
	0x10, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x4c,
	0x69, 0x6e, 0x6b, 0x42, 0x61, 0x63, 0x6b, 0x22, 0x86, 0x03, 0x0a, 0x21, 0x4c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x86, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x78, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x46, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x67, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x32, 0xf5, 0x05, 0x0a, 0x0e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x41, 0x50, 0x49, 0x12, 0x76, 0x0a, 0x0f, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x33, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x14,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x12, 0x94, 0x01, 0x0a, 0x16, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x33, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74,
	0x12, 0xb7, 0x01, 0x0a, 0x1f, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x8b, 0x01, 0x0a, 0x13, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a,
	0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x32, 0xba, 0x01, 0x0a, 0x14, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x50,
	0x49, 0x12, 0xa1, 0x01, 0x0a, 0x19, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12,
	0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0xb6, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x41, 0x70, 0x69, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65,
	0x61, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x61, 0x2d, 0x6e, 0x65, 0x78, 0x74, 0x2f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x64, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x41, 0x4f, 0x58, 0xaa, 0x02, 0x0c, 0x41, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x41, 0x70, 0x69, 0x5c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x18, 0x41, 0x70, 0x69, 0x5c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e,
	0x41, 0x70, 0x69, 0x3a, 0x3a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_order_v1_api_vendor_order_proto_rawDescOnce sync.Once
	file_api_order_v1_api_vendor_order_proto_rawDescData []byte
)

func file_api_order_v1_api_vendor_order_proto_rawDescGZIP() []byte {
	file_api_order_v1_api_vendor_order_proto_rawDescOnce.Do(func() {
		file_api_order_v1_api_vendor_order_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_order_v1_api_vendor_order_proto_rawDesc), len(file_api_order_v1_api_vendor_order_proto_rawDesc)))
	})
	return file_api_order_v1_api_vendor_order_proto_rawDescData
}

var file_api_order_v1_api_vendor_order_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_order_v1_api_vendor_order_proto_goTypes = []any{
	(*VendorListOrderDraftRequest)(nil),                        // 0: api.order.v1.VendorListOrderDraftRequest
	(*VendorListOrderDraftResponse)(nil),                       // 1: api.order.v1.VendorListOrderDraftResponse
	(*VendorListOrderRequest)(nil),                             // 2: api.order.v1.VendorListOrderRequest
	(*VendorListOrderResponse)(nil),                            // 3: api.order.v1.VendorListOrderResponse
	(*VendorCreateOrderDraftRequest)(nil),                      // 4: api.order.v1.VendorCreateOrderDraftRequest
	(*VendorCreateOrderDraftResponse)(nil),                     // 5: api.order.v1.VendorCreateOrderDraftResponse
	(*VendorCreateOrderDraftWithLabelRequest)(nil),             // 6: api.order.v1.VendorCreateOrderDraftWithLabelRequest
	(*VendorCreateOrderDraftWithLabelResponse)(nil),            // 7: api.order.v1.VendorCreateOrderDraftWithLabelResponse
	(*VendorGetPriceQuoteRequest)(nil),                         // 8: api.order.v1.VendorGetPriceQuoteRequest
	(*VendorGetPriceQuoteResponse)(nil),                        // 9: api.order.v1.VendorGetPriceQuoteResponse
	(*LegacyVendorGetPriceQuoteRequest)(nil),                   // 10: api.order.v1.LegacyVendorGetPriceQuoteRequest
	(*LegacyVendorGetPriceQuoteResponse)(nil),                  // 11: api.order.v1.LegacyVendorGetPriceQuoteResponse
	(*LegacyVendorGetPriceQuoteRequest_LineItem)(nil),          // 12: api.order.v1.LegacyVendorGetPriceQuoteRequest.LineItem
	(*LegacyVendorGetPriceQuoteResponse_PriceCalculation)(nil), // 13: api.order.v1.LegacyVendorGetPriceQuoteResponse.PriceCalculation
	(*VendorOrderDraftFilter)(nil),                             // 14: api.order.v1.VendorOrderDraftFilter
	(*v1.Paging)(nil),                                          // 15: common.type.v1.Paging
	(*v1.PagingResponse)(nil),                                  // 16: common.type.v1.PagingResponse
	(*VendorOrderDraft)(nil),                                   // 17: api.order.v1.VendorOrderDraft
	(*VendorOrderFilter)(nil),                                  // 18: api.order.v1.VendorOrderFilter
	(*VendorOrder)(nil),                                        // 19: api.order.v1.VendorOrder
	(*VendorOrderDraftManualCreationParams)(nil),               // 20: api.order.v1.VendorOrderDraftManualCreationParams
	(*VendorOrderDraftWithLabelCreationParams)(nil),            // 21: api.order.v1.VendorOrderDraftWithLabelCreationParams
	(*VendorOrderPriceCalculation_Billing)(nil),                // 22: api.order.v1.VendorOrderPriceCalculation.Billing
	(*VendorOrderPriceCalculation_Shipping)(nil),               // 23: api.order.v1.VendorOrderPriceCalculation.Shipping
	(*VendorOrderPriceCalculation_LineItem)(nil),               // 24: api.order.v1.VendorOrderPriceCalculation.LineItem
	(*VendorOrderPriceCalculation_GiftMessage)(nil),            // 25: api.order.v1.VendorOrderPriceCalculation.GiftMessage
	(*VendorOrderPriceCalculation_OrderPriceQuote)(nil),        // 26: api.order.v1.VendorOrderPriceCalculation.OrderPriceQuote
	(*v1.LegacyCredentials)(nil),                               // 27: common.type.v1.LegacyCredentials
}
var file_api_order_v1_api_vendor_order_proto_depIdxs = []int32{
	14, // 0: api.order.v1.VendorListOrderDraftRequest.filter:type_name -> api.order.v1.VendorOrderDraftFilter
	15, // 1: api.order.v1.VendorListOrderDraftRequest.paging:type_name -> common.type.v1.Paging
	16, // 2: api.order.v1.VendorListOrderDraftResponse.paging:type_name -> common.type.v1.PagingResponse
	17, // 3: api.order.v1.VendorListOrderDraftResponse.data:type_name -> api.order.v1.VendorOrderDraft
	18, // 4: api.order.v1.VendorListOrderRequest.filter:type_name -> api.order.v1.VendorOrderFilter
	15, // 5: api.order.v1.VendorListOrderRequest.paging:type_name -> common.type.v1.Paging
	16, // 6: api.order.v1.VendorListOrderResponse.paging:type_name -> common.type.v1.PagingResponse
	19, // 7: api.order.v1.VendorListOrderResponse.data:type_name -> api.order.v1.VendorOrder
	20, // 8: api.order.v1.VendorCreateOrderDraftRequest.data:type_name -> api.order.v1.VendorOrderDraftManualCreationParams
	17, // 9: api.order.v1.VendorCreateOrderDraftResponse.data:type_name -> api.order.v1.VendorOrderDraft
	21, // 10: api.order.v1.VendorCreateOrderDraftWithLabelRequest.data:type_name -> api.order.v1.VendorOrderDraftWithLabelCreationParams
	17, // 11: api.order.v1.VendorCreateOrderDraftWithLabelResponse.data:type_name -> api.order.v1.VendorOrderDraft
	22, // 12: api.order.v1.VendorGetPriceQuoteRequest.billing:type_name -> api.order.v1.VendorOrderPriceCalculation.Billing
	23, // 13: api.order.v1.VendorGetPriceQuoteRequest.shipping:type_name -> api.order.v1.VendorOrderPriceCalculation.Shipping
	24, // 14: api.order.v1.VendorGetPriceQuoteRequest.line_items:type_name -> api.order.v1.VendorOrderPriceCalculation.LineItem
	25, // 15: api.order.v1.VendorGetPriceQuoteRequest.gift_messages:type_name -> api.order.v1.VendorOrderPriceCalculation.GiftMessage
	26, // 16: api.order.v1.VendorGetPriceQuoteResponse.data:type_name -> api.order.v1.VendorOrderPriceCalculation.OrderPriceQuote
	27, // 17: api.order.v1.LegacyVendorGetPriceQuoteRequest.credentials:type_name -> common.type.v1.LegacyCredentials
	12, // 18: api.order.v1.LegacyVendorGetPriceQuoteRequest.line_items:type_name -> api.order.v1.LegacyVendorGetPriceQuoteRequest.LineItem
	13, // 19: api.order.v1.LegacyVendorGetPriceQuoteResponse.result:type_name -> api.order.v1.LegacyVendorGetPriceQuoteResponse.PriceCalculation
	2,  // 20: api.order.v1.VendorOrderAPI.VendorListOrder:input_type -> api.order.v1.VendorListOrderRequest
	0,  // 21: api.order.v1.VendorOrderAPI.VendorListOrderDraft:input_type -> api.order.v1.VendorListOrderDraftRequest
	4,  // 22: api.order.v1.VendorOrderAPI.VendorCreateOrderDraft:input_type -> api.order.v1.VendorCreateOrderDraftRequest
	6,  // 23: api.order.v1.VendorOrderAPI.VendorCreateOrderDraftWithLabel:input_type -> api.order.v1.VendorCreateOrderDraftWithLabelRequest
	8,  // 24: api.order.v1.VendorOrderAPI.VendorGetPriceQuote:input_type -> api.order.v1.VendorGetPriceQuoteRequest
	10, // 25: api.order.v1.LegacyVendorOrderAPI.LegacyVendorGetPriceQuote:input_type -> api.order.v1.LegacyVendorGetPriceQuoteRequest
	3,  // 26: api.order.v1.VendorOrderAPI.VendorListOrder:output_type -> api.order.v1.VendorListOrderResponse
	1,  // 27: api.order.v1.VendorOrderAPI.VendorListOrderDraft:output_type -> api.order.v1.VendorListOrderDraftResponse
	5,  // 28: api.order.v1.VendorOrderAPI.VendorCreateOrderDraft:output_type -> api.order.v1.VendorCreateOrderDraftResponse
	7,  // 29: api.order.v1.VendorOrderAPI.VendorCreateOrderDraftWithLabel:output_type -> api.order.v1.VendorCreateOrderDraftWithLabelResponse
	9,  // 30: api.order.v1.VendorOrderAPI.VendorGetPriceQuote:output_type -> api.order.v1.VendorGetPriceQuoteResponse
	11, // 31: api.order.v1.LegacyVendorOrderAPI.LegacyVendorGetPriceQuote:output_type -> api.order.v1.LegacyVendorGetPriceQuoteResponse
	26, // [26:32] is the sub-list for method output_type
	20, // [20:26] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_api_order_v1_api_vendor_order_proto_init() }
func file_api_order_v1_api_vendor_order_proto_init() {
	if File_api_order_v1_api_vendor_order_proto != nil {
		return
	}
	file_api_order_v1_data_vendor_order_proto_init()
	file_api_order_v1_data_vendor_order_draft_proto_init()
	file_api_order_v1_data_vendor_order_draft_creation_proto_init()
	file_api_order_v1_data_vendor_order_price_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_order_v1_api_vendor_order_proto_rawDesc), len(file_api_order_v1_api_vendor_order_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_order_v1_api_vendor_order_proto_goTypes,
		DependencyIndexes: file_api_order_v1_api_vendor_order_proto_depIdxs,
		MessageInfos:      file_api_order_v1_api_vendor_order_proto_msgTypes,
	}.Build()
	File_api_order_v1_api_vendor_order_proto = out.File
	file_api_order_v1_api_vendor_order_proto_goTypes = nil
	file_api_order_v1_api_vendor_order_proto_depIdxs = nil
}
