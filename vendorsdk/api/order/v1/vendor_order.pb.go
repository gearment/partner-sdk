// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: api/order/v1/vendor_order.proto

package orderv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/gearment/gea-next/vendorsdk/common/type/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDraftOrderRequest struct {
	state               protoimpl.MessageState                `protogen:"open.v1"`
	OrderRef            string                                `protobuf:"bytes,1,opt,name=order_ref,json=orderRef,proto3" json:"order_ref,omitempty"`
	ExternalId          string                                `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	ShippingInfo        *CreateDraftOrderRequest_ShippingInfo `protobuf:"bytes,3,opt,name=shipping_info,json=shippingInfo,proto3" json:"shipping_info,omitempty"`
	LineItems           []*CreateDraftOrderRequest_LineItem   `protobuf:"bytes,4,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	StoreId             string                                `protobuf:"bytes,5,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	ProcessWithRisk     bool                                  `protobuf:"varint,6,opt,name=process_with_risk,json=processWithRisk,proto3" json:"process_with_risk,omitempty"`
	GiftMessageBody     string                                `protobuf:"bytes,7,opt,name=gift_message_body,json=giftMessageBody,proto3" json:"gift_message_body,omitempty"`
	IossNumber          int64                                 `protobuf:"varint,8,opt,name=ioss_number,json=iossNumber,proto3" json:"ioss_number,omitempty"`
	IossNumberTotal     int64                                 `protobuf:"varint,9,opt,name=ioss_number_total,json=iossNumberTotal,proto3" json:"ioss_number_total,omitempty"`
	TaxNumber           string                                `protobuf:"bytes,10,opt,name=tax_number,json=taxNumber,proto3" json:"tax_number,omitempty"`
	OrderTaxValue       int64                                 `protobuf:"varint,11,opt,name=order_tax_value,json=orderTaxValue,proto3" json:"order_tax_value,omitempty"`
	ShippingServiceType string                                `protobuf:"bytes,12,opt,name=shipping_service_type,json=shippingServiceType,proto3" json:"shipping_service_type,omitempty"`
	ShippingLabelUrl    string                                `protobuf:"bytes,13,opt,name=shipping_label_url,json=shippingLabelUrl,proto3" json:"shipping_label_url,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateDraftOrderRequest) Reset() {
	*x = CreateDraftOrderRequest{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDraftOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftOrderRequest) ProtoMessage() {}

func (x *CreateDraftOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateDraftOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDraftOrderRequest) GetOrderRef() string {
	if x != nil {
		return x.OrderRef
	}
	return ""
}

func (x *CreateDraftOrderRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *CreateDraftOrderRequest) GetShippingInfo() *CreateDraftOrderRequest_ShippingInfo {
	if x != nil {
		return x.ShippingInfo
	}
	return nil
}

func (x *CreateDraftOrderRequest) GetLineItems() []*CreateDraftOrderRequest_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

func (x *CreateDraftOrderRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *CreateDraftOrderRequest) GetProcessWithRisk() bool {
	if x != nil {
		return x.ProcessWithRisk
	}
	return false
}

func (x *CreateDraftOrderRequest) GetGiftMessageBody() string {
	if x != nil {
		return x.GiftMessageBody
	}
	return ""
}

func (x *CreateDraftOrderRequest) GetIossNumber() int64 {
	if x != nil {
		return x.IossNumber
	}
	return 0
}

func (x *CreateDraftOrderRequest) GetIossNumberTotal() int64 {
	if x != nil {
		return x.IossNumberTotal
	}
	return 0
}

func (x *CreateDraftOrderRequest) GetTaxNumber() string {
	if x != nil {
		return x.TaxNumber
	}
	return ""
}

func (x *CreateDraftOrderRequest) GetOrderTaxValue() int64 {
	if x != nil {
		return x.OrderTaxValue
	}
	return 0
}

func (x *CreateDraftOrderRequest) GetShippingServiceType() string {
	if x != nil {
		return x.ShippingServiceType
	}
	return ""
}

func (x *CreateDraftOrderRequest) GetShippingLabelUrl() string {
	if x != nil {
		return x.ShippingLabelUrl
	}
	return ""
}

type CreateDraftOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftOrder    *DraftOrder            `protobuf:"bytes,1,opt,name=draft_order,json=draftOrder,proto3" json:"draft_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDraftOrderResponse) Reset() {
	*x = CreateDraftOrderResponse{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDraftOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftOrderResponse) ProtoMessage() {}

func (x *CreateDraftOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateDraftOrderResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDraftOrderResponse) GetDraftOrder() *DraftOrder {
	if x != nil {
		return x.DraftOrder
	}
	return nil
}

type GetDraftOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftOrderId  string                 `protobuf:"bytes,1,opt,name=draft_order_id,json=draftOrderId,proto3" json:"draft_order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDraftOrderRequest) Reset() {
	*x = GetDraftOrderRequest{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDraftOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftOrderRequest) ProtoMessage() {}

func (x *GetDraftOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftOrderRequest.ProtoReflect.Descriptor instead.
func (*GetDraftOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{2}
}

func (x *GetDraftOrderRequest) GetDraftOrderId() string {
	if x != nil {
		return x.DraftOrderId
	}
	return ""
}

type DraftOrder struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	DraftOrderId  string                   `protobuf:"bytes,1,opt,name=draft_order_id,json=draftOrderId,proto3" json:"draft_order_id,omitempty"`
	OrderRef      string                   `protobuf:"bytes,2,opt,name=order_ref,json=orderRef,proto3" json:"order_ref,omitempty"`
	ExternalId    string                   `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	ShippingInfo  *DraftOrder_ShippingInfo `protobuf:"bytes,4,opt,name=shipping_info,json=shippingInfo,proto3" json:"shipping_info,omitempty"`
	LineItems     []*DraftOrder_LineItem   `protobuf:"bytes,5,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DraftOrder) Reset() {
	*x = DraftOrder{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DraftOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftOrder) ProtoMessage() {}

func (x *DraftOrder) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftOrder.ProtoReflect.Descriptor instead.
func (*DraftOrder) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{3}
}

func (x *DraftOrder) GetDraftOrderId() string {
	if x != nil {
		return x.DraftOrderId
	}
	return ""
}

func (x *DraftOrder) GetOrderRef() string {
	if x != nil {
		return x.OrderRef
	}
	return ""
}

func (x *DraftOrder) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *DraftOrder) GetShippingInfo() *DraftOrder_ShippingInfo {
	if x != nil {
		return x.ShippingInfo
	}
	return nil
}

func (x *DraftOrder) GetLineItems() []*DraftOrder_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

type GetDraftOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftOrder    *DraftOrder            `protobuf:"bytes,1,opt,name=draft_order,json=draftOrder,proto3" json:"draft_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDraftOrderResponse) Reset() {
	*x = GetDraftOrderResponse{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDraftOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftOrderResponse) ProtoMessage() {}

func (x *GetDraftOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftOrderResponse.ProtoReflect.Descriptor instead.
func (*GetDraftOrderResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{4}
}

func (x *GetDraftOrderResponse) GetDraftOrder() *DraftOrder {
	if x != nil {
		return x.DraftOrder
	}
	return nil
}

type PlaceOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftOrderId  string                 `protobuf:"bytes,1,opt,name=draft_order_id,json=draftOrderId,proto3" json:"draft_order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaceOrderRequest) Reset() {
	*x = PlaceOrderRequest{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderRequest) ProtoMessage() {}

func (x *PlaceOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderRequest.ProtoReflect.Descriptor instead.
func (*PlaceOrderRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{5}
}

func (x *PlaceOrderRequest) GetDraftOrderId() string {
	if x != nil {
		return x.DraftOrderId
	}
	return ""
}

type PlaceOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaceOrderResponse) Reset() {
	*x = PlaceOrderResponse{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderResponse) ProtoMessage() {}

func (x *PlaceOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderResponse.ProtoReflect.Descriptor instead.
func (*PlaceOrderResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{6}
}

func (x *PlaceOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type ListDraftOrdersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDraftOrdersRequest) Reset() {
	*x = ListDraftOrdersRequest{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDraftOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDraftOrdersRequest) ProtoMessage() {}

func (x *ListDraftOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDraftOrdersRequest.ProtoReflect.Descriptor instead.
func (*ListDraftOrdersRequest) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{7}
}

func (x *ListDraftOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDraftOrdersRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListDraftOrdersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftOrders   []*DraftOrder          `protobuf:"bytes,1,rep,name=draft_orders,json=draftOrders,proto3" json:"draft_orders,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDraftOrdersResponse) Reset() {
	*x = ListDraftOrdersResponse{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDraftOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDraftOrdersResponse) ProtoMessage() {}

func (x *ListDraftOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDraftOrdersResponse.ProtoReflect.Descriptor instead.
func (*ListDraftOrdersResponse) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{8}
}

func (x *ListDraftOrdersResponse) GetDraftOrders() []*DraftOrder {
	if x != nil {
		return x.DraftOrders
	}
	return nil
}

func (x *ListDraftOrdersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateDraftOrderRequest_ShippingInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone         string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	CompanyName   string                 `protobuf:"bytes,4,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	Address1      string                 `protobuf:"bytes,5,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2      string                 `protobuf:"bytes,6,opt,name=address2,proto3" json:"address2,omitempty"`
	City          string                 `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	ProvinceCode  string                 `protobuf:"bytes,8,opt,name=province_code,json=provinceCode,proto3" json:"province_code,omitempty"`
	Zipcode       string                 `protobuf:"bytes,9,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	CountryCode   string                 `protobuf:"bytes,10,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Method        string                 `protobuf:"bytes,11,opt,name=method,proto3" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDraftOrderRequest_ShippingInfo) Reset() {
	*x = CreateDraftOrderRequest_ShippingInfo{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDraftOrderRequest_ShippingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftOrderRequest_ShippingInfo) ProtoMessage() {}

func (x *CreateDraftOrderRequest_ShippingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftOrderRequest_ShippingInfo.ProtoReflect.Descriptor instead.
func (*CreateDraftOrderRequest_ShippingInfo) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetProvinceCode() string {
	if x != nil {
		return x.ProvinceCode
	}
	return ""
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetZipcode() string {
	if x != nil {
		return x.Zipcode
	}
	return ""
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CreateDraftOrderRequest_ShippingInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type CreateDraftOrderRequest_LineItem struct {
	state          protoimpl.MessageState                  `protogen:"open.v1"`
	ProductId      string                                  `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductName    string                                  `protobuf:"bytes,2,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	ProductStyle   string                                  `protobuf:"bytes,3,opt,name=product_style,json=productStyle,proto3" json:"product_style,omitempty"`
	VariantSku     string                                  `protobuf:"bytes,4,opt,name=variant_sku,json=variantSku,proto3" json:"variant_sku,omitempty"`
	Quantity       int32                                   `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PrintingOption *CreateDraftOrderRequest_PrintingOption `protobuf:"bytes,6,opt,name=printing_option,json=printingOption,proto3" json:"printing_option,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDraftOrderRequest_LineItem) Reset() {
	*x = CreateDraftOrderRequest_LineItem{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDraftOrderRequest_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftOrderRequest_LineItem) ProtoMessage() {}

func (x *CreateDraftOrderRequest_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftOrderRequest_LineItem.ProtoReflect.Descriptor instead.
func (*CreateDraftOrderRequest_LineItem) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CreateDraftOrderRequest_LineItem) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CreateDraftOrderRequest_LineItem) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *CreateDraftOrderRequest_LineItem) GetProductStyle() string {
	if x != nil {
		return x.ProductStyle
	}
	return ""
}

func (x *CreateDraftOrderRequest_LineItem) GetVariantSku() string {
	if x != nil {
		return x.VariantSku
	}
	return ""
}

func (x *CreateDraftOrderRequest_LineItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CreateDraftOrderRequest_LineItem) GetPrintingOption() *CreateDraftOrderRequest_PrintingOption {
	if x != nil {
		return x.PrintingOption
	}
	return nil
}

type CreateDraftOrderRequest_PrintingOption struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FrontDesignUrl string                 `protobuf:"bytes,1,opt,name=front_design_url,json=frontDesignUrl,proto3" json:"front_design_url,omitempty"`
	BackDesignUrl  string                 `protobuf:"bytes,2,opt,name=back_design_url,json=backDesignUrl,proto3" json:"back_design_url,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDraftOrderRequest_PrintingOption) Reset() {
	*x = CreateDraftOrderRequest_PrintingOption{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDraftOrderRequest_PrintingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftOrderRequest_PrintingOption) ProtoMessage() {}

func (x *CreateDraftOrderRequest_PrintingOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftOrderRequest_PrintingOption.ProtoReflect.Descriptor instead.
func (*CreateDraftOrderRequest_PrintingOption) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{0, 2}
}

func (x *CreateDraftOrderRequest_PrintingOption) GetFrontDesignUrl() string {
	if x != nil {
		return x.FrontDesignUrl
	}
	return ""
}

func (x *CreateDraftOrderRequest_PrintingOption) GetBackDesignUrl() string {
	if x != nil {
		return x.BackDesignUrl
	}
	return ""
}

type DraftOrder_ShippingInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone         string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	CompanyName   string                 `protobuf:"bytes,4,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	Address1      string                 `protobuf:"bytes,5,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2      string                 `protobuf:"bytes,6,opt,name=address2,proto3" json:"address2,omitempty"`
	City          string                 `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	ProvinceCode  string                 `protobuf:"bytes,8,opt,name=province_code,json=provinceCode,proto3" json:"province_code,omitempty"`
	Zipcode       string                 `protobuf:"bytes,9,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	CountryCode   string                 `protobuf:"bytes,10,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Method        string                 `protobuf:"bytes,11,opt,name=method,proto3" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DraftOrder_ShippingInfo) Reset() {
	*x = DraftOrder_ShippingInfo{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DraftOrder_ShippingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftOrder_ShippingInfo) ProtoMessage() {}

func (x *DraftOrder_ShippingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftOrder_ShippingInfo.ProtoReflect.Descriptor instead.
func (*DraftOrder_ShippingInfo) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{3, 0}
}

func (x *DraftOrder_ShippingInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DraftOrder_ShippingInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DraftOrder_ShippingInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DraftOrder_ShippingInfo) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *DraftOrder_ShippingInfo) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *DraftOrder_ShippingInfo) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *DraftOrder_ShippingInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *DraftOrder_ShippingInfo) GetProvinceCode() string {
	if x != nil {
		return x.ProvinceCode
	}
	return ""
}

func (x *DraftOrder_ShippingInfo) GetZipcode() string {
	if x != nil {
		return x.Zipcode
	}
	return ""
}

func (x *DraftOrder_ShippingInfo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *DraftOrder_ShippingInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type DraftOrder_LineItem struct {
	state          protoimpl.MessageState     `protogen:"open.v1"`
	VariantId      string                     `protobuf:"bytes,1,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	ProductName    string                     `protobuf:"bytes,2,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	ProductStyle   string                     `protobuf:"bytes,3,opt,name=product_style,json=productStyle,proto3" json:"product_style,omitempty"`
	ProductSku     string                     `protobuf:"bytes,4,opt,name=product_sku,json=productSku,proto3" json:"product_sku,omitempty"`
	Quantity       int32                      `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PrintingOption *DraftOrder_PrintingOption `protobuf:"bytes,6,opt,name=printing_option,json=printingOption,proto3" json:"printing_option,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DraftOrder_LineItem) Reset() {
	*x = DraftOrder_LineItem{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DraftOrder_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftOrder_LineItem) ProtoMessage() {}

func (x *DraftOrder_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftOrder_LineItem.ProtoReflect.Descriptor instead.
func (*DraftOrder_LineItem) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{3, 1}
}

func (x *DraftOrder_LineItem) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *DraftOrder_LineItem) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *DraftOrder_LineItem) GetProductStyle() string {
	if x != nil {
		return x.ProductStyle
	}
	return ""
}

func (x *DraftOrder_LineItem) GetProductSku() string {
	if x != nil {
		return x.ProductSku
	}
	return ""
}

func (x *DraftOrder_LineItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *DraftOrder_LineItem) GetPrintingOption() *DraftOrder_PrintingOption {
	if x != nil {
		return x.PrintingOption
	}
	return nil
}

type DraftOrder_PrintingOption struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FrontDesignUrl string                 `protobuf:"bytes,1,opt,name=front_design_url,json=frontDesignUrl,proto3" json:"front_design_url,omitempty"`
	BackDesignUrl  string                 `protobuf:"bytes,2,opt,name=back_design_url,json=backDesignUrl,proto3" json:"back_design_url,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DraftOrder_PrintingOption) Reset() {
	*x = DraftOrder_PrintingOption{}
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DraftOrder_PrintingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftOrder_PrintingOption) ProtoMessage() {}

func (x *DraftOrder_PrintingOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_order_v1_vendor_order_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftOrder_PrintingOption.ProtoReflect.Descriptor instead.
func (*DraftOrder_PrintingOption) Descriptor() ([]byte, []int) {
	return file_api_order_v1_vendor_order_proto_rawDescGZIP(), []int{3, 2}
}

func (x *DraftOrder_PrintingOption) GetFrontDesignUrl() string {
	if x != nil {
		return x.FrontDesignUrl
	}
	return ""
}

func (x *DraftOrder_PrintingOption) GetBackDesignUrl() string {
	if x != nil {
		return x.BackDesignUrl
	}
	return ""
}

var File_api_order_v1_vendor_order_proto protoreflect.FileDescriptor

var file_api_order_v1_vendor_order_proto_rawDesc = string([]byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a,
	0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x0b, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x12, 0x28, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x5f, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x57, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c,
	0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x08, 0xba, 0x48, 0x05, 0x92, 0x01, 0x02, 0x08,
	0x01, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x72, 0x69, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x52, 0x69, 0x73, 0x6b, 0x12, 0x2a, 0x0a, 0x11,
	0x67, 0x69, 0x66, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6f, 0x73, 0x73,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69,
	0x6f, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6f, 0x73,
	0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6f, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x78, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x61,
	0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x15,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05,
	0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x13, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x12, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0x72, 0x06, 0x18, 0x80, 0x10,
	0x88, 0x01, 0x01, 0x52, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x55, 0x72, 0x6c, 0x1a, 0xdb, 0x03, 0x0a, 0x0c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x70, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x5a, 0xba, 0x48, 0x57, 0x72, 0x55, 0x10, 0x01, 0x32, 0x51, 0x5e, 0x28, 0x3f, 0x3a,
	0x5c, 0x2b, 0x3f, 0x5c, 0x64, 0x7b, 0x31, 0x2c, 0x33, 0x7d, 0x29, 0x3f, 0x5b, 0x2d, 0x2e, 0x5c,
	0x73, 0x28, 0x29, 0x5d, 0x2a, 0x5c, 0x64, 0x7b, 0x31, 0x2c, 0x34, 0x7d, 0x5b, 0x2d, 0x2e, 0x5c,
	0x73, 0x28, 0x29, 0x5d, 0x2a, 0x5c, 0x64, 0x7b, 0x31, 0x2c, 0x34, 0x7d, 0x5b, 0x2d, 0x2e, 0x5c,
	0x73, 0x28, 0x29, 0x5d, 0x2a, 0x5c, 0x64, 0x7b, 0x31, 0x2c, 0x34, 0x7d, 0x5b, 0x2d, 0x2e, 0x5c,
	0x73, 0x28, 0x29, 0x5d, 0x2a, 0x5c, 0x64, 0x7b, 0x31, 0x2c, 0x39, 0x7d, 0x24, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x1b, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x7a,
	0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x1a, 0x8d, 0x02, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x5d, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x62, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x64,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x26, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0x55, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x0a, 0x64, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x3c,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9f, 0x07, 0x0a,
	0x0a, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x4a, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0a, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xb7, 0x02,
	0x0a, 0x0c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x1a, 0x80, 0x02, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x62, 0x0a, 0x0e, 0x50, 0x72,
	0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x44, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0x52,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x72, 0x61, 0x66, 0x74,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0x39, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x72, 0x61, 0x66, 0x74,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a,
	0x12, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x18, 0x64,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x7e, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x64, 0x72,
	0x61, 0x66, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x64, 0x72, 0x61, 0x66,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32,
	0x94, 0x04, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x50, 0x49, 0x12, 0x7f, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x87, 0x01,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x12, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x64, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x7d, 0x90, 0x02, 0x01, 0x12, 0x81, 0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x22, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x64, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x24,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0xb3, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x61, 0x72,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x61, 0x2d, 0x6e, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x64, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41,
	0x4f, 0x58, 0xaa, 0x02, 0x0c, 0x41, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x0c, 0x41, 0x70, 0x69, 0x5c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x18, 0x41, 0x70, 0x69, 0x5c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x41, 0x70,
	0x69, 0x3a, 0x3a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_order_v1_vendor_order_proto_rawDescOnce sync.Once
	file_api_order_v1_vendor_order_proto_rawDescData []byte
)

func file_api_order_v1_vendor_order_proto_rawDescGZIP() []byte {
	file_api_order_v1_vendor_order_proto_rawDescOnce.Do(func() {
		file_api_order_v1_vendor_order_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_order_v1_vendor_order_proto_rawDesc), len(file_api_order_v1_vendor_order_proto_rawDesc)))
	})
	return file_api_order_v1_vendor_order_proto_rawDescData
}

var file_api_order_v1_vendor_order_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_order_v1_vendor_order_proto_goTypes = []any{
	(*CreateDraftOrderRequest)(nil),                // 0: api.order.v1.CreateDraftOrderRequest
	(*CreateDraftOrderResponse)(nil),               // 1: api.order.v1.CreateDraftOrderResponse
	(*GetDraftOrderRequest)(nil),                   // 2: api.order.v1.GetDraftOrderRequest
	(*DraftOrder)(nil),                             // 3: api.order.v1.DraftOrder
	(*GetDraftOrderResponse)(nil),                  // 4: api.order.v1.GetDraftOrderResponse
	(*PlaceOrderRequest)(nil),                      // 5: api.order.v1.PlaceOrderRequest
	(*PlaceOrderResponse)(nil),                     // 6: api.order.v1.PlaceOrderResponse
	(*ListDraftOrdersRequest)(nil),                 // 7: api.order.v1.ListDraftOrdersRequest
	(*ListDraftOrdersResponse)(nil),                // 8: api.order.v1.ListDraftOrdersResponse
	(*CreateDraftOrderRequest_ShippingInfo)(nil),   // 9: api.order.v1.CreateDraftOrderRequest.ShippingInfo
	(*CreateDraftOrderRequest_LineItem)(nil),       // 10: api.order.v1.CreateDraftOrderRequest.LineItem
	(*CreateDraftOrderRequest_PrintingOption)(nil), // 11: api.order.v1.CreateDraftOrderRequest.PrintingOption
	(*DraftOrder_ShippingInfo)(nil),                // 12: api.order.v1.DraftOrder.ShippingInfo
	(*DraftOrder_LineItem)(nil),                    // 13: api.order.v1.DraftOrder.LineItem
	(*DraftOrder_PrintingOption)(nil),              // 14: api.order.v1.DraftOrder.PrintingOption
}
var file_api_order_v1_vendor_order_proto_depIdxs = []int32{
	9,  // 0: api.order.v1.CreateDraftOrderRequest.shipping_info:type_name -> api.order.v1.CreateDraftOrderRequest.ShippingInfo
	10, // 1: api.order.v1.CreateDraftOrderRequest.line_items:type_name -> api.order.v1.CreateDraftOrderRequest.LineItem
	3,  // 2: api.order.v1.CreateDraftOrderResponse.draft_order:type_name -> api.order.v1.DraftOrder
	12, // 3: api.order.v1.DraftOrder.shipping_info:type_name -> api.order.v1.DraftOrder.ShippingInfo
	13, // 4: api.order.v1.DraftOrder.line_items:type_name -> api.order.v1.DraftOrder.LineItem
	3,  // 5: api.order.v1.GetDraftOrderResponse.draft_order:type_name -> api.order.v1.DraftOrder
	3,  // 6: api.order.v1.ListDraftOrdersResponse.draft_orders:type_name -> api.order.v1.DraftOrder
	11, // 7: api.order.v1.CreateDraftOrderRequest.LineItem.printing_option:type_name -> api.order.v1.CreateDraftOrderRequest.PrintingOption
	14, // 8: api.order.v1.DraftOrder.LineItem.printing_option:type_name -> api.order.v1.DraftOrder.PrintingOption
	0,  // 9: api.order.v1.OrderAPI.CreateDraftOrder:input_type -> api.order.v1.CreateDraftOrderRequest
	2,  // 10: api.order.v1.OrderAPI.GetDraftOrder:input_type -> api.order.v1.GetDraftOrderRequest
	5,  // 11: api.order.v1.OrderAPI.PlaceOrder:input_type -> api.order.v1.PlaceOrderRequest
	7,  // 12: api.order.v1.OrderAPI.ListDraftOrders:input_type -> api.order.v1.ListDraftOrdersRequest
	1,  // 13: api.order.v1.OrderAPI.CreateDraftOrder:output_type -> api.order.v1.CreateDraftOrderResponse
	4,  // 14: api.order.v1.OrderAPI.GetDraftOrder:output_type -> api.order.v1.GetDraftOrderResponse
	6,  // 15: api.order.v1.OrderAPI.PlaceOrder:output_type -> api.order.v1.PlaceOrderResponse
	8,  // 16: api.order.v1.OrderAPI.ListDraftOrders:output_type -> api.order.v1.ListDraftOrdersResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_order_v1_vendor_order_proto_init() }
func file_api_order_v1_vendor_order_proto_init() {
	if File_api_order_v1_vendor_order_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_order_v1_vendor_order_proto_rawDesc), len(file_api_order_v1_vendor_order_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_order_v1_vendor_order_proto_goTypes,
		DependencyIndexes: file_api_order_v1_vendor_order_proto_depIdxs,
		MessageInfos:      file_api_order_v1_vendor_order_proto_msgTypes,
	}.Build()
	File_api_order_v1_vendor_order_proto = out.File
	file_api_order_v1_vendor_order_proto_goTypes = nil
	file_api_order_v1_vendor_order_proto_depIdxs = nil
}
