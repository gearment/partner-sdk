// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: api/catalog/v1/internal_vendor_catalog.proto

package catalogv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InternalVendorListCatalogRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	TeamId        string                    `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	IsLegacy      bool                      `protobuf:"varint,2,opt,name=is_legacy,json=isLegacy,proto3" json:"is_legacy,omitempty"`
	Request       *VendorListCatalogRequest `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalVendorListCatalogRequest) Reset() {
	*x = InternalVendorListCatalogRequest{}
	mi := &file_api_catalog_v1_internal_vendor_catalog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalVendorListCatalogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalVendorListCatalogRequest) ProtoMessage() {}

func (x *InternalVendorListCatalogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_internal_vendor_catalog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalVendorListCatalogRequest.ProtoReflect.Descriptor instead.
func (*InternalVendorListCatalogRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_internal_vendor_catalog_proto_rawDescGZIP(), []int{0}
}

func (x *InternalVendorListCatalogRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *InternalVendorListCatalogRequest) GetIsLegacy() bool {
	if x != nil {
		return x.IsLegacy
	}
	return false
}

func (x *InternalVendorListCatalogRequest) GetRequest() *VendorListCatalogRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type InternalVendorListCatalogVariantRequest struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	TeamId        string                           `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	IsLegacy      bool                             `protobuf:"varint,2,opt,name=is_legacy,json=isLegacy,proto3" json:"is_legacy,omitempty"`
	Request       *VendorListCatalogVariantRequest `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalVendorListCatalogVariantRequest) Reset() {
	*x = InternalVendorListCatalogVariantRequest{}
	mi := &file_api_catalog_v1_internal_vendor_catalog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalVendorListCatalogVariantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalVendorListCatalogVariantRequest) ProtoMessage() {}

func (x *InternalVendorListCatalogVariantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_internal_vendor_catalog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalVendorListCatalogVariantRequest.ProtoReflect.Descriptor instead.
func (*InternalVendorListCatalogVariantRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_internal_vendor_catalog_proto_rawDescGZIP(), []int{1}
}

func (x *InternalVendorListCatalogVariantRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *InternalVendorListCatalogVariantRequest) GetIsLegacy() bool {
	if x != nil {
		return x.IsLegacy
	}
	return false
}

func (x *InternalVendorListCatalogVariantRequest) GetRequest() *VendorListCatalogVariantRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

var File_api_catalog_v1_internal_vendor_catalog_proto protoreflect.FileDescriptor

var file_api_catalog_v1_internal_vendor_catalog_proto_rawDesc = string([]byte{
	0x0a, 0x2c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x27,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x69, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x20, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x27, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x12, 0x49, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x32, 0xae, 0x02, 0x0a, 0x18, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x41, 0x50, 0x49,
	0x12, 0x7d, 0x0a, 0x19, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x30, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x90, 0x02, 0x01, 0x12,
	0x92, 0x01, 0x0a, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x12, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x03, 0x90, 0x02, 0x01, 0x42, 0xcb, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x1a, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x61, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67,
	0x65, 0x61, 0x2d, 0x6e, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x64,
	0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x43, 0x58,
	0xaa, 0x02, 0x0e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x0e, 0x41, 0x70, 0x69, 0x5c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x1a, 0x41, 0x70, 0x69, 0x5c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x10, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_catalog_v1_internal_vendor_catalog_proto_rawDescOnce sync.Once
	file_api_catalog_v1_internal_vendor_catalog_proto_rawDescData []byte
)

func file_api_catalog_v1_internal_vendor_catalog_proto_rawDescGZIP() []byte {
	file_api_catalog_v1_internal_vendor_catalog_proto_rawDescOnce.Do(func() {
		file_api_catalog_v1_internal_vendor_catalog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_catalog_v1_internal_vendor_catalog_proto_rawDesc), len(file_api_catalog_v1_internal_vendor_catalog_proto_rawDesc)))
	})
	return file_api_catalog_v1_internal_vendor_catalog_proto_rawDescData
}

var file_api_catalog_v1_internal_vendor_catalog_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_catalog_v1_internal_vendor_catalog_proto_goTypes = []any{
	(*InternalVendorListCatalogRequest)(nil),        // 0: api.catalog.v1.InternalVendorListCatalogRequest
	(*InternalVendorListCatalogVariantRequest)(nil), // 1: api.catalog.v1.InternalVendorListCatalogVariantRequest
	(*VendorListCatalogRequest)(nil),                // 2: api.catalog.v1.VendorListCatalogRequest
	(*VendorListCatalogVariantRequest)(nil),         // 3: api.catalog.v1.VendorListCatalogVariantRequest
	(*VendorListCatalogResponse)(nil),               // 4: api.catalog.v1.VendorListCatalogResponse
	(*VendorListCatalogVariantResponse)(nil),        // 5: api.catalog.v1.VendorListCatalogVariantResponse
}
var file_api_catalog_v1_internal_vendor_catalog_proto_depIdxs = []int32{
	2, // 0: api.catalog.v1.InternalVendorListCatalogRequest.request:type_name -> api.catalog.v1.VendorListCatalogRequest
	3, // 1: api.catalog.v1.InternalVendorListCatalogVariantRequest.request:type_name -> api.catalog.v1.VendorListCatalogVariantRequest
	0, // 2: api.catalog.v1.InternalVendorCatalogAPI.InternalVendorListCatalog:input_type -> api.catalog.v1.InternalVendorListCatalogRequest
	1, // 3: api.catalog.v1.InternalVendorCatalogAPI.InternalVendorListCatalogVariant:input_type -> api.catalog.v1.InternalVendorListCatalogVariantRequest
	4, // 4: api.catalog.v1.InternalVendorCatalogAPI.InternalVendorListCatalog:output_type -> api.catalog.v1.VendorListCatalogResponse
	5, // 5: api.catalog.v1.InternalVendorCatalogAPI.InternalVendorListCatalogVariant:output_type -> api.catalog.v1.VendorListCatalogVariantResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_catalog_v1_internal_vendor_catalog_proto_init() }
func file_api_catalog_v1_internal_vendor_catalog_proto_init() {
	if File_api_catalog_v1_internal_vendor_catalog_proto != nil {
		return
	}
	file_api_catalog_v1_api_vendor_catalog_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_catalog_v1_internal_vendor_catalog_proto_rawDesc), len(file_api_catalog_v1_internal_vendor_catalog_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_catalog_v1_internal_vendor_catalog_proto_goTypes,
		DependencyIndexes: file_api_catalog_v1_internal_vendor_catalog_proto_depIdxs,
		MessageInfos:      file_api_catalog_v1_internal_vendor_catalog_proto_msgTypes,
	}.Build()
	File_api_catalog_v1_internal_vendor_catalog_proto = out.File
	file_api_catalog_v1_internal_vendor_catalog_proto_goTypes = nil
	file_api_catalog_v1_internal_vendor_catalog_proto_depIdxs = nil
}
