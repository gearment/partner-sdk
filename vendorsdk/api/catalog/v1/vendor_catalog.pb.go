// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: api/catalog/v1/vendor_catalog.proto

package catalogv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/gearment/gea-next/vendorsdk/common/option/v1"
	v1 "github.com/gearment/gea-next/vendorsdk/common/type/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VendorCatalogStockLabel int32

const (
	VendorCatalogStockLabel_VENDOR_CATALOG_STOCK_LABEL_UNKNOWN         VendorCatalogStockLabel = 0
	VendorCatalogStockLabel_VENDOR_CATALOG_STOCK_LABEL_IN_STOCK        VendorCatalogStockLabel = 1
	VendorCatalogStockLabel_VENDOR_CATALOG_STOCK_LABEL_OUT_OF_STOCK    VendorCatalogStockLabel = 2
	VendorCatalogStockLabel_VENDOR_CATALOG_STOCK_LABEL_OUT_OF_STOCK_5D VendorCatalogStockLabel = 3
)

// Enum value maps for VendorCatalogStockLabel.
var (
	VendorCatalogStockLabel_name = map[int32]string{
		0: "VENDOR_CATALOG_STOCK_LABEL_UNKNOWN",
		1: "VENDOR_CATALOG_STOCK_LABEL_IN_STOCK",
		2: "VENDOR_CATALOG_STOCK_LABEL_OUT_OF_STOCK",
		3: "VENDOR_CATALOG_STOCK_LABEL_OUT_OF_STOCK_5D",
	}
	VendorCatalogStockLabel_value = map[string]int32{
		"VENDOR_CATALOG_STOCK_LABEL_UNKNOWN":         0,
		"VENDOR_CATALOG_STOCK_LABEL_IN_STOCK":        1,
		"VENDOR_CATALOG_STOCK_LABEL_OUT_OF_STOCK":    2,
		"VENDOR_CATALOG_STOCK_LABEL_OUT_OF_STOCK_5D": 3,
	}
)

func (x VendorCatalogStockLabel) Enum() *VendorCatalogStockLabel {
	p := new(VendorCatalogStockLabel)
	*p = x
	return p
}

func (x VendorCatalogStockLabel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VendorCatalogStockLabel) Descriptor() protoreflect.EnumDescriptor {
	return file_api_catalog_v1_vendor_catalog_proto_enumTypes[0].Descriptor()
}

func (VendorCatalogStockLabel) Type() protoreflect.EnumType {
	return &file_api_catalog_v1_vendor_catalog_proto_enumTypes[0]
}

func (x VendorCatalogStockLabel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VendorCatalogStockLabel.Descriptor instead.
func (VendorCatalogStockLabel) EnumDescriptor() ([]byte, []int) {
	return file_api_catalog_v1_vendor_catalog_proto_rawDescGZIP(), []int{0}
}

type VendorCatalog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId      string                        `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductName    string                        `protobuf:"bytes,2,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	AvatarUrl      string                        `protobuf:"bytes,3,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	PrintLocations []*VendorCatalogPrintLocation `protobuf:"bytes,4,rep,name=print_locations,json=printLocations,proto3" json:"print_locations,omitempty"`
	Variants       []*VendorCatalogVariant       `protobuf:"bytes,5,rep,name=variants,proto3" json:"variants,omitempty"`
}

func (x *VendorCatalog) Reset() {
	*x = VendorCatalog{}
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorCatalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorCatalog) ProtoMessage() {}

func (x *VendorCatalog) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorCatalog.ProtoReflect.Descriptor instead.
func (*VendorCatalog) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_vendor_catalog_proto_rawDescGZIP(), []int{0}
}

func (x *VendorCatalog) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *VendorCatalog) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *VendorCatalog) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *VendorCatalog) GetPrintLocations() []*VendorCatalogPrintLocation {
	if x != nil {
		return x.PrintLocations
	}
	return nil
}

func (x *VendorCatalog) GetVariants() []*VendorCatalogVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

type VendorCatalogVariant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VariantId        string                  `protobuf:"bytes,1,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Name             string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size             string                  `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Color            string                  `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	HexColorCode     string                  `protobuf:"bytes,5,opt,name=hex_color_code,json=hexColorCode,proto3" json:"hex_color_code,omitempty"`
	Price            *v1.Money               `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
	RecommendedPrice *v1.Money               `protobuf:"bytes,7,opt,name=recommended_price,json=recommendedPrice,proto3" json:"recommended_price,omitempty"`
	ExtraPrice       *v1.Money               `protobuf:"bytes,8,opt,name=extra_price,json=extraPrice,proto3" json:"extra_price,omitempty"`
	StockLabel       VendorCatalogStockLabel `protobuf:"varint,9,opt,name=stock_label,json=stockLabel,proto3,enum=api.catalog.v1.VendorCatalogStockLabel" json:"stock_label,omitempty"`
}

func (x *VendorCatalogVariant) Reset() {
	*x = VendorCatalogVariant{}
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorCatalogVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorCatalogVariant) ProtoMessage() {}

func (x *VendorCatalogVariant) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorCatalogVariant.ProtoReflect.Descriptor instead.
func (*VendorCatalogVariant) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_vendor_catalog_proto_rawDescGZIP(), []int{1}
}

func (x *VendorCatalogVariant) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *VendorCatalogVariant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VendorCatalogVariant) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *VendorCatalogVariant) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *VendorCatalogVariant) GetHexColorCode() string {
	if x != nil {
		return x.HexColorCode
	}
	return ""
}

func (x *VendorCatalogVariant) GetPrice() *v1.Money {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *VendorCatalogVariant) GetRecommendedPrice() *v1.Money {
	if x != nil {
		return x.RecommendedPrice
	}
	return nil
}

func (x *VendorCatalogVariant) GetExtraPrice() *v1.Money {
	if x != nil {
		return x.ExtraPrice
	}
	return nil
}

func (x *VendorCatalogVariant) GetStockLabel() VendorCatalogStockLabel {
	if x != nil {
		return x.StockLabel
	}
	return VendorCatalogStockLabel_VENDOR_CATALOG_STOCK_LABEL_UNKNOWN
}

type VendorCatalogPrintLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LocationId int32  `protobuf:"varint,3,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
}

func (x *VendorCatalogPrintLocation) Reset() {
	*x = VendorCatalogPrintLocation{}
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorCatalogPrintLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorCatalogPrintLocation) ProtoMessage() {}

func (x *VendorCatalogPrintLocation) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorCatalogPrintLocation.ProtoReflect.Descriptor instead.
func (*VendorCatalogPrintLocation) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_vendor_catalog_proto_rawDescGZIP(), []int{2}
}

func (x *VendorCatalogPrintLocation) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VendorCatalogPrintLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VendorCatalogPrintLocation) GetLocationId() int32 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

type ListCatalogVariantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *ListCatalogVariantRequest) Reset() {
	*x = ListCatalogVariantRequest{}
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogVariantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogVariantRequest) ProtoMessage() {}

func (x *ListCatalogVariantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogVariantRequest.ProtoReflect.Descriptor instead.
func (*ListCatalogVariantRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_vendor_catalog_proto_rawDescGZIP(), []int{3}
}

func (x *ListCatalogVariantRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type ListCatalogVariantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging *v1.PagingResponse `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Data   []*VendorCatalog   `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListCatalogVariantResponse) Reset() {
	*x = ListCatalogVariantResponse{}
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogVariantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogVariantResponse) ProtoMessage() {}

func (x *ListCatalogVariantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogVariantResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogVariantResponse) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_vendor_catalog_proto_rawDescGZIP(), []int{4}
}

func (x *ListCatalogVariantResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListCatalogVariantResponse) GetData() []*VendorCatalog {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListCatalogStockStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging     *v1.Paging `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	ProductIds []string   `protobuf:"bytes,2,rep,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"` // @gotags: form:"product_ids,omitempty"
}

func (x *ListCatalogStockStatusRequest) Reset() {
	*x = ListCatalogStockStatusRequest{}
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogStockStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogStockStatusRequest) ProtoMessage() {}

func (x *ListCatalogStockStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogStockStatusRequest.ProtoReflect.Descriptor instead.
func (*ListCatalogStockStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_vendor_catalog_proto_rawDescGZIP(), []int{5}
}

func (x *ListCatalogStockStatusRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListCatalogStockStatusRequest) GetProductIds() []string {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

type ListCatalogStockStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging *v1.PagingResponse      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Data   []*VendorCatalogVariant `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListCatalogStockStatusResponse) Reset() {
	*x = ListCatalogStockStatusResponse{}
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogStockStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogStockStatusResponse) ProtoMessage() {}

func (x *ListCatalogStockStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_vendor_catalog_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogStockStatusResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogStockStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_vendor_catalog_proto_rawDescGZIP(), []int{6}
}

func (x *ListCatalogStockStatusResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListCatalogStockStatusResponse) GetData() []*VendorCatalogVariant {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_api_catalog_v1_vendor_catalog_proto protoreflect.FileDescriptor

var file_api_catalog_v1_vendor_catalog_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x0d, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x53, 0x0a, 0x0f, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x40, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x73, 0x22, 0x96, 0x03, 0x0a, 0x14, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x65, 0x78, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x68, 0x65, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x6e, 0x65, 0x79, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x11, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x36, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0a, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x65, 0x0a, 0x1a, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x4b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22,
	0x87, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x80, 0x01, 0x0a, 0x1d, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x0e, 0xba, 0x48, 0x0b, 0x92, 0x01, 0x08, 0x22, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x64,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x92, 0x01, 0x0a,
	0x1e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x2a, 0x81, 0x02, 0x0a, 0x17, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x33, 0x0a,
	0x22, 0x56, 0x45, 0x4e, 0x44, 0x4f, 0x52, 0x5f, 0x43, 0x41, 0x54, 0x41, 0x4c, 0x4f, 0x47, 0x5f,
	0x53, 0x54, 0x4f, 0x43, 0x4b, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x1a, 0x0b, 0xa2, 0xc0, 0x02, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x12, 0x35, 0x0a, 0x23, 0x56, 0x45, 0x4e, 0x44, 0x4f, 0x52, 0x5f, 0x43, 0x41, 0x54,
	0x41, 0x4c, 0x4f, 0x47, 0x5f, 0x53, 0x54, 0x4f, 0x43, 0x4b, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c,
	0x5f, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x4f, 0x43, 0x4b, 0x10, 0x01, 0x1a, 0x0c, 0xa2, 0xc0, 0x02,
	0x08, 0x49, 0x6e, 0x20, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x3d, 0x0a, 0x27, 0x56, 0x45, 0x4e,
	0x44, 0x4f, 0x52, 0x5f, 0x43, 0x41, 0x54, 0x41, 0x4c, 0x4f, 0x47, 0x5f, 0x53, 0x54, 0x4f, 0x43,
	0x4b, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x53,
	0x54, 0x4f, 0x43, 0x4b, 0x10, 0x02, 0x1a, 0x10, 0xa2, 0xc0, 0x02, 0x0c, 0x4f, 0x75, 0x74, 0x20,
	0x6f, 0x66, 0x20, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x3b, 0x0a, 0x2a, 0x56, 0x45, 0x4e, 0x44,
	0x4f, 0x52, 0x5f, 0x43, 0x41, 0x54, 0x41, 0x4c, 0x4f, 0x47, 0x5f, 0x53, 0x54, 0x4f, 0x43, 0x4b,
	0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x54,
	0x4f, 0x43, 0x4b, 0x5f, 0x35, 0x44, 0x10, 0x03, 0x1a, 0x0b, 0xa2, 0xc0, 0x02, 0x07, 0x41, 0x74,
	0x20, 0x72, 0x69, 0x73, 0x6b, 0x42, 0xc3, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x65, 0x61, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x61, 0x2d, 0x6e, 0x65, 0x78, 0x74,
	0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x64, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x43, 0x58, 0xaa, 0x02, 0x0e, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x41, 0x70, 0x69,
	0x5c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x41, 0x70,
	0x69, 0x5c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x41, 0x70, 0x69, 0x3a, 0x3a,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_catalog_v1_vendor_catalog_proto_rawDescOnce sync.Once
	file_api_catalog_v1_vendor_catalog_proto_rawDescData = file_api_catalog_v1_vendor_catalog_proto_rawDesc
)

func file_api_catalog_v1_vendor_catalog_proto_rawDescGZIP() []byte {
	file_api_catalog_v1_vendor_catalog_proto_rawDescOnce.Do(func() {
		file_api_catalog_v1_vendor_catalog_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_catalog_v1_vendor_catalog_proto_rawDescData)
	})
	return file_api_catalog_v1_vendor_catalog_proto_rawDescData
}

var file_api_catalog_v1_vendor_catalog_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_catalog_v1_vendor_catalog_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_catalog_v1_vendor_catalog_proto_goTypes = []any{
	(VendorCatalogStockLabel)(0),           // 0: api.catalog.v1.VendorCatalogStockLabel
	(*VendorCatalog)(nil),                  // 1: api.catalog.v1.VendorCatalog
	(*VendorCatalogVariant)(nil),           // 2: api.catalog.v1.VendorCatalogVariant
	(*VendorCatalogPrintLocation)(nil),     // 3: api.catalog.v1.VendorCatalogPrintLocation
	(*ListCatalogVariantRequest)(nil),      // 4: api.catalog.v1.ListCatalogVariantRequest
	(*ListCatalogVariantResponse)(nil),     // 5: api.catalog.v1.ListCatalogVariantResponse
	(*ListCatalogStockStatusRequest)(nil),  // 6: api.catalog.v1.ListCatalogStockStatusRequest
	(*ListCatalogStockStatusResponse)(nil), // 7: api.catalog.v1.ListCatalogStockStatusResponse
	(*v1.Money)(nil),                       // 8: common.type.v1.Money
	(*v1.Paging)(nil),                      // 9: common.type.v1.Paging
	(*v1.PagingResponse)(nil),              // 10: common.type.v1.PagingResponse
}
var file_api_catalog_v1_vendor_catalog_proto_depIdxs = []int32{
	3,  // 0: api.catalog.v1.VendorCatalog.print_locations:type_name -> api.catalog.v1.VendorCatalogPrintLocation
	2,  // 1: api.catalog.v1.VendorCatalog.variants:type_name -> api.catalog.v1.VendorCatalogVariant
	8,  // 2: api.catalog.v1.VendorCatalogVariant.price:type_name -> common.type.v1.Money
	8,  // 3: api.catalog.v1.VendorCatalogVariant.recommended_price:type_name -> common.type.v1.Money
	8,  // 4: api.catalog.v1.VendorCatalogVariant.extra_price:type_name -> common.type.v1.Money
	0,  // 5: api.catalog.v1.VendorCatalogVariant.stock_label:type_name -> api.catalog.v1.VendorCatalogStockLabel
	9,  // 6: api.catalog.v1.ListCatalogVariantRequest.paging:type_name -> common.type.v1.Paging
	10, // 7: api.catalog.v1.ListCatalogVariantResponse.paging:type_name -> common.type.v1.PagingResponse
	1,  // 8: api.catalog.v1.ListCatalogVariantResponse.data:type_name -> api.catalog.v1.VendorCatalog
	9,  // 9: api.catalog.v1.ListCatalogStockStatusRequest.paging:type_name -> common.type.v1.Paging
	10, // 10: api.catalog.v1.ListCatalogStockStatusResponse.paging:type_name -> common.type.v1.PagingResponse
	2,  // 11: api.catalog.v1.ListCatalogStockStatusResponse.data:type_name -> api.catalog.v1.VendorCatalogVariant
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_catalog_v1_vendor_catalog_proto_init() }
func file_api_catalog_v1_vendor_catalog_proto_init() {
	if File_api_catalog_v1_vendor_catalog_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_catalog_v1_vendor_catalog_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_catalog_v1_vendor_catalog_proto_goTypes,
		DependencyIndexes: file_api_catalog_v1_vendor_catalog_proto_depIdxs,
		EnumInfos:         file_api_catalog_v1_vendor_catalog_proto_enumTypes,
		MessageInfos:      file_api_catalog_v1_vendor_catalog_proto_msgTypes,
	}.Build()
	File_api_catalog_v1_vendor_catalog_proto = out.File
	file_api_catalog_v1_vendor_catalog_proto_rawDesc = nil
	file_api_catalog_v1_vendor_catalog_proto_goTypes = nil
	file_api_catalog_v1_vendor_catalog_proto_depIdxs = nil
}
