// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: api/webhook/v1/data_vendor_webhook.proto

package webhookv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VendorWebhook_Topic int32

const (
	VendorWebhook_TOPIC_UNKNOWN                     VendorWebhook_Topic = 0
	VendorWebhook_TOPIC_ALL                         VendorWebhook_Topic = 1 // only used for filtering
	VendorWebhook_TOPIC_ORDER_COMPLETED             VendorWebhook_Topic = 2
	VendorWebhook_TOPIC_ORDER_CANCELLED             VendorWebhook_Topic = 3
	VendorWebhook_TOPIC_TRACKING_ORDER_UPDATED      VendorWebhook_Topic = 4
	VendorWebhook_TOPIC_ORDER_ON_HOLD               VendorWebhook_Topic = 5
	VendorWebhook_TOPIC_SHIPPING_ADDRESS_VERIFIED   VendorWebhook_Topic = 6
	VendorWebhook_TOPIC_SHIPPING_ADDRESS_UNVERIFIED VendorWebhook_Topic = 7
	VendorWebhook_TOPIC_PRODUCT_OUT_OF_STOCK        VendorWebhook_Topic = 8
)

// Enum value maps for VendorWebhook_Topic.
var (
	VendorWebhook_Topic_name = map[int32]string{
		0: "TOPIC_UNKNOWN",
		1: "TOPIC_ALL",
		2: "TOPIC_ORDER_COMPLETED",
		3: "TOPIC_ORDER_CANCELLED",
		4: "TOPIC_TRACKING_ORDER_UPDATED",
		5: "TOPIC_ORDER_ON_HOLD",
		6: "TOPIC_SHIPPING_ADDRESS_VERIFIED",
		7: "TOPIC_SHIPPING_ADDRESS_UNVERIFIED",
		8: "TOPIC_PRODUCT_OUT_OF_STOCK",
	}
	VendorWebhook_Topic_value = map[string]int32{
		"TOPIC_UNKNOWN":                     0,
		"TOPIC_ALL":                         1,
		"TOPIC_ORDER_COMPLETED":             2,
		"TOPIC_ORDER_CANCELLED":             3,
		"TOPIC_TRACKING_ORDER_UPDATED":      4,
		"TOPIC_ORDER_ON_HOLD":               5,
		"TOPIC_SHIPPING_ADDRESS_VERIFIED":   6,
		"TOPIC_SHIPPING_ADDRESS_UNVERIFIED": 7,
		"TOPIC_PRODUCT_OUT_OF_STOCK":        8,
	}
)

func (x VendorWebhook_Topic) Enum() *VendorWebhook_Topic {
	p := new(VendorWebhook_Topic)
	*p = x
	return p
}

func (x VendorWebhook_Topic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VendorWebhook_Topic) Descriptor() protoreflect.EnumDescriptor {
	return file_api_webhook_v1_data_vendor_webhook_proto_enumTypes[0].Descriptor()
}

func (VendorWebhook_Topic) Type() protoreflect.EnumType {
	return &file_api_webhook_v1_data_vendor_webhook_proto_enumTypes[0]
}

func (x VendorWebhook_Topic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VendorWebhook_Topic.Descriptor instead.
func (VendorWebhook_Topic) EnumDescriptor() ([]byte, []int) {
	return file_api_webhook_v1_data_vendor_webhook_proto_rawDescGZIP(), []int{0, 0}
}

type VendorWebhook_Version int32

const (
	VendorWebhook_VERSION_UNKNOWN VendorWebhook_Version = 0
	VendorWebhook_VERSION_ALL     VendorWebhook_Version = 1 // only used for filtering
	VendorWebhook_VERSION_V1      VendorWebhook_Version = 2
	VendorWebhook_VERSION_V3      VendorWebhook_Version = 3
)

// Enum value maps for VendorWebhook_Version.
var (
	VendorWebhook_Version_name = map[int32]string{
		0: "VERSION_UNKNOWN",
		1: "VERSION_ALL",
		2: "VERSION_V1",
		3: "VERSION_V3",
	}
	VendorWebhook_Version_value = map[string]int32{
		"VERSION_UNKNOWN": 0,
		"VERSION_ALL":     1,
		"VERSION_V1":      2,
		"VERSION_V3":      3,
	}
)

func (x VendorWebhook_Version) Enum() *VendorWebhook_Version {
	p := new(VendorWebhook_Version)
	*p = x
	return p
}

func (x VendorWebhook_Version) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VendorWebhook_Version) Descriptor() protoreflect.EnumDescriptor {
	return file_api_webhook_v1_data_vendor_webhook_proto_enumTypes[1].Descriptor()
}

func (VendorWebhook_Version) Type() protoreflect.EnumType {
	return &file_api_webhook_v1_data_vendor_webhook_proto_enumTypes[1]
}

func (x VendorWebhook_Version) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VendorWebhook_Version.Descriptor instead.
func (VendorWebhook_Version) EnumDescriptor() ([]byte, []int) {
	return file_api_webhook_v1_data_vendor_webhook_proto_rawDescGZIP(), []int{0, 1}
}

type VendorWebhook_Status int32

const (
	VendorWebhook_STATUS_UNKNOWN  VendorWebhook_Status = 0
	VendorWebhook_STATUS_ALL      VendorWebhook_Status = 1 // only used for filtering
	VendorWebhook_STATUS_ACTIVE   VendorWebhook_Status = 2
	VendorWebhook_STATUS_INACTIVE VendorWebhook_Status = 3
)

// Enum value maps for VendorWebhook_Status.
var (
	VendorWebhook_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_ALL",
		2: "STATUS_ACTIVE",
		3: "STATUS_INACTIVE",
	}
	VendorWebhook_Status_value = map[string]int32{
		"STATUS_UNKNOWN":  0,
		"STATUS_ALL":      1,
		"STATUS_ACTIVE":   2,
		"STATUS_INACTIVE": 3,
	}
)

func (x VendorWebhook_Status) Enum() *VendorWebhook_Status {
	p := new(VendorWebhook_Status)
	*p = x
	return p
}

func (x VendorWebhook_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VendorWebhook_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_webhook_v1_data_vendor_webhook_proto_enumTypes[2].Descriptor()
}

func (VendorWebhook_Status) Type() protoreflect.EnumType {
	return &file_api_webhook_v1_data_vendor_webhook_proto_enumTypes[2]
}

func (x VendorWebhook_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VendorWebhook_Status.Descriptor instead.
func (VendorWebhook_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_webhook_v1_data_vendor_webhook_proto_rawDescGZIP(), []int{0, 2}
}

type VendorWebhook struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WebhookId     string                 `protobuf:"bytes,1,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	Topic         VendorWebhook_Topic    `protobuf:"varint,2,opt,name=topic,proto3,enum=api.webhook.v1.VendorWebhook_Topic" json:"topic,omitempty"`
	Status        VendorWebhook_Status   `protobuf:"varint,3,opt,name=status,proto3,enum=api.webhook.v1.VendorWebhook_Status" json:"status,omitempty"`
	DeliveryUrl   string                 `protobuf:"bytes,4,opt,name=delivery_url,json=deliveryUrl,proto3" json:"delivery_url,omitempty"`
	Version       VendorWebhook_Version  `protobuf:"varint,5,opt,name=version,proto3,enum=api.webhook.v1.VendorWebhook_Version" json:"version,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorWebhook) Reset() {
	*x = VendorWebhook{}
	mi := &file_api_webhook_v1_data_vendor_webhook_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorWebhook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorWebhook) ProtoMessage() {}

func (x *VendorWebhook) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_data_vendor_webhook_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorWebhook.ProtoReflect.Descriptor instead.
func (*VendorWebhook) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_data_vendor_webhook_proto_rawDescGZIP(), []int{0}
}

func (x *VendorWebhook) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *VendorWebhook) GetTopic() VendorWebhook_Topic {
	if x != nil {
		return x.Topic
	}
	return VendorWebhook_TOPIC_UNKNOWN
}

func (x *VendorWebhook) GetStatus() VendorWebhook_Status {
	if x != nil {
		return x.Status
	}
	return VendorWebhook_STATUS_UNKNOWN
}

func (x *VendorWebhook) GetDeliveryUrl() string {
	if x != nil {
		return x.DeliveryUrl
	}
	return ""
}

func (x *VendorWebhook) GetVersion() VendorWebhook_Version {
	if x != nil {
		return x.Version
	}
	return VendorWebhook_VERSION_UNKNOWN
}

func (x *VendorWebhook) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VendorWebhook) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VendorWebhook_Filter struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	WebhookIds    []string                `protobuf:"bytes,1,rep,name=webhook_ids,json=webhookIds,proto3" json:"webhook_ids,omitempty"`
	TeamIds       []string                `protobuf:"bytes,2,rep,name=team_ids,json=teamIds,proto3" json:"team_ids,omitempty"`
	StoreIds      []string                `protobuf:"bytes,3,rep,name=store_ids,json=storeIds,proto3" json:"store_ids,omitempty"`
	Topics        []VendorWebhook_Topic   `protobuf:"varint,4,rep,packed,name=topics,proto3,enum=api.webhook.v1.VendorWebhook_Topic" json:"topics,omitempty"`
	Statuses      []VendorWebhook_Status  `protobuf:"varint,5,rep,packed,name=statuses,proto3,enum=api.webhook.v1.VendorWebhook_Status" json:"statuses,omitempty"`
	Versions      []VendorWebhook_Version `protobuf:"varint,6,rep,packed,name=versions,proto3,enum=api.webhook.v1.VendorWebhook_Version" json:"versions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorWebhook_Filter) Reset() {
	*x = VendorWebhook_Filter{}
	mi := &file_api_webhook_v1_data_vendor_webhook_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorWebhook_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorWebhook_Filter) ProtoMessage() {}

func (x *VendorWebhook_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_data_vendor_webhook_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorWebhook_Filter.ProtoReflect.Descriptor instead.
func (*VendorWebhook_Filter) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_data_vendor_webhook_proto_rawDescGZIP(), []int{0, 0}
}

func (x *VendorWebhook_Filter) GetWebhookIds() []string {
	if x != nil {
		return x.WebhookIds
	}
	return nil
}

func (x *VendorWebhook_Filter) GetTeamIds() []string {
	if x != nil {
		return x.TeamIds
	}
	return nil
}

func (x *VendorWebhook_Filter) GetStoreIds() []string {
	if x != nil {
		return x.StoreIds
	}
	return nil
}

func (x *VendorWebhook_Filter) GetTopics() []VendorWebhook_Topic {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *VendorWebhook_Filter) GetStatuses() []VendorWebhook_Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *VendorWebhook_Filter) GetVersions() []VendorWebhook_Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

type VendorWebhook_Legacy struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            int32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Topic         string                  `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Address       string                  `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	CreatedAt     *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorWebhook_Legacy) Reset() {
	*x = VendorWebhook_Legacy{}
	mi := &file_api_webhook_v1_data_vendor_webhook_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorWebhook_Legacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorWebhook_Legacy) ProtoMessage() {}

func (x *VendorWebhook_Legacy) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_data_vendor_webhook_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorWebhook_Legacy.ProtoReflect.Descriptor instead.
func (*VendorWebhook_Legacy) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_data_vendor_webhook_proto_rawDescGZIP(), []int{0, 1}
}

func (x *VendorWebhook_Legacy) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VendorWebhook_Legacy) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *VendorWebhook_Legacy) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *VendorWebhook_Legacy) GetCreatedAt() *wrapperspb.StringValue {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VendorWebhook_Legacy) GetUpdatedAt() *wrapperspb.StringValue {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_api_webhook_v1_data_vendor_webhook_proto protoreflect.FileDescriptor

var file_api_webhook_v1_data_vendor_webhook_proto_rawDesc = string([]byte{
	0x0a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70, 0x69, 0x2e,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x0c, 0x0a, 0x0d, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x29, 0x0a, 0x0a, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xba, 0x48, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x30, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0x72, 0x08, 0x10,
	0x01, 0x18, 0x80, 0x10, 0x88, 0x01, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x55, 0x72, 0x6c, 0x12, 0x49, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xba, 0x48,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xfa, 0x02, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x2d, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0c, 0xba, 0x48, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x73, 0x12,
	0x27, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x0c, 0xba, 0x48, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0c, 0xba, 0x48, 0x09,
	0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x4a, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0x92, 0x01, 0x07,
	0x22, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12,
	0x4f, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0x92, 0x01, 0x07, 0x22,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x12, 0x50, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0x92, 0x01,
	0x07, 0x22, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0xb3, 0x02, 0x0a, 0x06, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x12, 0x17, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02,
	0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x6d, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x57, 0xba, 0x48, 0x54, 0x72, 0x52, 0x52, 0x10, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x0f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x52,
	0x10, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x1b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x27, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0x72, 0x08, 0x10, 0x01, 0x18,
	0x80, 0x10, 0x88, 0x01, 0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3b,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x86, 0x02, 0x0a, 0x05, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x41,
	0x4c, 0x4c, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x19, 0x0a, 0x15, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x4f,
	0x50, 0x49, 0x43, 0x5f, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13,
	0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x5f, 0x48,
	0x4f, 0x4c, 0x44, 0x10, 0x05, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x53,
	0x48, 0x49, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f,
	0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x06, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x4f,
	0x50, 0x49, 0x43, 0x5f, 0x53, 0x48, 0x49, 0x50, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x44, 0x44,
	0x52, 0x45, 0x53, 0x53, 0x5f, 0x55, 0x4e, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55,
	0x43, 0x54, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x54, 0x4f, 0x43, 0x4b, 0x10,
	0x08, 0x22, 0x4f, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x0f,
	0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4c, 0x4c,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x31,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x33,
	0x10, 0x03, 0x22, 0x54, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x03, 0x42, 0xc7, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x42,
	0x16, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x61, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67,
	0x65, 0x61, 0x2d, 0x6e, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x64,
	0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x76, 0x31,
	0x3b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x57, 0x58,
	0xaa, 0x02, 0x0e, 0x41, 0x70, 0x69, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x0e, 0x41, 0x70, 0x69, 0x5c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x1a, 0x41, 0x70, 0x69, 0x5c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x10, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_webhook_v1_data_vendor_webhook_proto_rawDescOnce sync.Once
	file_api_webhook_v1_data_vendor_webhook_proto_rawDescData []byte
)

func file_api_webhook_v1_data_vendor_webhook_proto_rawDescGZIP() []byte {
	file_api_webhook_v1_data_vendor_webhook_proto_rawDescOnce.Do(func() {
		file_api_webhook_v1_data_vendor_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_webhook_v1_data_vendor_webhook_proto_rawDesc), len(file_api_webhook_v1_data_vendor_webhook_proto_rawDesc)))
	})
	return file_api_webhook_v1_data_vendor_webhook_proto_rawDescData
}

var file_api_webhook_v1_data_vendor_webhook_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_webhook_v1_data_vendor_webhook_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_webhook_v1_data_vendor_webhook_proto_goTypes = []any{
	(VendorWebhook_Topic)(0),       // 0: api.webhook.v1.VendorWebhook.Topic
	(VendorWebhook_Version)(0),     // 1: api.webhook.v1.VendorWebhook.Version
	(VendorWebhook_Status)(0),      // 2: api.webhook.v1.VendorWebhook.Status
	(*VendorWebhook)(nil),          // 3: api.webhook.v1.VendorWebhook
	(*VendorWebhook_Filter)(nil),   // 4: api.webhook.v1.VendorWebhook.Filter
	(*VendorWebhook_Legacy)(nil),   // 5: api.webhook.v1.VendorWebhook.Legacy
	(*timestamppb.Timestamp)(nil),  // 6: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil), // 7: google.protobuf.StringValue
}
var file_api_webhook_v1_data_vendor_webhook_proto_depIdxs = []int32{
	0,  // 0: api.webhook.v1.VendorWebhook.topic:type_name -> api.webhook.v1.VendorWebhook.Topic
	2,  // 1: api.webhook.v1.VendorWebhook.status:type_name -> api.webhook.v1.VendorWebhook.Status
	1,  // 2: api.webhook.v1.VendorWebhook.version:type_name -> api.webhook.v1.VendorWebhook.Version
	6,  // 3: api.webhook.v1.VendorWebhook.created_at:type_name -> google.protobuf.Timestamp
	6,  // 4: api.webhook.v1.VendorWebhook.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 5: api.webhook.v1.VendorWebhook.Filter.topics:type_name -> api.webhook.v1.VendorWebhook.Topic
	2,  // 6: api.webhook.v1.VendorWebhook.Filter.statuses:type_name -> api.webhook.v1.VendorWebhook.Status
	1,  // 7: api.webhook.v1.VendorWebhook.Filter.versions:type_name -> api.webhook.v1.VendorWebhook.Version
	7,  // 8: api.webhook.v1.VendorWebhook.Legacy.created_at:type_name -> google.protobuf.StringValue
	7,  // 9: api.webhook.v1.VendorWebhook.Legacy.updated_at:type_name -> google.protobuf.StringValue
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_webhook_v1_data_vendor_webhook_proto_init() }
func file_api_webhook_v1_data_vendor_webhook_proto_init() {
	if File_api_webhook_v1_data_vendor_webhook_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_webhook_v1_data_vendor_webhook_proto_rawDesc), len(file_api_webhook_v1_data_vendor_webhook_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_webhook_v1_data_vendor_webhook_proto_goTypes,
		DependencyIndexes: file_api_webhook_v1_data_vendor_webhook_proto_depIdxs,
		EnumInfos:         file_api_webhook_v1_data_vendor_webhook_proto_enumTypes,
		MessageInfos:      file_api_webhook_v1_data_vendor_webhook_proto_msgTypes,
	}.Build()
	File_api_webhook_v1_data_vendor_webhook_proto = out.File
	file_api_webhook_v1_data_vendor_webhook_proto_goTypes = nil
	file_api_webhook_v1_data_vendor_webhook_proto_depIdxs = nil
}
