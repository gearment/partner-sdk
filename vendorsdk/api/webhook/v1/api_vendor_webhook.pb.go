// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: api/webhook/v1/api_vendor_webhook.proto

package webhookv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/gearment/gea-next/vendorsdk/common/type/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VendorListWebhookRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filter criteria for webhooks
	Filter *VendorWebhook_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Pagination parameters
	Paging        *v1.Paging `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorListWebhookRequest) Reset() {
	*x = VendorListWebhookRequest{}
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorListWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorListWebhookRequest) ProtoMessage() {}

func (x *VendorListWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorListWebhookRequest.ProtoReflect.Descriptor instead.
func (*VendorListWebhookRequest) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_api_vendor_webhook_proto_rawDescGZIP(), []int{0}
}

func (x *VendorListWebhookRequest) GetFilter() *VendorWebhook_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *VendorListWebhookRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type VendorListWebhookResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Response status: "success" or "error"
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Human-readable message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Pagination metadata
	Paging *v1.PagingResponse `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
	// List of registered webhooks
	// Each webhook includes: ID, topic, delivery URL, status, created_at
	Data          []*VendorWebhook `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorListWebhookResponse) Reset() {
	*x = VendorListWebhookResponse{}
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorListWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorListWebhookResponse) ProtoMessage() {}

func (x *VendorListWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorListWebhookResponse.ProtoReflect.Descriptor instead.
func (*VendorListWebhookResponse) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_api_vendor_webhook_proto_rawDescGZIP(), []int{1}
}

func (x *VendorListWebhookResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VendorListWebhookResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VendorListWebhookResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *VendorListWebhookResponse) GetData() []*VendorWebhook {
	if x != nil {
		return x.Data
	}
	return nil
}

type VendorCreateWebhookRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Webhook status: ACTIVE or INACTIVE (default: ACTIVE)
	Status VendorWebhook_Status `protobuf:"varint,1,opt,name=status,proto3,enum=api.webhook.v1.VendorWebhook_Status" json:"status,omitempty"`
	// Event topic to subscribe to (required)
	// Choose from: ORDER_COMPLETED, ORDER_CANCELED, TRACKING_UPDATED, ADDRESS_UNVERIFIED
	Topic VendorWebhook_Topic `protobuf:"varint,2,opt,name=topic,proto3,enum=api.webhook.v1.VendorWebhook_Topic" json:"topic,omitempty"`
	// Human-readable webhook name (optional, helps identify webhook purpose, max length: 255 characters)
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Webhook payload version (recommended: use latest version for new webhooks)
	Version VendorWebhook_Version `protobuf:"varint,4,opt,name=version,proto3,enum=api.webhook.v1.VendorWebhook_Version" json:"version,omitempty"`
	// HTTPS URL to receive webhook POST requests (required, must be publicly accessible and respond within 30 seconds, must use HTTPS)
	DeliveryUrl string `protobuf:"bytes,5,opt,name=delivery_url,json=deliveryUrl,proto3" json:"delivery_url,omitempty"`
	// Optional store ID to filter events (if provided, only events for this store will trigger the webhook)
	StoreId       string `protobuf:"bytes,6,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorCreateWebhookRequest) Reset() {
	*x = VendorCreateWebhookRequest{}
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorCreateWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorCreateWebhookRequest) ProtoMessage() {}

func (x *VendorCreateWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorCreateWebhookRequest.ProtoReflect.Descriptor instead.
func (*VendorCreateWebhookRequest) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_api_vendor_webhook_proto_rawDescGZIP(), []int{2}
}

func (x *VendorCreateWebhookRequest) GetStatus() VendorWebhook_Status {
	if x != nil {
		return x.Status
	}
	return VendorWebhook_STATUS_UNKNOWN
}

func (x *VendorCreateWebhookRequest) GetTopic() VendorWebhook_Topic {
	if x != nil {
		return x.Topic
	}
	return VendorWebhook_TOPIC_UNKNOWN
}

func (x *VendorCreateWebhookRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VendorCreateWebhookRequest) GetVersion() VendorWebhook_Version {
	if x != nil {
		return x.Version
	}
	return VendorWebhook_VERSION_UNKNOWN
}

func (x *VendorCreateWebhookRequest) GetDeliveryUrl() string {
	if x != nil {
		return x.DeliveryUrl
	}
	return ""
}

func (x *VendorCreateWebhookRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

type VendorCreateWebhookResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Response status: "success" or "error"
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Human-readable message
	// Success: "Webhook created successfully"
	// Error: "Invalid delivery URL" or "Duplicate webhook"
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Created webhook details
	// Includes: webhook_id, topic, delivery_url, created_at
	Data          *VendorWebhook `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorCreateWebhookResponse) Reset() {
	*x = VendorCreateWebhookResponse{}
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorCreateWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorCreateWebhookResponse) ProtoMessage() {}

func (x *VendorCreateWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorCreateWebhookResponse.ProtoReflect.Descriptor instead.
func (*VendorCreateWebhookResponse) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_api_vendor_webhook_proto_rawDescGZIP(), []int{3}
}

func (x *VendorCreateWebhookResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VendorCreateWebhookResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VendorCreateWebhookResponse) GetData() *VendorWebhook {
	if x != nil {
		return x.Data
	}
	return nil
}

type VendorDeleteWebhookRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorDeleteWebhookRequest) Reset() {
	*x = VendorDeleteWebhookRequest{}
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorDeleteWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorDeleteWebhookRequest) ProtoMessage() {}

func (x *VendorDeleteWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorDeleteWebhookRequest.ProtoReflect.Descriptor instead.
func (*VendorDeleteWebhookRequest) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_api_vendor_webhook_proto_rawDescGZIP(), []int{4}
}

type VendorDeleteWebhookResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Response status: "success" or "error"
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Human-readable message
	// Success: "Webhook deleted successfully"
	// Error: "Webhook not found"
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Deleted webhook information
	Data          *VendorWebhook `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorDeleteWebhookResponse) Reset() {
	*x = VendorDeleteWebhookResponse{}
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorDeleteWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorDeleteWebhookResponse) ProtoMessage() {}

func (x *VendorDeleteWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorDeleteWebhookResponse.ProtoReflect.Descriptor instead.
func (*VendorDeleteWebhookResponse) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_api_vendor_webhook_proto_rawDescGZIP(), []int{5}
}

func (x *VendorDeleteWebhookResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VendorDeleteWebhookResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VendorDeleteWebhookResponse) GetData() *VendorWebhook {
	if x != nil {
		return x.Data
	}
	return nil
}

type LegacyVendorCreateWebhookRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Credentials   *v1.LegacyCredentials  `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Topic         string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LegacyVendorCreateWebhookRequest) Reset() {
	*x = LegacyVendorCreateWebhookRequest{}
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyVendorCreateWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyVendorCreateWebhookRequest) ProtoMessage() {}

func (x *LegacyVendorCreateWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyVendorCreateWebhookRequest.ProtoReflect.Descriptor instead.
func (*LegacyVendorCreateWebhookRequest) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_api_vendor_webhook_proto_rawDescGZIP(), []int{6}
}

func (x *LegacyVendorCreateWebhookRequest) GetCredentials() *v1.LegacyCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *LegacyVendorCreateWebhookRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *LegacyVendorCreateWebhookRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type LegacyVendorCreateWebhookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result        *VendorWebhook_Legacy  `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LegacyVendorCreateWebhookResponse) Reset() {
	*x = LegacyVendorCreateWebhookResponse{}
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyVendorCreateWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyVendorCreateWebhookResponse) ProtoMessage() {}

func (x *LegacyVendorCreateWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_webhook_v1_api_vendor_webhook_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyVendorCreateWebhookResponse.ProtoReflect.Descriptor instead.
func (*LegacyVendorCreateWebhookResponse) Descriptor() ([]byte, []int) {
	return file_api_webhook_v1_api_vendor_webhook_proto_rawDescGZIP(), []int{7}
}

func (x *LegacyVendorCreateWebhookResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LegacyVendorCreateWebhookResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LegacyVendorCreateWebhookResponse) GetResult() *VendorWebhook_Legacy {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_api_webhook_v1_api_vendor_webhook_proto protoreflect.FileDescriptor

var file_api_webhook_v1_api_vendor_webhook_proto_rawDesc = string([]byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x22, 0xb8, 0x01, 0x0a, 0x19, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcf, 0x03, 0x0a, 0x1a,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x43, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x47, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x33, 0xba, 0x48, 0x30, 0x72, 0x2e, 0x18, 0xff, 0x01, 0x92,
	0x02, 0x28, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x20, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x49, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x3c, 0xba, 0x48, 0x39, 0x72, 0x37, 0x10, 0x01, 0x18, 0x80, 0x10, 0x92, 0x02, 0x2c,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x79, 0x6f, 0x75, 0x72, 0x61, 0x70, 0x70, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x67, 0x65, 0x61,
	0x72, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x52,
	0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14,
	0xba, 0x48, 0x11, 0x72, 0x0f, 0x92, 0x02, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x62,
	0x63, 0x31, 0x32, 0x33, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x22, 0x82, 0x01,
	0x0a, 0x1b, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x1c, 0x0a, 0x1a, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x82, 0x01, 0x0a, 0x1b, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xff, 0x01, 0x0a, 0x20, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x6d, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x57,
	0xba, 0x48, 0x54, 0x72, 0x52, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x52, 0x10, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x1b, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x27,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0d, 0xba, 0x48, 0x0a, 0x72, 0x08, 0x10, 0x01, 0x18, 0x80, 0x10, 0x88, 0x01, 0x01, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x21, 0x4c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xbd, 0x03,
	0x0a, 0x10, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x41,
	0x50, 0x49, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x13, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12,
	0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x13, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x2a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73,
	0x2f, 0x7b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x7d, 0x32, 0xb8, 0x01,
	0x0a, 0x16, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x41, 0x50, 0x49, 0x12, 0x9d, 0x01, 0x0a, 0x19, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x42, 0xc6, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x42,
	0x15, 0x41, 0x70, 0x69, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x61, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x65,
	0x61, 0x2d, 0x6e, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x64, 0x6b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2f, 0x76, 0x31, 0x3b,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x57, 0x58, 0xaa,
	0x02, 0x0e, 0x41, 0x70, 0x69, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0e, 0x41, 0x70, 0x69, 0x5c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x1a, 0x41, 0x70, 0x69, 0x5c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x10, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_webhook_v1_api_vendor_webhook_proto_rawDescOnce sync.Once
	file_api_webhook_v1_api_vendor_webhook_proto_rawDescData []byte
)

func file_api_webhook_v1_api_vendor_webhook_proto_rawDescGZIP() []byte {
	file_api_webhook_v1_api_vendor_webhook_proto_rawDescOnce.Do(func() {
		file_api_webhook_v1_api_vendor_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_webhook_v1_api_vendor_webhook_proto_rawDesc), len(file_api_webhook_v1_api_vendor_webhook_proto_rawDesc)))
	})
	return file_api_webhook_v1_api_vendor_webhook_proto_rawDescData
}

var file_api_webhook_v1_api_vendor_webhook_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_webhook_v1_api_vendor_webhook_proto_goTypes = []any{
	(*VendorListWebhookRequest)(nil),          // 0: api.webhook.v1.VendorListWebhookRequest
	(*VendorListWebhookResponse)(nil),         // 1: api.webhook.v1.VendorListWebhookResponse
	(*VendorCreateWebhookRequest)(nil),        // 2: api.webhook.v1.VendorCreateWebhookRequest
	(*VendorCreateWebhookResponse)(nil),       // 3: api.webhook.v1.VendorCreateWebhookResponse
	(*VendorDeleteWebhookRequest)(nil),        // 4: api.webhook.v1.VendorDeleteWebhookRequest
	(*VendorDeleteWebhookResponse)(nil),       // 5: api.webhook.v1.VendorDeleteWebhookResponse
	(*LegacyVendorCreateWebhookRequest)(nil),  // 6: api.webhook.v1.LegacyVendorCreateWebhookRequest
	(*LegacyVendorCreateWebhookResponse)(nil), // 7: api.webhook.v1.LegacyVendorCreateWebhookResponse
	(*VendorWebhook_Filter)(nil),              // 8: api.webhook.v1.VendorWebhook.Filter
	(*v1.Paging)(nil),                         // 9: common.type.v1.Paging
	(*v1.PagingResponse)(nil),                 // 10: common.type.v1.PagingResponse
	(*VendorWebhook)(nil),                     // 11: api.webhook.v1.VendorWebhook
	(VendorWebhook_Status)(0),                 // 12: api.webhook.v1.VendorWebhook.Status
	(VendorWebhook_Topic)(0),                  // 13: api.webhook.v1.VendorWebhook.Topic
	(VendorWebhook_Version)(0),                // 14: api.webhook.v1.VendorWebhook.Version
	(*v1.LegacyCredentials)(nil),              // 15: common.type.v1.LegacyCredentials
	(*VendorWebhook_Legacy)(nil),              // 16: api.webhook.v1.VendorWebhook.Legacy
}
var file_api_webhook_v1_api_vendor_webhook_proto_depIdxs = []int32{
	8,  // 0: api.webhook.v1.VendorListWebhookRequest.filter:type_name -> api.webhook.v1.VendorWebhook.Filter
	9,  // 1: api.webhook.v1.VendorListWebhookRequest.paging:type_name -> common.type.v1.Paging
	10, // 2: api.webhook.v1.VendorListWebhookResponse.paging:type_name -> common.type.v1.PagingResponse
	11, // 3: api.webhook.v1.VendorListWebhookResponse.data:type_name -> api.webhook.v1.VendorWebhook
	12, // 4: api.webhook.v1.VendorCreateWebhookRequest.status:type_name -> api.webhook.v1.VendorWebhook.Status
	13, // 5: api.webhook.v1.VendorCreateWebhookRequest.topic:type_name -> api.webhook.v1.VendorWebhook.Topic
	14, // 6: api.webhook.v1.VendorCreateWebhookRequest.version:type_name -> api.webhook.v1.VendorWebhook.Version
	11, // 7: api.webhook.v1.VendorCreateWebhookResponse.data:type_name -> api.webhook.v1.VendorWebhook
	11, // 8: api.webhook.v1.VendorDeleteWebhookResponse.data:type_name -> api.webhook.v1.VendorWebhook
	15, // 9: api.webhook.v1.LegacyVendorCreateWebhookRequest.credentials:type_name -> common.type.v1.LegacyCredentials
	16, // 10: api.webhook.v1.LegacyVendorCreateWebhookResponse.result:type_name -> api.webhook.v1.VendorWebhook.Legacy
	0,  // 11: api.webhook.v1.VendorWebhookAPI.VendorListWebhook:input_type -> api.webhook.v1.VendorListWebhookRequest
	2,  // 12: api.webhook.v1.VendorWebhookAPI.VendorCreateWebhook:input_type -> api.webhook.v1.VendorCreateWebhookRequest
	4,  // 13: api.webhook.v1.VendorWebhookAPI.VendorDeleteWebhook:input_type -> api.webhook.v1.VendorDeleteWebhookRequest
	6,  // 14: api.webhook.v1.LegacyVendorWebhookAPI.LegacyVendorCreateWebhook:input_type -> api.webhook.v1.LegacyVendorCreateWebhookRequest
	1,  // 15: api.webhook.v1.VendorWebhookAPI.VendorListWebhook:output_type -> api.webhook.v1.VendorListWebhookResponse
	3,  // 16: api.webhook.v1.VendorWebhookAPI.VendorCreateWebhook:output_type -> api.webhook.v1.VendorCreateWebhookResponse
	5,  // 17: api.webhook.v1.VendorWebhookAPI.VendorDeleteWebhook:output_type -> api.webhook.v1.VendorDeleteWebhookResponse
	7,  // 18: api.webhook.v1.LegacyVendorWebhookAPI.LegacyVendorCreateWebhook:output_type -> api.webhook.v1.LegacyVendorCreateWebhookResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_webhook_v1_api_vendor_webhook_proto_init() }
func file_api_webhook_v1_api_vendor_webhook_proto_init() {
	if File_api_webhook_v1_api_vendor_webhook_proto != nil {
		return
	}
	file_api_webhook_v1_data_vendor_webhook_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_webhook_v1_api_vendor_webhook_proto_rawDesc), len(file_api_webhook_v1_api_vendor_webhook_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_webhook_v1_api_vendor_webhook_proto_goTypes,
		DependencyIndexes: file_api_webhook_v1_api_vendor_webhook_proto_depIdxs,
		MessageInfos:      file_api_webhook_v1_api_vendor_webhook_proto_msgTypes,
	}.Build()
	File_api_webhook_v1_api_vendor_webhook_proto = out.File
	file_api_webhook_v1_api_vendor_webhook_proto_goTypes = nil
	file_api_webhook_v1_api_vendor_webhook_proto_depIdxs = nil
}
