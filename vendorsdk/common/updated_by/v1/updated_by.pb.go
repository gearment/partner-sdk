// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: common/updated_by/v1/updated_by.proto

package updated_byv1

import (
	_ "github.com/gearment/gea-next/vendorsdk/common/option/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdatedBy_Source int32

const (
	UpdatedBy_SOURCE_UNSPECIFIED UpdatedBy_Source = 0
	UpdatedBy_SOURCE_ALL         UpdatedBy_Source = 1
	UpdatedBy_SOURCE_USER        UpdatedBy_Source = 2
	UpdatedBy_SOURCE_SYSTEM      UpdatedBy_Source = 3
	UpdatedBy_SOURCE_STAFF       UpdatedBy_Source = 4
	UpdatedBy_SOURCE_API         UpdatedBy_Source = 5
	UpdatedBy_SOURCE_WEBHOOK     UpdatedBy_Source = 6
)

// Enum value maps for UpdatedBy_Source.
var (
	UpdatedBy_Source_name = map[int32]string{
		0: "SOURCE_UNSPECIFIED",
		1: "SOURCE_ALL",
		2: "SOURCE_USER",
		3: "SOURCE_SYSTEM",
		4: "SOURCE_STAFF",
		5: "SOURCE_API",
		6: "SOURCE_WEBHOOK",
	}
	UpdatedBy_Source_value = map[string]int32{
		"SOURCE_UNSPECIFIED": 0,
		"SOURCE_ALL":         1,
		"SOURCE_USER":        2,
		"SOURCE_SYSTEM":      3,
		"SOURCE_STAFF":       4,
		"SOURCE_API":         5,
		"SOURCE_WEBHOOK":     6,
	}
)

func (x UpdatedBy_Source) Enum() *UpdatedBy_Source {
	p := new(UpdatedBy_Source)
	*p = x
	return p
}

func (x UpdatedBy_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatedBy_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_common_updated_by_v1_updated_by_proto_enumTypes[0].Descriptor()
}

func (UpdatedBy_Source) Type() protoreflect.EnumType {
	return &file_common_updated_by_v1_updated_by_proto_enumTypes[0]
}

func (x UpdatedBy_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatedBy_Source.Descriptor instead.
func (UpdatedBy_Source) EnumDescriptor() ([]byte, []int) {
	return file_common_updated_by_v1_updated_by_proto_rawDescGZIP(), []int{0, 0}
}

type UpdatedBy_Method int32

const (
	UpdatedBy_METHOD_UNSPECIFIED         UpdatedBy_Method = 0
	UpdatedBy_METHOD_ALL                 UpdatedBy_Method = 1
	UpdatedBy_METHOD_POD                 UpdatedBy_Method = 2
	UpdatedBy_METHOD_BIZOPS              UpdatedBy_Method = 3
	UpdatedBy_METHOD_VENDOR_API          UpdatedBy_Method = 4
	UpdatedBy_METHOD_OMS                 UpdatedBy_Method = 5
	UpdatedBy_METHOD_THIRD_PARTY_WEBHOOK UpdatedBy_Method = 6
)

// Enum value maps for UpdatedBy_Method.
var (
	UpdatedBy_Method_name = map[int32]string{
		0: "METHOD_UNSPECIFIED",
		1: "METHOD_ALL",
		2: "METHOD_POD",
		3: "METHOD_BIZOPS",
		4: "METHOD_VENDOR_API",
		5: "METHOD_OMS",
		6: "METHOD_THIRD_PARTY_WEBHOOK",
	}
	UpdatedBy_Method_value = map[string]int32{
		"METHOD_UNSPECIFIED":         0,
		"METHOD_ALL":                 1,
		"METHOD_POD":                 2,
		"METHOD_BIZOPS":              3,
		"METHOD_VENDOR_API":          4,
		"METHOD_OMS":                 5,
		"METHOD_THIRD_PARTY_WEBHOOK": 6,
	}
)

func (x UpdatedBy_Method) Enum() *UpdatedBy_Method {
	p := new(UpdatedBy_Method)
	*p = x
	return p
}

func (x UpdatedBy_Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdatedBy_Method) Descriptor() protoreflect.EnumDescriptor {
	return file_common_updated_by_v1_updated_by_proto_enumTypes[1].Descriptor()
}

func (UpdatedBy_Method) Type() protoreflect.EnumType {
	return &file_common_updated_by_v1_updated_by_proto_enumTypes[1]
}

func (x UpdatedBy_Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdatedBy_Method.Descriptor instead.
func (UpdatedBy_Method) EnumDescriptor() ([]byte, []int) {
	return file_common_updated_by_v1_updated_by_proto_rawDescGZIP(), []int{0, 1}
}

type UpdatedBy struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Source        UpdatedBy_Source         `protobuf:"varint,1,opt,name=source,proto3,enum=common.updated_by.v1.UpdatedBy_Source" json:"source,omitempty"`
	UserId        string                   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId     string                   `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	StaffId       string                   `protobuf:"bytes,4,opt,name=staff_id,json=staffId,proto3" json:"staff_id,omitempty"`
	SystemId      string                   `protobuf:"bytes,5,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	WebhookId     *UpdatedBy_WebhookID     `protobuf:"bytes,7,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	Method        UpdatedBy_Method         `protobuf:"varint,8,opt,name=method,proto3,enum=common.updated_by.v1.UpdatedBy_Method" json:"method,omitempty"`
	CredentialsId *UpdatedBy_CredentialsID `protobuf:"bytes,9,opt,name=credentials_id,json=credentialsId,proto3" json:"credentials_id,omitempty"`
	ImportId      *UpdatedBy_ImportID      `protobuf:"bytes,10,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatedBy) Reset() {
	*x = UpdatedBy{}
	mi := &file_common_updated_by_v1_updated_by_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatedBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedBy) ProtoMessage() {}

func (x *UpdatedBy) ProtoReflect() protoreflect.Message {
	mi := &file_common_updated_by_v1_updated_by_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedBy.ProtoReflect.Descriptor instead.
func (*UpdatedBy) Descriptor() ([]byte, []int) {
	return file_common_updated_by_v1_updated_by_proto_rawDescGZIP(), []int{0}
}

func (x *UpdatedBy) GetSource() UpdatedBy_Source {
	if x != nil {
		return x.Source
	}
	return UpdatedBy_SOURCE_UNSPECIFIED
}

func (x *UpdatedBy) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdatedBy) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdatedBy) GetStaffId() string {
	if x != nil {
		return x.StaffId
	}
	return ""
}

func (x *UpdatedBy) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *UpdatedBy) GetWebhookId() *UpdatedBy_WebhookID {
	if x != nil {
		return x.WebhookId
	}
	return nil
}

func (x *UpdatedBy) GetMethod() UpdatedBy_Method {
	if x != nil {
		return x.Method
	}
	return UpdatedBy_METHOD_UNSPECIFIED
}

func (x *UpdatedBy) GetCredentialsId() *UpdatedBy_CredentialsID {
	if x != nil {
		return x.CredentialsId
	}
	return nil
}

func (x *UpdatedBy) GetImportId() *UpdatedBy_ImportID {
	if x != nil {
		return x.ImportId
	}
	return nil
}

type UpdatedBy_ImportID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	ImportId      string                 `protobuf:"bytes,2,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatedBy_ImportID) Reset() {
	*x = UpdatedBy_ImportID{}
	mi := &file_common_updated_by_v1_updated_by_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatedBy_ImportID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedBy_ImportID) ProtoMessage() {}

func (x *UpdatedBy_ImportID) ProtoReflect() protoreflect.Message {
	mi := &file_common_updated_by_v1_updated_by_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedBy_ImportID.ProtoReflect.Descriptor instead.
func (*UpdatedBy_ImportID) Descriptor() ([]byte, []int) {
	return file_common_updated_by_v1_updated_by_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UpdatedBy_ImportID) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UpdatedBy_ImportID) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

type UpdatedBy_WebhookID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatedBy_WebhookID) Reset() {
	*x = UpdatedBy_WebhookID{}
	mi := &file_common_updated_by_v1_updated_by_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatedBy_WebhookID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedBy_WebhookID) ProtoMessage() {}

func (x *UpdatedBy_WebhookID) ProtoReflect() protoreflect.Message {
	mi := &file_common_updated_by_v1_updated_by_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedBy_WebhookID.ProtoReflect.Descriptor instead.
func (*UpdatedBy_WebhookID) Descriptor() ([]byte, []int) {
	return file_common_updated_by_v1_updated_by_proto_rawDescGZIP(), []int{0, 1}
}

func (x *UpdatedBy_WebhookID) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UpdatedBy_WebhookID) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type UpdatedBy_CredentialsID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientKey     string                 `protobuf:"bytes,1,opt,name=client_key,json=clientKey,proto3" json:"client_key,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatedBy_CredentialsID) Reset() {
	*x = UpdatedBy_CredentialsID{}
	mi := &file_common_updated_by_v1_updated_by_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatedBy_CredentialsID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedBy_CredentialsID) ProtoMessage() {}

func (x *UpdatedBy_CredentialsID) ProtoReflect() protoreflect.Message {
	mi := &file_common_updated_by_v1_updated_by_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedBy_CredentialsID.ProtoReflect.Descriptor instead.
func (*UpdatedBy_CredentialsID) Descriptor() ([]byte, []int) {
	return file_common_updated_by_v1_updated_by_proto_rawDescGZIP(), []int{0, 2}
}

func (x *UpdatedBy_CredentialsID) GetClientKey() string {
	if x != nil {
		return x.ClientKey
	}
	return ""
}

func (x *UpdatedBy_CredentialsID) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

var File_common_updated_by_v1_updated_by_proto protoreflect.FileDescriptor

var file_common_updated_by_v1_updated_by_proto_rawDesc = string([]byte{
	0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x09, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0a, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x2e, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x44, 0x52, 0x09, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x54, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x44, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x09, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x2e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x44, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x1a,
	0x43, 0x0a, 0x08, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x1a, 0x46, 0x0a, 0x09, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x4d, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x49, 0x44, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x06,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x12, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x0f,
	0xa2, 0xc0, 0x02, 0x0b, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x17, 0x0a, 0x0a, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x1a,
	0x07, 0xa2, 0xc0, 0x02, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x19, 0x0a, 0x0b, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x1a, 0x08, 0xa2, 0xc0, 0x02, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0d, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x10, 0x03, 0x1a, 0x0a, 0xa2, 0xc0, 0x02, 0x06, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x0c, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x46, 0x46, 0x10, 0x04, 0x1a, 0x09, 0xa2, 0xc0, 0x02, 0x05, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12,
	0x17, 0x0a, 0x0a, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x50, 0x49, 0x10, 0x05, 0x1a,
	0x07, 0xa2, 0xc0, 0x02, 0x03, 0x41, 0x50, 0x49, 0x12, 0x1f, 0x0a, 0x0e, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x10, 0x06, 0x1a, 0x0b, 0xa2, 0xc0,
	0x02, 0x07, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x22, 0xf9, 0x01, 0x0a, 0x06, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x12, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a, 0x0f, 0xa2, 0xc0,
	0x02, 0x0b, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x17, 0x0a,
	0x0a, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x1a, 0x07, 0xa2,
	0xc0, 0x02, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x0a, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x50, 0x4f, 0x44, 0x10, 0x02, 0x1a, 0x07, 0xa2, 0xc0, 0x02, 0x03, 0x50, 0x4f, 0x44, 0x12,
	0x1d, 0x0a, 0x0d, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x42, 0x49, 0x5a, 0x4f, 0x50, 0x53,
	0x10, 0x03, 0x1a, 0x0a, 0xa2, 0xc0, 0x02, 0x06, 0x42, 0x69, 0x7a, 0x4f, 0x70, 0x73, 0x12, 0x25,
	0x0a, 0x11, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x56, 0x45, 0x4e, 0x44, 0x4f, 0x52, 0x5f,
	0x41, 0x50, 0x49, 0x10, 0x04, 0x1a, 0x0e, 0xa2, 0xc0, 0x02, 0x0a, 0x56, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x20, 0x41, 0x50, 0x49, 0x12, 0x17, 0x0a, 0x0a, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f,
	0x4f, 0x4d, 0x53, 0x10, 0x05, 0x1a, 0x07, 0xa2, 0xc0, 0x02, 0x03, 0x4f, 0x4d, 0x53, 0x12, 0x35,
	0x0a, 0x1a, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x54, 0x48, 0x49, 0x52, 0x44, 0x5f, 0x50,
	0x41, 0x52, 0x54, 0x59, 0x5f, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f, 0x4b, 0x10, 0x06, 0x1a, 0x15,
	0xa2, 0xc0, 0x02, 0x11, 0x33, 0x72, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x42, 0xe2, 0x01, 0x0a, 0x18,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x61, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x67, 0x65, 0x61, 0x2d, 0x6e, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x64, 0x6b, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x55, 0x58, 0xaa, 0x02, 0x13, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x3a, 0x3a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_common_updated_by_v1_updated_by_proto_rawDescOnce sync.Once
	file_common_updated_by_v1_updated_by_proto_rawDescData []byte
)

func file_common_updated_by_v1_updated_by_proto_rawDescGZIP() []byte {
	file_common_updated_by_v1_updated_by_proto_rawDescOnce.Do(func() {
		file_common_updated_by_v1_updated_by_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_updated_by_v1_updated_by_proto_rawDesc), len(file_common_updated_by_v1_updated_by_proto_rawDesc)))
	})
	return file_common_updated_by_v1_updated_by_proto_rawDescData
}

var file_common_updated_by_v1_updated_by_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_common_updated_by_v1_updated_by_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_common_updated_by_v1_updated_by_proto_goTypes = []any{
	(UpdatedBy_Source)(0),           // 0: common.updated_by.v1.UpdatedBy.Source
	(UpdatedBy_Method)(0),           // 1: common.updated_by.v1.UpdatedBy.Method
	(*UpdatedBy)(nil),               // 2: common.updated_by.v1.UpdatedBy
	(*UpdatedBy_ImportID)(nil),      // 3: common.updated_by.v1.UpdatedBy.ImportID
	(*UpdatedBy_WebhookID)(nil),     // 4: common.updated_by.v1.UpdatedBy.WebhookID
	(*UpdatedBy_CredentialsID)(nil), // 5: common.updated_by.v1.UpdatedBy.CredentialsID
}
var file_common_updated_by_v1_updated_by_proto_depIdxs = []int32{
	0, // 0: common.updated_by.v1.UpdatedBy.source:type_name -> common.updated_by.v1.UpdatedBy.Source
	4, // 1: common.updated_by.v1.UpdatedBy.webhook_id:type_name -> common.updated_by.v1.UpdatedBy.WebhookID
	1, // 2: common.updated_by.v1.UpdatedBy.method:type_name -> common.updated_by.v1.UpdatedBy.Method
	5, // 3: common.updated_by.v1.UpdatedBy.credentials_id:type_name -> common.updated_by.v1.UpdatedBy.CredentialsID
	3, // 4: common.updated_by.v1.UpdatedBy.import_id:type_name -> common.updated_by.v1.UpdatedBy.ImportID
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_common_updated_by_v1_updated_by_proto_init() }
func file_common_updated_by_v1_updated_by_proto_init() {
	if File_common_updated_by_v1_updated_by_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_updated_by_v1_updated_by_proto_rawDesc), len(file_common_updated_by_v1_updated_by_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_updated_by_v1_updated_by_proto_goTypes,
		DependencyIndexes: file_common_updated_by_v1_updated_by_proto_depIdxs,
		EnumInfos:         file_common_updated_by_v1_updated_by_proto_enumTypes,
		MessageInfos:      file_common_updated_by_v1_updated_by_proto_msgTypes,
	}.Build()
	File_common_updated_by_v1_updated_by_proto = out.File
	file_common_updated_by_v1_updated_by_proto_goTypes = nil
	file_common_updated_by_v1_updated_by_proto_depIdxs = nil
}
