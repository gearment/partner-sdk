// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: common/type/v1/paging.proto

package typev1

import (
	_ "github.com/gearment/gea-next/vendorsdk/common/option/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CursorPaginationDirection int32

const (
	CursorPaginationDirection_CURSOR_PAGINATION_DIRECTION_UNSPECIFIED CursorPaginationDirection = 0
	CursorPaginationDirection_CURSOR_PAGINATION_DIRECTION_FORWARD     CursorPaginationDirection = 1
	CursorPaginationDirection_CURSOR_PAGINATION_DIRECTION_BACKWARD    CursorPaginationDirection = 2
)

// Enum value maps for CursorPaginationDirection.
var (
	CursorPaginationDirection_name = map[int32]string{
		0: "CURSOR_PAGINATION_DIRECTION_UNSPECIFIED",
		1: "CURSOR_PAGINATION_DIRECTION_FORWARD",
		2: "CURSOR_PAGINATION_DIRECTION_BACKWARD",
	}
	CursorPaginationDirection_value = map[string]int32{
		"CURSOR_PAGINATION_DIRECTION_UNSPECIFIED": 0,
		"CURSOR_PAGINATION_DIRECTION_FORWARD":     1,
		"CURSOR_PAGINATION_DIRECTION_BACKWARD":    2,
	}
)

func (x CursorPaginationDirection) Enum() *CursorPaginationDirection {
	p := new(CursorPaginationDirection)
	*p = x
	return p
}

func (x CursorPaginationDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CursorPaginationDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_common_type_v1_paging_proto_enumTypes[0].Descriptor()
}

func (CursorPaginationDirection) Type() protoreflect.EnumType {
	return &file_common_type_v1_paging_proto_enumTypes[0]
}

func (x CursorPaginationDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CursorPaginationDirection.Descriptor instead.
func (CursorPaginationDirection) EnumDescriptor() ([]byte, []int) {
	return file_common_type_v1_paging_proto_rawDescGZIP(), []int{0}
}

type CursorPaginationSort int32

const (
	CursorPaginationSort_CURSOR_PAGINATION_SORT_UNSPECIFIED CursorPaginationSort = 0
	CursorPaginationSort_CURSOR_PAGINATION_SORT_ASC         CursorPaginationSort = 1
	CursorPaginationSort_CURSOR_PAGINATION_SORT_DESC        CursorPaginationSort = 2
)

// Enum value maps for CursorPaginationSort.
var (
	CursorPaginationSort_name = map[int32]string{
		0: "CURSOR_PAGINATION_SORT_UNSPECIFIED",
		1: "CURSOR_PAGINATION_SORT_ASC",
		2: "CURSOR_PAGINATION_SORT_DESC",
	}
	CursorPaginationSort_value = map[string]int32{
		"CURSOR_PAGINATION_SORT_UNSPECIFIED": 0,
		"CURSOR_PAGINATION_SORT_ASC":         1,
		"CURSOR_PAGINATION_SORT_DESC":        2,
	}
)

func (x CursorPaginationSort) Enum() *CursorPaginationSort {
	p := new(CursorPaginationSort)
	*p = x
	return p
}

func (x CursorPaginationSort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CursorPaginationSort) Descriptor() protoreflect.EnumDescriptor {
	return file_common_type_v1_paging_proto_enumTypes[1].Descriptor()
}

func (CursorPaginationSort) Type() protoreflect.EnumType {
	return &file_common_type_v1_paging_proto_enumTypes[1]
}

func (x CursorPaginationSort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CursorPaginationSort.Descriptor instead.
func (CursorPaginationSort) EnumDescriptor() ([]byte, []int) {
	return file_common_type_v1_paging_proto_rawDescGZIP(), []int{1}
}

type Paging struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Paging) Reset() {
	*x = Paging{}
	mi := &file_common_type_v1_paging_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Paging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paging) ProtoMessage() {}

func (x *Paging) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_v1_paging_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paging.ProtoReflect.Descriptor instead.
func (*Paging) Descriptor() ([]byte, []int) {
	return file_common_type_v1_paging_proto_rawDescGZIP(), []int{0}
}

func (x *Paging) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Paging) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PagingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	TotalPage     int32                  `protobuf:"varint,2,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PagingResponse) Reset() {
	*x = PagingResponse{}
	mi := &file_common_type_v1_paging_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingResponse) ProtoMessage() {}

func (x *PagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_v1_paging_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingResponse.ProtoReflect.Descriptor instead.
func (*PagingResponse) Descriptor() ([]byte, []int) {
	return file_common_type_v1_paging_proto_rawDescGZIP(), []int{1}
}

func (x *PagingResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PagingResponse) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *PagingResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PagingResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type LegacyPagingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	TotalPage     int32                  `protobuf:"varint,2,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LegacyPagingResponse) Reset() {
	*x = LegacyPagingResponse{}
	mi := &file_common_type_v1_paging_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyPagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyPagingResponse) ProtoMessage() {}

func (x *LegacyPagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_v1_paging_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyPagingResponse.ProtoReflect.Descriptor instead.
func (*LegacyPagingResponse) Descriptor() ([]byte, []int) {
	return file_common_type_v1_paging_proto_rawDescGZIP(), []int{2}
}

func (x *LegacyPagingResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LegacyPagingResponse) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *LegacyPagingResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LegacyPagingResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CursorPaging struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Limit         int32                     `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Cursor        string                    `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Direction     CursorPaginationDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=common.type.v1.CursorPaginationDirection" json:"direction,omitempty"`
	Sort          CursorPaginationSort      `protobuf:"varint,4,opt,name=sort,proto3,enum=common.type.v1.CursorPaginationSort" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CursorPaging) Reset() {
	*x = CursorPaging{}
	mi := &file_common_type_v1_paging_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CursorPaging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorPaging) ProtoMessage() {}

func (x *CursorPaging) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_v1_paging_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorPaging.ProtoReflect.Descriptor instead.
func (*CursorPaging) Descriptor() ([]byte, []int) {
	return file_common_type_v1_paging_proto_rawDescGZIP(), []int{3}
}

func (x *CursorPaging) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CursorPaging) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *CursorPaging) GetDirection() CursorPaginationDirection {
	if x != nil {
		return x.Direction
	}
	return CursorPaginationDirection_CURSOR_PAGINATION_DIRECTION_UNSPECIFIED
}

func (x *CursorPaging) GetSort() CursorPaginationSort {
	if x != nil {
		return x.Sort
	}
	return CursorPaginationSort_CURSOR_PAGINATION_SORT_UNSPECIFIED
}

type CursorPagingResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Limit         int32                     `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	CurrCursor    string                    `protobuf:"bytes,2,opt,name=curr_cursor,json=currCursor,proto3" json:"curr_cursor,omitempty"`
	HasPrev       bool                      `protobuf:"varint,3,opt,name=has_prev,json=hasPrev,proto3" json:"has_prev,omitempty"`
	PrevCursor    string                    `protobuf:"bytes,4,opt,name=prev_cursor,json=prevCursor,proto3" json:"prev_cursor,omitempty"`
	HasNext       bool                      `protobuf:"varint,5,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
	NextCursor    string                    `protobuf:"bytes,6,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	Direction     CursorPaginationDirection `protobuf:"varint,7,opt,name=direction,proto3,enum=common.type.v1.CursorPaginationDirection" json:"direction,omitempty"`
	Sort          CursorPaginationSort      `protobuf:"varint,8,opt,name=sort,proto3,enum=common.type.v1.CursorPaginationSort" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CursorPagingResponse) Reset() {
	*x = CursorPagingResponse{}
	mi := &file_common_type_v1_paging_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CursorPagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorPagingResponse) ProtoMessage() {}

func (x *CursorPagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_type_v1_paging_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorPagingResponse.ProtoReflect.Descriptor instead.
func (*CursorPagingResponse) Descriptor() ([]byte, []int) {
	return file_common_type_v1_paging_proto_rawDescGZIP(), []int{4}
}

func (x *CursorPagingResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CursorPagingResponse) GetCurrCursor() string {
	if x != nil {
		return x.CurrCursor
	}
	return ""
}

func (x *CursorPagingResponse) GetHasPrev() bool {
	if x != nil {
		return x.HasPrev
	}
	return false
}

func (x *CursorPagingResponse) GetPrevCursor() string {
	if x != nil {
		return x.PrevCursor
	}
	return ""
}

func (x *CursorPagingResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *CursorPagingResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *CursorPagingResponse) GetDirection() CursorPaginationDirection {
	if x != nil {
		return x.Direction
	}
	return CursorPaginationDirection_CURSOR_PAGINATION_DIRECTION_UNSPECIFIED
}

func (x *CursorPagingResponse) GetSort() CursorPaginationSort {
	if x != nil {
		return x.Sort
	}
	return CursorPaginationSort_CURSOR_PAGINATION_SORT_UNSPECIFIED
}

var File_common_type_v1_paging_proto protoreflect.FileDescriptor

var file_common_type_v1_paging_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x06, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6f,
	0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x79, 0x0a, 0x14, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x0c, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0xc8, 0x02, 0x0a,
	0x14, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x76, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x65, 0x76, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e,
	0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x72,
	0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x2a, 0xc7, 0x01, 0x0a, 0x19, 0x43, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x27, 0x43, 0x55, 0x52, 0x53, 0x4f, 0x52, 0x5f,
	0x50, 0x41, 0x47, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x1a, 0x0f, 0xa2, 0xc0, 0x02, 0x0b, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x23, 0x43, 0x55, 0x52, 0x53, 0x4f, 0x52, 0x5f, 0x50, 0x41,
	0x47, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x01, 0x1a, 0x0b, 0xa2, 0xc0,
	0x02, 0x07, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x36, 0x0a, 0x24, 0x43, 0x55, 0x52,
	0x53, 0x4f, 0x52, 0x5f, 0x50, 0x41, 0x47, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x57, 0x41, 0x52,
	0x44, 0x10, 0x02, 0x1a, 0x0c, 0xa2, 0xc0, 0x02, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72,
	0x64, 0x2a, 0xa3, 0x01, 0x0a, 0x14, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x22, 0x43, 0x55,
	0x52, 0x53, 0x4f, 0x52, 0x5f, 0x50, 0x41, 0x47, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x4f, 0x52, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x1a, 0x0f, 0xa2, 0xc0, 0x02, 0x0b, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x1a, 0x43, 0x55, 0x52, 0x53, 0x4f, 0x52, 0x5f, 0x50, 0x41,
	0x47, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x41, 0x53,
	0x43, 0x10, 0x01, 0x1a, 0x07, 0xa2, 0xc0, 0x02, 0x03, 0x41, 0x73, 0x63, 0x12, 0x29, 0x0a, 0x1b,
	0x43, 0x55, 0x52, 0x53, 0x4f, 0x52, 0x5f, 0x50, 0x41, 0x47, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x1a, 0x08, 0xa2,
	0xc0, 0x02, 0x04, 0x44, 0x65, 0x73, 0x63, 0x42, 0xb9, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0b,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x61, 0x72, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x67, 0x65, 0x61, 0x2d, 0x6e, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x64, 0x6b, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x54,
	0x58, 0xaa, 0x02, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x54, 0x79, 0x70, 0x65,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x54, 0x79, 0x70,
	0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3a, 0x3a, 0x54, 0x79, 0x70, 0x65, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_common_type_v1_paging_proto_rawDescOnce sync.Once
	file_common_type_v1_paging_proto_rawDescData []byte
)

func file_common_type_v1_paging_proto_rawDescGZIP() []byte {
	file_common_type_v1_paging_proto_rawDescOnce.Do(func() {
		file_common_type_v1_paging_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_type_v1_paging_proto_rawDesc), len(file_common_type_v1_paging_proto_rawDesc)))
	})
	return file_common_type_v1_paging_proto_rawDescData
}

var file_common_type_v1_paging_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_common_type_v1_paging_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_common_type_v1_paging_proto_goTypes = []any{
	(CursorPaginationDirection)(0), // 0: common.type.v1.CursorPaginationDirection
	(CursorPaginationSort)(0),      // 1: common.type.v1.CursorPaginationSort
	(*Paging)(nil),                 // 2: common.type.v1.Paging
	(*PagingResponse)(nil),         // 3: common.type.v1.PagingResponse
	(*LegacyPagingResponse)(nil),   // 4: common.type.v1.LegacyPagingResponse
	(*CursorPaging)(nil),           // 5: common.type.v1.CursorPaging
	(*CursorPagingResponse)(nil),   // 6: common.type.v1.CursorPagingResponse
}
var file_common_type_v1_paging_proto_depIdxs = []int32{
	0, // 0: common.type.v1.CursorPaging.direction:type_name -> common.type.v1.CursorPaginationDirection
	1, // 1: common.type.v1.CursorPaging.sort:type_name -> common.type.v1.CursorPaginationSort
	0, // 2: common.type.v1.CursorPagingResponse.direction:type_name -> common.type.v1.CursorPaginationDirection
	1, // 3: common.type.v1.CursorPagingResponse.sort:type_name -> common.type.v1.CursorPaginationSort
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_common_type_v1_paging_proto_init() }
func file_common_type_v1_paging_proto_init() {
	if File_common_type_v1_paging_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_type_v1_paging_proto_rawDesc), len(file_common_type_v1_paging_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_type_v1_paging_proto_goTypes,
		DependencyIndexes: file_common_type_v1_paging_proto_depIdxs,
		EnumInfos:         file_common_type_v1_paging_proto_enumTypes,
		MessageInfos:      file_common_type_v1_paging_proto_msgTypes,
	}.Build()
	File_common_type_v1_paging_proto = out.File
	file_common_type_v1_paging_proto_goTypes = nil
	file_common_type_v1_paging_proto_depIdxs = nil
}
