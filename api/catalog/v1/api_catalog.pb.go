// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: api/catalog/v1/api_catalog.proto

package catalogv1

import (
	v1 "github.com/gearment/gea-next/vendorsdk/common/type/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListCatalogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging   *v1.Paging           `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Filter   *VendorCatalogFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	IsLegacy bool                 `protobuf:"varint,3,opt,name=is_legacy,json=isLegacy,proto3" json:"is_legacy,omitempty"`
}

func (x *ListCatalogRequest) Reset() {
	*x = ListCatalogRequest{}
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogRequest) ProtoMessage() {}

func (x *ListCatalogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogRequest.ProtoReflect.Descriptor instead.
func (*ListCatalogRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_api_catalog_proto_rawDescGZIP(), []int{0}
}

func (x *ListCatalogRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListCatalogRequest) GetFilter() *VendorCatalogFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListCatalogRequest) GetIsLegacy() bool {
	if x != nil {
		return x.IsLegacy
	}
	return false
}

type ListCatalogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging *v1.PagingResponse `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"` // @gotags: mapstructure:"paging"
	Data   []*VendorCatalog   `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`     // @gotags: mapstructure:"data"
}

func (x *ListCatalogResponse) Reset() {
	*x = ListCatalogResponse{}
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogResponse) ProtoMessage() {}

func (x *ListCatalogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogResponse) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_api_catalog_proto_rawDescGZIP(), []int{1}
}

func (x *ListCatalogResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListCatalogResponse) GetData() []*VendorCatalog {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListCatalogVariantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging   *v1.Paging                  `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Filter   *VendorCatalogVariantFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	IsLegacy bool                        `protobuf:"varint,3,opt,name=is_legacy,json=isLegacy,proto3" json:"is_legacy,omitempty"`
}

func (x *ListCatalogVariantRequest) Reset() {
	*x = ListCatalogVariantRequest{}
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogVariantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogVariantRequest) ProtoMessage() {}

func (x *ListCatalogVariantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogVariantRequest.ProtoReflect.Descriptor instead.
func (*ListCatalogVariantRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_api_catalog_proto_rawDescGZIP(), []int{2}
}

func (x *ListCatalogVariantRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListCatalogVariantRequest) GetFilter() *VendorCatalogVariantFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListCatalogVariantRequest) GetIsLegacy() bool {
	if x != nil {
		return x.IsLegacy
	}
	return false
}

type ListCatalogVariantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging *v1.PagingResponse      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"` // @gotags: mapstructure:"paging"
	Data   []*VendorCatalogVariant `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`     // @gotags: mapstructure:"data"
}

func (x *ListCatalogVariantResponse) Reset() {
	*x = ListCatalogVariantResponse{}
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogVariantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogVariantResponse) ProtoMessage() {}

func (x *ListCatalogVariantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogVariantResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogVariantResponse) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_api_catalog_proto_rawDescGZIP(), []int{3}
}

func (x *ListCatalogVariantResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListCatalogVariantResponse) GetData() []*VendorCatalogVariant {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListCatalogStockStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging *v1.Paging                  `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Filter *VendorCatalogVariantFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListCatalogStockStatusRequest) Reset() {
	*x = ListCatalogStockStatusRequest{}
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogStockStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogStockStatusRequest) ProtoMessage() {}

func (x *ListCatalogStockStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogStockStatusRequest.ProtoReflect.Descriptor instead.
func (*ListCatalogStockStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_api_catalog_proto_rawDescGZIP(), []int{4}
}

func (x *ListCatalogStockStatusRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListCatalogStockStatusRequest) GetFilter() *VendorCatalogVariantFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListCatalogStockStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging *v1.PagingResponse      `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"` // @gotags: mapstructure:"paging"
	Data   []*VendorCatalogVariant `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`     // @gotags: mapstructure:"data"
}

func (x *ListCatalogStockStatusResponse) Reset() {
	*x = ListCatalogStockStatusResponse{}
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCatalogStockStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogStockStatusResponse) ProtoMessage() {}

func (x *ListCatalogStockStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogStockStatusResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogStockStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_api_catalog_proto_rawDescGZIP(), []int{5}
}

func (x *ListCatalogStockStatusResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *ListCatalogStockStatusResponse) GetData() []*VendorCatalogVariant {
	if x != nil {
		return x.Data
	}
	return nil
}

type LegacyListCatalogVariantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging      *v1.Paging            `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Credentials *v1.LegacyCredentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *LegacyListCatalogVariantRequest) Reset() {
	*x = LegacyListCatalogVariantRequest{}
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyListCatalogVariantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyListCatalogVariantRequest) ProtoMessage() {}

func (x *LegacyListCatalogVariantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyListCatalogVariantRequest.ProtoReflect.Descriptor instead.
func (*LegacyListCatalogVariantRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_api_catalog_proto_rawDescGZIP(), []int{6}
}

func (x *LegacyListCatalogVariantRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *LegacyListCatalogVariantRequest) GetCredentials() *v1.LegacyCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type LegacyListCatalogVariantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging *v1.PagingResponse     `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"` // @gotags: mapstructure:"paging"
	Data   []*LegacyVendorCatalog `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`     // @gotags: mapstructure:"data"
}

func (x *LegacyListCatalogVariantResponse) Reset() {
	*x = LegacyListCatalogVariantResponse{}
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyListCatalogVariantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyListCatalogVariantResponse) ProtoMessage() {}

func (x *LegacyListCatalogVariantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyListCatalogVariantResponse.ProtoReflect.Descriptor instead.
func (*LegacyListCatalogVariantResponse) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_api_catalog_proto_rawDescGZIP(), []int{7}
}

func (x *LegacyListCatalogVariantResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *LegacyListCatalogVariantResponse) GetData() []*LegacyVendorCatalog {
	if x != nil {
		return x.Data
	}
	return nil
}

type LegacyListCatalogStockStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging      *v1.Paging            `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	Credentials *v1.LegacyCredentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Type        string                `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *LegacyListCatalogStockStatusRequest) Reset() {
	*x = LegacyListCatalogStockStatusRequest{}
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyListCatalogStockStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyListCatalogStockStatusRequest) ProtoMessage() {}

func (x *LegacyListCatalogStockStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyListCatalogStockStatusRequest.ProtoReflect.Descriptor instead.
func (*LegacyListCatalogStockStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_api_catalog_proto_rawDescGZIP(), []int{8}
}

func (x *LegacyListCatalogStockStatusRequest) GetPaging() *v1.Paging {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *LegacyListCatalogStockStatusRequest) GetCredentials() *v1.LegacyCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *LegacyListCatalogStockStatusRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type LegacyListCatalogStockStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paging *v1.PagingResponse            `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"` // @gotags: mapstructure:"paging"
	Data   []*LegacyVendorCatalogVariant `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`     // @gotags: mapstructure:"data"
}

func (x *LegacyListCatalogStockStatusResponse) Reset() {
	*x = LegacyListCatalogStockStatusResponse{}
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyListCatalogStockStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyListCatalogStockStatusResponse) ProtoMessage() {}

func (x *LegacyListCatalogStockStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_catalog_v1_api_catalog_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyListCatalogStockStatusResponse.ProtoReflect.Descriptor instead.
func (*LegacyListCatalogStockStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_catalog_v1_api_catalog_proto_rawDescGZIP(), []int{9}
}

func (x *LegacyListCatalogStockStatusResponse) GetPaging() *v1.PagingResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

func (x *LegacyListCatalogStockStatusResponse) GetData() []*LegacyVendorCatalogVariant {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_api_catalog_v1_api_catalog_proto protoreflect.FileDescriptor

var file_api_catalog_v1_api_catalog_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x28, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x01, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x22, 0x80, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xac, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x42,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x22,
	0x8e, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x93, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x12, 0x42, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x92, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x96, 0x01, 0x0a, 0x1f,
	0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x43, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x20, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x23, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x24,
	0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0xc0, 0x01, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x42, 0x0f, 0x41, 0x70, 0x69, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x61, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x61, 0x2d,
	0x6e, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x64, 0x6b, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x43, 0x58, 0xaa, 0x02, 0x0e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0e, 0x41, 0x70, 0x69, 0x5c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1a, 0x41, 0x70, 0x69, 0x5c, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x41,
	0x70, 0x69, 0x3a, 0x3a, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_catalog_v1_api_catalog_proto_rawDescOnce sync.Once
	file_api_catalog_v1_api_catalog_proto_rawDescData = file_api_catalog_v1_api_catalog_proto_rawDesc
)

func file_api_catalog_v1_api_catalog_proto_rawDescGZIP() []byte {
	file_api_catalog_v1_api_catalog_proto_rawDescOnce.Do(func() {
		file_api_catalog_v1_api_catalog_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_catalog_v1_api_catalog_proto_rawDescData)
	})
	return file_api_catalog_v1_api_catalog_proto_rawDescData
}

var file_api_catalog_v1_api_catalog_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_catalog_v1_api_catalog_proto_goTypes = []any{
	(*ListCatalogRequest)(nil),                   // 0: api.catalog.v1.ListCatalogRequest
	(*ListCatalogResponse)(nil),                  // 1: api.catalog.v1.ListCatalogResponse
	(*ListCatalogVariantRequest)(nil),            // 2: api.catalog.v1.ListCatalogVariantRequest
	(*ListCatalogVariantResponse)(nil),           // 3: api.catalog.v1.ListCatalogVariantResponse
	(*ListCatalogStockStatusRequest)(nil),        // 4: api.catalog.v1.ListCatalogStockStatusRequest
	(*ListCatalogStockStatusResponse)(nil),       // 5: api.catalog.v1.ListCatalogStockStatusResponse
	(*LegacyListCatalogVariantRequest)(nil),      // 6: api.catalog.v1.LegacyListCatalogVariantRequest
	(*LegacyListCatalogVariantResponse)(nil),     // 7: api.catalog.v1.LegacyListCatalogVariantResponse
	(*LegacyListCatalogStockStatusRequest)(nil),  // 8: api.catalog.v1.LegacyListCatalogStockStatusRequest
	(*LegacyListCatalogStockStatusResponse)(nil), // 9: api.catalog.v1.LegacyListCatalogStockStatusResponse
	(*v1.Paging)(nil),                            // 10: common.type.v1.Paging
	(*VendorCatalogFilter)(nil),                  // 11: api.catalog.v1.VendorCatalogFilter
	(*v1.PagingResponse)(nil),                    // 12: common.type.v1.PagingResponse
	(*VendorCatalog)(nil),                        // 13: api.catalog.v1.VendorCatalog
	(*VendorCatalogVariantFilter)(nil),           // 14: api.catalog.v1.VendorCatalogVariantFilter
	(*VendorCatalogVariant)(nil),                 // 15: api.catalog.v1.VendorCatalogVariant
	(*v1.LegacyCredentials)(nil),                 // 16: common.type.v1.LegacyCredentials
	(*LegacyVendorCatalog)(nil),                  // 17: api.catalog.v1.LegacyVendorCatalog
	(*LegacyVendorCatalogVariant)(nil),           // 18: api.catalog.v1.LegacyVendorCatalogVariant
}
var file_api_catalog_v1_api_catalog_proto_depIdxs = []int32{
	10, // 0: api.catalog.v1.ListCatalogRequest.paging:type_name -> common.type.v1.Paging
	11, // 1: api.catalog.v1.ListCatalogRequest.filter:type_name -> api.catalog.v1.VendorCatalogFilter
	12, // 2: api.catalog.v1.ListCatalogResponse.paging:type_name -> common.type.v1.PagingResponse
	13, // 3: api.catalog.v1.ListCatalogResponse.data:type_name -> api.catalog.v1.VendorCatalog
	10, // 4: api.catalog.v1.ListCatalogVariantRequest.paging:type_name -> common.type.v1.Paging
	14, // 5: api.catalog.v1.ListCatalogVariantRequest.filter:type_name -> api.catalog.v1.VendorCatalogVariantFilter
	12, // 6: api.catalog.v1.ListCatalogVariantResponse.paging:type_name -> common.type.v1.PagingResponse
	15, // 7: api.catalog.v1.ListCatalogVariantResponse.data:type_name -> api.catalog.v1.VendorCatalogVariant
	10, // 8: api.catalog.v1.ListCatalogStockStatusRequest.paging:type_name -> common.type.v1.Paging
	14, // 9: api.catalog.v1.ListCatalogStockStatusRequest.filter:type_name -> api.catalog.v1.VendorCatalogVariantFilter
	12, // 10: api.catalog.v1.ListCatalogStockStatusResponse.paging:type_name -> common.type.v1.PagingResponse
	15, // 11: api.catalog.v1.ListCatalogStockStatusResponse.data:type_name -> api.catalog.v1.VendorCatalogVariant
	10, // 12: api.catalog.v1.LegacyListCatalogVariantRequest.paging:type_name -> common.type.v1.Paging
	16, // 13: api.catalog.v1.LegacyListCatalogVariantRequest.credentials:type_name -> common.type.v1.LegacyCredentials
	12, // 14: api.catalog.v1.LegacyListCatalogVariantResponse.paging:type_name -> common.type.v1.PagingResponse
	17, // 15: api.catalog.v1.LegacyListCatalogVariantResponse.data:type_name -> api.catalog.v1.LegacyVendorCatalog
	10, // 16: api.catalog.v1.LegacyListCatalogStockStatusRequest.paging:type_name -> common.type.v1.Paging
	16, // 17: api.catalog.v1.LegacyListCatalogStockStatusRequest.credentials:type_name -> common.type.v1.LegacyCredentials
	12, // 18: api.catalog.v1.LegacyListCatalogStockStatusResponse.paging:type_name -> common.type.v1.PagingResponse
	18, // 19: api.catalog.v1.LegacyListCatalogStockStatusResponse.data:type_name -> api.catalog.v1.LegacyVendorCatalogVariant
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_api_catalog_v1_api_catalog_proto_init() }
func file_api_catalog_v1_api_catalog_proto_init() {
	if File_api_catalog_v1_api_catalog_proto != nil {
		return
	}
	file_api_catalog_v1_data_catalog_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_catalog_v1_api_catalog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_catalog_v1_api_catalog_proto_goTypes,
		DependencyIndexes: file_api_catalog_v1_api_catalog_proto_depIdxs,
		MessageInfos:      file_api_catalog_v1_api_catalog_proto_msgTypes,
	}.Build()
	File_api_catalog_v1_api_catalog_proto = out.File
	file_api_catalog_v1_api_catalog_proto_rawDesc = nil
	file_api_catalog_v1_api_catalog_proto_goTypes = nil
	file_api_catalog_v1_api_catalog_proto_depIdxs = nil
}
